2025-08-11 01:12:44.544 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Starting DataInitializerTest using Java 21.0.5 with PID 69458 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:12:44.546 [Test worker] [/] DEBUG c.j.p.config.DataInitializerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:12:44.546 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - The following 1 profile is active: "dev"
2025-08-11 01:12:45.157 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:12:45.253 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 1 R2DBC repository interface.
2025-08-11 01:12:45.651 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:12:45.788 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:12:45.821 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:12:45.839 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:12:46.457 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:12:46.474 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:12:46.559 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:12:46.590 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:12:46.622 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:12:46.834 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:12:46.868 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:12:46.879 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:12:46.883 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.config.DataInitializerTest@6779af40]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@1259b2a5 testClass = com.jade.platform.config.DataInitializerTest, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = ["dev"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@fc258b1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@56303b57, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@34f7234e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@101639ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1dd6d4b7, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@60975100, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@1b2c4efb, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@1af89a71], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:14:41.459 [Test worker] [/] INFO  c.j.p.UserServiceApplicationTests - Starting UserServiceApplicationTests using Java 21.0.5 with PID 69987 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:14:41.461 [Test worker] [/] DEBUG c.j.p.UserServiceApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:14:41.462 [Test worker] [/] INFO  c.j.p.UserServiceApplicationTests - The following 1 profile is active: "dev"
2025-08-11 01:14:42.186 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:14:42.275 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 1 R2DBC repository interface.
2025-08-11 01:14:42.672 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:14:42.787 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:14:42.819 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:14:42.834 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:14:43.365 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:14:43.381 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:14:43.479 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:14:43.508 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:14:43.553 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:14:43.769 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:14:43.801 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:14:43.812 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:14:43.816 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.UserServiceApplicationTests@56fc2cea]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@28f081ad testClass = com.jade.platform.UserServiceApplicationTests, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@3016fd5e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@2b0f373b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@50ecde95, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@d3957fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3a6f2de3, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@34f7234e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@424ebba3, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@616cb6a1], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:15:19.506 [Test worker] [/] INFO  c.j.p.UserServiceApplicationTests - Starting UserServiceApplicationTests using Java 21.0.5 with PID 70021 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:15:19.507 [Test worker] [/] DEBUG c.j.p.UserServiceApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:15:19.507 [Test worker] [/] INFO  c.j.p.UserServiceApplicationTests - The following 1 profile is active: "dev"
2025-08-11 01:15:20.092 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:15:20.199 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 1 R2DBC repository interface.
2025-08-11 01:15:20.518 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:15:20.628 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:15:20.660 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:15:20.677 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:15:21.247 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:15:21.266 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:15:21.375 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:15:21.406 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:15:21.446 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:15:21.704 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:15:21.738 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:15:21.752 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:15:21.756 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.UserServiceApplicationTests@73158d35]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@7b6b8cea testClass = com.jade.platform.UserServiceApplicationTests, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@3016fd5e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@2b0f373b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@50ecde95, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@d3957fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3a6f2de3, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@34f7234e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@424ebba3, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@616cb6a1], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:17:10.098 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 70178 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:17:10.098 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:17:10.099 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:17:11.125 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:17:11.135 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:17:11.197 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:17:11.226 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:17:11.244 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.416 seconds (process running for 2.039)
2025-08-11 01:17:11.284 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dad535f] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:17:11.296 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [719176a9] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:17:11.302 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:17:11.306 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [719176a9] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:17:11.321 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:17:11.348 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [719176a9] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:17:11.348 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [719176a9] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.362 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [719176a9] Encoding [CatalogDTO[id=bfc7a1ea-7555-482a-92eb-a5ebc6d42427, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:17:11.371 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [719176a9] Completed 200 OK
2025-08-11 01:17:11.371 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:17:11.373 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dad535f] [4e89700f] Response 200 OK
2025-08-11 01:17:11.406 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3dad535f] [4e89700f] Decoded [CatalogDTO[id=bfc7a1ea-7555-482a-92eb-a5ebc6d42427, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:17:11.406 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [719176a9] Encoding [CatalogDTO[id=7b077dd0-7a2e-4c49-8a6c-e2f4f83d865f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:17:11.407 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3dad535f] [4e89700f] Decoded [CatalogDTO[id=7b077dd0-7a2e-4c49-8a6c-e2f4f83d865f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:17:11.425 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a69014e] HTTP DELETE /api/v1/catalogs/46df6b0c-8fff-4d77-9ac8-889a7de8b09f
2025-08-11 01:17:11.425 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [11461187] HTTP DELETE "/api/v1/catalogs/46df6b0c-8fff-4d77-9ac8-889a7de8b09f"
2025-08-11 01:17:11.425 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/46df6b0c-8fff-4d77-9ac8-889a7de8b09f
2025-08-11 01:17:11.426 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [11461187] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:17:11.426 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 46df6b0c-8fff-4d77-9ac8-889a7de8b09f
2025-08-11 01:17:11.427 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [11461187] Completed 204 NO_CONTENT
2025-08-11 01:17:11.429 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:17:11.429 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a69014e] [1007d60a] Response 204 NO_CONTENT
2025-08-11 01:17:11.433 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12a0d249] HTTP POST /api/v1/catalogs
2025-08-11 01:17:11.435 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [12a0d249] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:17:11.436 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [349fe5b3] HTTP POST "/api/v1/catalogs"
2025-08-11 01:17:11.436 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:17:11.436 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [349fe5b3] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:17:11.438 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [349fe5b3] Content-Type:application/json
2025-08-11 01:17:11.438 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [349fe5b3] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.444 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [349fe5b3] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:17:11.480 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=53c8c9de-7656-433c-80fb-d9b401558f85, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=7e147ea9-9217-4f47-b02f-2161127a6601, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:17:11.480 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [349fe5b3] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:17:11.481 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [349fe5b3] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.481 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [349fe5b3] Encoding [CatalogDTO[id=1475ab1b-9247-469d-95c6-8fd4a0ee76f0, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:17:11.482 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [349fe5b3] Completed 201 CREATED
2025-08-11 01:17:11.482 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:17:11.482 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12a0d249] [5ed33930] Response 201 CREATED
2025-08-11 01:17:11.483 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [12a0d249] [5ed33930] Decoded [CatalogDTO[id=1475ab1b-9247-469d-95c6-8fd4a0ee76f0, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:17:11.487 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c9ef37b] HTTP GET /api/v1/catalogs/cdfcf220-54f2-4e77-b15f-64a687ab63bf
2025-08-11 01:17:11.487 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3cd84c47] HTTP GET "/api/v1/catalogs/cdfcf220-54f2-4e77-b15f-64a687ab63bf"
2025-08-11 01:17:11.488 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/cdfcf220-54f2-4e77-b15f-64a687ab63bf
2025-08-11 01:17:11.488 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3cd84c47] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:17:11.488 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: cdfcf220-54f2-4e77-b15f-64a687ab63bf
2025-08-11 01:17:11.489 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3cd84c47] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:17:11.489 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3cd84c47] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.489 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [3cd84c47] Encoding [CatalogDTO[id=cdfcf220-54f2-4e77-b15f-64a687ab63bf, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:17:11.489 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3cd84c47] Completed 200 OK
2025-08-11 01:17:11.489 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:17:11.490 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c9ef37b] [321fa5ac] Response 200 OK
2025-08-11 01:17:11.490 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3c9ef37b] [321fa5ac] Decoded [CatalogDTO[id=cdfcf220-54f2-4e77-b15f-64a687ab63bf, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:17:11.493 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [225ddf5f] HTTP PUT /api/v1/catalogs/34851509-d5df-476c-8a0a-d2659668ce80
2025-08-11 01:17:11.494 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [225ddf5f] Encoding [CatalogDTO[id=34851509-d5df-476c-8a0a-d2659668ce80, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:17:11.495 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5f344ffa] HTTP PUT "/api/v1/catalogs/34851509-d5df-476c-8a0a-d2659668ce80"
2025-08-11 01:17:11.495 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/34851509-d5df-476c-8a0a-d2659668ce80
2025-08-11 01:17:11.495 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5f344ffa] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:17:11.495 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [5f344ffa] Content-Type:application/json
2025-08-11 01:17:11.495 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [5f344ffa] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.496 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [5f344ffa] Decoded [CatalogDTO[id=34851509-d5df-476c-8a0a-d2659668ce80, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:17:11.497 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 34851509-d5df-476c-8a0a-d2659668ce80
2025-08-11 01:17:11.497 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5f344ffa] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:17:11.497 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5f344ffa] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:17:11.497 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [5f344ffa] Encoding [CatalogDTO[id=34851509-d5df-476c-8a0a-d2659668ce80, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:17:11.498 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5f344ffa] Completed 200 OK
2025-08-11 01:17:11.498 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:17:11.498 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [225ddf5f] [227fcbc7] Response 200 OK
2025-08-11 01:17:11.498 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [225ddf5f] [227fcbc7] Decoded [CatalogDTO[id=34851509-d5df-476c-8a0a-d2659668ce80, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:18:14.525 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 70309 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:18:14.530 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:18:14.530 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:18:15.522 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:18:15.529 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:18:15.585 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:18:15.626 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:18:15.684 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.458 seconds (process running for 2.099)
2025-08-11 01:18:15.727 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c3679e5] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:18:15.739 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [17090886] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:18:15.746 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:18:15.750 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [17090886] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:18:15.765 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:18:15.799 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [17090886] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:18:15.800 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [17090886] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.820 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [17090886] Encoding [CatalogDTO[id=205252f3-1176-4b34-be68-a6b51ec2c72c, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:18:15.829 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [17090886] Completed 200 OK
2025-08-11 01:18:15.830 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:18:15.831 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c3679e5] [696e6f97] Response 200 OK
2025-08-11 01:18:15.875 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2c3679e5] [696e6f97] Decoded [CatalogDTO[id=205252f3-1176-4b34-be68-a6b51ec2c72c, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:18:15.875 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [17090886] Encoding [CatalogDTO[id=6d3e65b4-83aa-4a3f-a9a2-10ad6f4ce490, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:18:15.875 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2c3679e5] [696e6f97] Decoded [CatalogDTO[id=6d3e65b4-83aa-4a3f-a9a2-10ad6f4ce490, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:18:15.889 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79777da7] HTTP DELETE /api/v1/catalogs/2f2e66cf-bd93-440a-8933-62691b7566d4
2025-08-11 01:18:15.890 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4e451c4c] HTTP DELETE "/api/v1/catalogs/2f2e66cf-bd93-440a-8933-62691b7566d4"
2025-08-11 01:18:15.890 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/2f2e66cf-bd93-440a-8933-62691b7566d4
2025-08-11 01:18:15.890 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4e451c4c] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:18:15.891 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 2f2e66cf-bd93-440a-8933-62691b7566d4
2025-08-11 01:18:15.892 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4e451c4c] Completed 204 NO_CONTENT
2025-08-11 01:18:15.893 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:18:15.893 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79777da7] [2dd7ff7b] Response 204 NO_CONTENT
2025-08-11 01:18:15.897 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f4fc83f] HTTP POST /api/v1/catalogs
2025-08-11 01:18:15.899 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6f4fc83f] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:18:15.899 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [35f48a59] HTTP POST "/api/v1/catalogs"
2025-08-11 01:18:15.900 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:18:15.900 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [35f48a59] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:18:15.901 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [35f48a59] Content-Type:application/json
2025-08-11 01:18:15.901 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [35f48a59] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.908 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [35f48a59] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:18:15.943 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=542c914c-b0df-49d4-86f7-dca7d139bf1f, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=3c316134-55cb-4e74-91fc-a847a165b156, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:18:15.944 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [35f48a59] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:18:15.944 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [35f48a59] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.944 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [35f48a59] Encoding [CatalogDTO[id=a4f2dcfb-fa2a-4232-bb5c-8d2992b188f2, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:18:15.945 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [35f48a59] Completed 201 CREATED
2025-08-11 01:18:15.945 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:18:15.946 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f4fc83f] [6850c6d0] Response 201 CREATED
2025-08-11 01:18:15.947 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6f4fc83f] [6850c6d0] Decoded [CatalogDTO[id=a4f2dcfb-fa2a-4232-bb5c-8d2992b188f2, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:18:15.950 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4feec184] HTTP GET /api/v1/catalogs/c25ed303-acf5-463d-a64e-afe712988f34
2025-08-11 01:18:15.951 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [76dec21e] HTTP GET "/api/v1/catalogs/c25ed303-acf5-463d-a64e-afe712988f34"
2025-08-11 01:18:15.951 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/c25ed303-acf5-463d-a64e-afe712988f34
2025-08-11 01:18:15.951 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [76dec21e] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:18:15.952 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: c25ed303-acf5-463d-a64e-afe712988f34
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [76dec21e] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [76dec21e] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [76dec21e] Encoding [CatalogDTO[id=c25ed303-acf5-463d-a64e-afe712988f34, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [76dec21e] Completed 200 OK
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:18:15.953 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4feec184] [781932b5] Response 200 OK
2025-08-11 01:18:15.954 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [4feec184] [781932b5] Decoded [CatalogDTO[id=c25ed303-acf5-463d-a64e-afe712988f34, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:18:15.957 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [57b3d869] HTTP PUT /api/v1/catalogs/41422e05-eeab-4022-b6d1-8472db561577
2025-08-11 01:18:15.958 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [57b3d869] Encoding [CatalogDTO[id=41422e05-eeab-4022-b6d1-8472db561577, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:18:15.958 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5cab0327] HTTP PUT "/api/v1/catalogs/41422e05-eeab-4022-b6d1-8472db561577"
2025-08-11 01:18:15.959 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/41422e05-eeab-4022-b6d1-8472db561577
2025-08-11 01:18:15.959 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5cab0327] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:18:15.959 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [5cab0327] Content-Type:application/json
2025-08-11 01:18:15.959 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [5cab0327] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.961 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [5cab0327] Decoded [CatalogDTO[id=41422e05-eeab-4022-b6d1-8472db561577, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:18:15.961 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 41422e05-eeab-4022-b6d1-8472db561577
2025-08-11 01:18:15.962 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5cab0327] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:18:15.962 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5cab0327] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:18:15.962 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [5cab0327] Encoding [CatalogDTO[id=41422e05-eeab-4022-b6d1-8472db561577, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:18:15.963 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5cab0327] Completed 200 OK
2025-08-11 01:18:15.963 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:18:15.963 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [57b3d869] [b4d649e] Response 200 OK
2025-08-11 01:18:15.964 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [57b3d869] [b4d649e] Decoded [CatalogDTO[id=41422e05-eeab-4022-b6d1-8472db561577, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:21:36.292 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Starting DataInitializerTest using Java 21.0.5 with PID 70652 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:21:36.292 [Test worker] [/] DEBUG c.j.p.config.DataInitializerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:21:36.293 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - The following 1 profile is active: "dev"
2025-08-11 01:21:36.826 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:21:36.940 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109 ms. Found 1 R2DBC repository interface.
2025-08-11 01:21:37.233 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:21:37.332 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:21:37.356 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:21:37.370 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:21:37.860 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:21:37.879 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:21:37.957 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:21:37.991 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:21:38.025 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:21:38.228 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:21:38.266 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:21:38.291 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:21:38.298 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.config.DataInitializerTest@687d31a9]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@5b27d03d testClass = com.jade.platform.config.DataInitializerTest, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = ["dev"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dd80673, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@8692d67, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@23bff419, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1d2bd371, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2dd29a59, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@2d36e77e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@c2db68f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@3a7a4ae7], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:22:01.500 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 70674 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:22:01.501 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:22:01.501 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:22:02.494 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:22:02.501 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:22:02.559 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:22:02.586 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:22:02.604 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.353 seconds (process running for 1.971)
2025-08-11 01:22:02.642 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [450d10cb] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:22:02.653 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [67e169bb] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:22:02.659 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:22:02.663 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [67e169bb] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:22:02.679 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:22:02.701 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [67e169bb] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:22:02.702 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [67e169bb] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.714 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [67e169bb] Encoding [CatalogDTO[id=8f7dd3d4-5b96-416a-8ee3-31ed0f49e5bf, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:22:02.723 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [67e169bb] Completed 200 OK
2025-08-11 01:22:02.723 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:22:02.725 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [450d10cb] [20d0e505] Response 200 OK
2025-08-11 01:22:02.758 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [450d10cb] [20d0e505] Decoded [CatalogDTO[id=8f7dd3d4-5b96-416a-8ee3-31ed0f49e5bf, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:22:02.758 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [67e169bb] Encoding [CatalogDTO[id=05683152-1cf6-4990-8200-fa4a3bb4b57f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:22:02.759 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [450d10cb] [20d0e505] Decoded [CatalogDTO[id=05683152-1cf6-4990-8200-fa4a3bb4b57f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:22:02.774 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56da8847] HTTP DELETE /api/v1/catalogs/d3093b96-e446-48e9-afd4-0a9e5d47148e
2025-08-11 01:22:02.775 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2edcb6a1] HTTP DELETE "/api/v1/catalogs/d3093b96-e446-48e9-afd4-0a9e5d47148e"
2025-08-11 01:22:02.775 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/d3093b96-e446-48e9-afd4-0a9e5d47148e
2025-08-11 01:22:02.775 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2edcb6a1] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:22:02.777 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: d3093b96-e446-48e9-afd4-0a9e5d47148e
2025-08-11 01:22:02.777 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2edcb6a1] Completed 204 NO_CONTENT
2025-08-11 01:22:02.778 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:22:02.779 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56da8847] [c9c9963] Response 204 NO_CONTENT
2025-08-11 01:22:02.783 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25f14e93] HTTP POST /api/v1/catalogs
2025-08-11 01:22:02.785 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [25f14e93] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:22:02.786 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2edd7cfe] HTTP POST "/api/v1/catalogs"
2025-08-11 01:22:02.786 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:22:02.787 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2edd7cfe] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:22:02.788 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2edd7cfe] Content-Type:application/json
2025-08-11 01:22:02.788 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2edd7cfe] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.795 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2edd7cfe] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:22:02.828 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=34f03f8d-ba4b-47c1-9ca8-fe000e3769cb, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=e4552b88-f56e-4a50-8370-73c5b4fac950, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:22:02.829 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2edd7cfe] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:22:02.829 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2edd7cfe] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.829 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2edd7cfe] Encoding [CatalogDTO[id=1b9c75e2-1eba-4fa2-b77e-2ead8315d267, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:22:02.830 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2edd7cfe] Completed 201 CREATED
2025-08-11 01:22:02.830 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:22:02.830 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25f14e93] [1dde6dea] Response 201 CREATED
2025-08-11 01:22:02.831 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [25f14e93] [1dde6dea] Decoded [CatalogDTO[id=1b9c75e2-1eba-4fa2-b77e-2ead8315d267, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:22:02.835 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51f4439e] HTTP GET /api/v1/catalogs/7e205f9e-0591-4f25-8db4-191f5605895b
2025-08-11 01:22:02.835 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5c08d9ce] HTTP GET "/api/v1/catalogs/7e205f9e-0591-4f25-8db4-191f5605895b"
2025-08-11 01:22:02.836 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/7e205f9e-0591-4f25-8db4-191f5605895b
2025-08-11 01:22:02.836 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5c08d9ce] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:22:02.836 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 7e205f9e-0591-4f25-8db4-191f5605895b
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5c08d9ce] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5c08d9ce] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [5c08d9ce] Encoding [CatalogDTO[id=7e205f9e-0591-4f25-8db4-191f5605895b, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5c08d9ce] Completed 200 OK
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:22:02.837 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51f4439e] [52cf2c3f] Response 200 OK
2025-08-11 01:22:02.838 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [51f4439e] [52cf2c3f] Decoded [CatalogDTO[id=7e205f9e-0591-4f25-8db4-191f5605895b, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:22:02.842 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [499c4d61] HTTP PUT /api/v1/catalogs/6caa9363-73c3-4c28-88d9-99e3e6aa938d
2025-08-11 01:22:02.843 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [499c4d61] Encoding [CatalogDTO[id=6caa9363-73c3-4c28-88d9-99e3e6aa938d, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:22:02.843 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7a90e93c] HTTP PUT "/api/v1/catalogs/6caa9363-73c3-4c28-88d9-99e3e6aa938d"
2025-08-11 01:22:02.843 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/6caa9363-73c3-4c28-88d9-99e3e6aa938d
2025-08-11 01:22:02.844 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7a90e93c] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:22:02.844 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7a90e93c] Content-Type:application/json
2025-08-11 01:22:02.844 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7a90e93c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.845 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7a90e93c] Decoded [CatalogDTO[id=6caa9363-73c3-4c28-88d9-99e3e6aa938d, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:22:02.845 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 6caa9363-73c3-4c28-88d9-99e3e6aa938d
2025-08-11 01:22:02.846 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7a90e93c] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:22:02.846 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7a90e93c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:22:02.846 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7a90e93c] Encoding [CatalogDTO[id=6caa9363-73c3-4c28-88d9-99e3e6aa938d, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:22:02.846 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7a90e93c] Completed 200 OK
2025-08-11 01:22:02.846 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:22:02.847 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [499c4d61] [16cb8432] Response 200 OK
2025-08-11 01:22:02.847 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [499c4d61] [16cb8432] Decoded [CatalogDTO[id=6caa9363-73c3-4c28-88d9-99e3e6aa938d, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:25:19.738 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Starting DataInitializerTest using Java 21.0.5 with PID 71263 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:25:19.743 [Test worker] [/] DEBUG c.j.p.config.DataInitializerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:25:19.747 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - The following 1 profile is active: "dev"
2025-08-11 01:25:20.327 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:25:20.423 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 1 R2DBC repository interface.
2025-08-11 01:25:20.773 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:25:20.899 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:25:20.932 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:25:20.950 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:25:21.580 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:25:21.600 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:25:21.707 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:25:21.736 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:25:21.781 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:25:22.019 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:25:22.069 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:25:22.088 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:25:22.093 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.config.DataInitializerTest@37fc7e3c]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@25093079 testClass = com.jade.platform.config.DataInitializerTest, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = ["dev"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dd80673, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@8692d67, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@23bff419, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1d2bd371, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2dd29a59, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@2d36e77e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@c2db68f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@517eb86c], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 122 common frames omitted
2025-08-11 01:26:36.681 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Starting DataInitializerTest using Java 21.0.5 with PID 71321 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:26:36.682 [Test worker] [/] DEBUG c.j.p.config.DataInitializerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:26:36.682 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - The following 1 profile is active: "dev"
2025-08-11 01:26:37.181 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:26:37.264 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 1 R2DBC repository interface.
2025-08-11 01:26:37.571 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:26:37.621 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:26:37.648 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:26:37.662 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:26:38.159 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:26:38.174 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:26:38.260 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:26:38.286 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:26:38.329 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:26:38.588 [Test worker] [/] INFO  liquibase.database - Set default schema name to PUBLIC
2025-08-11 01:26:38.802 [Test worker] [/] INFO  liquibase.changelog - Creating database history table with name: PUBLIC.DATABASECHANGELOG
2025-08-11 01:26:38.856 [Test worker] [/] INFO  liquibase.changelog - Reading from PUBLIC.DATABASECHANGELOG
2025-08-11 01:26:38.861 [Test worker] [/] INFO  liquibase.snapshot - Creating snapshot
2025-08-11 01:26:38.897 [Test worker] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 01:26:38.898 [Test worker] [/] INFO  liquibase.command - Using deploymentId: 4871998444
2025-08-11 01:26:38.898 [Test worker] [/] INFO  liquibase.changelog - Reading from PUBLIC.DATABASECHANGELOG
2025-08-11 01:26:38.911 [Test worker] [/] INFO  liquibase.ui - Running Changeset: db/changelog/db.changelog-test.xml::01-test::booking-platform
2025-08-11 01:26:38.916 [Test worker] [/] INFO  liquibase.changelog - Table catalog created
2025-08-11 01:26:38.916 [Test worker] [/] INFO  liquibase.changelog - ChangeSet db/changelog/db.changelog-test.xml::01-test::booking-platform ran successfully in 5ms
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - Run:                          1
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - Previously run:               0
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - -------------------------------
2025-08-11 01:26:38.921 [Test worker] [/] INFO  liquibase.util - Total change sets:            1
2025-08-11 01:26:38.922 [Test worker] [/] INFO  liquibase.util - Update summary generated
2025-08-11 01:26:38.923 [Test worker] [/] INFO  liquibase.command - Update command completed successfully.
2025-08-11 01:26:38.923 [Test worker] [/] INFO  liquibase.ui - Liquibase: Update has been successful. Rows affected: 1
2025-08-11 01:26:38.924 [Test worker] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 01:26:38.924 [Test worker] [/] INFO  liquibase.command - Command execution complete
2025-08-11 01:26:40.547 [Test worker] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 01:26:40.590 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Started DataInitializerTest in 4.114 seconds (process running for 4.722)
2025-08-11 01:26:40.592 [Test worker] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 01:26:40.635 [single-1] [/] DEBUG o.s.r2dbc.core.DefaultDatabaseClient - Executing SQL statement [SELECT COUNT(*) FROM public.catalog]
2025-08-11 01:26:40.642 [single-1] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 01:26:40.676 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:26:40.696 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Required identifier property not found for class com.jade.platform.domain.model.Catalog
	at org.springframework.data.mapping.PersistentEntity.getRequiredIdProperty(PersistentEntity.java:135)
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$11(R2dbcEntityTemplate.java:625)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoUsingWhen.subscribe(MonoUsingWhen.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:139)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:83)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:348)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:547)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:988)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.FluxFlatMap.subscribeOrReturn(FluxFlatMap.java:94)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8876)
	at reactor.core.publisher.FluxUsingWhen$ResourceSubscriber.onNext(FluxUsingWhen.java:198)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxRetry$RetrySubscriber.onNext(FluxRetry.java:88)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:181)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
	at io.r2dbc.pool.MonoDiscardOnCancel$MonoDiscardOnCancelSubscriber.onNext(MonoDiscardOnCancel.java:92)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:294)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:188)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:237)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:469)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.FluxFlatMap.subscribeOrReturn(FluxFlatMap.java:94)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.r2dbc.pool.MonoDiscardOnCancel.subscribe(MonoDiscardOnCancel.java:50)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.pool.AbstractPool$Borrower.deliver(AbstractPool.java:471)
	at reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:435)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onNext(FluxDoOnEach.java:154)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber.onNext(FluxDoOnEach.java:281)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:181)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onNext(MonoSubscribeOn.java:146)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:145)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.trySchedule(MonoSubscribeOn.java:189)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onSubscribe(MonoSubscribeOn.java:134)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:126)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$3(DataInitializer.java:69)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
		at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
		at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
		at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
		at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
		at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
		at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
		at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
		at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
		at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
		at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
		at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
		at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
		at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
		at java.base/java.util.Optional.orElseGet(Optional.java:364)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
		at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
		at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
		at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
		at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
		at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
		at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
		at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
		at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
		at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
		at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
		at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
		at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
		at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
		at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
		at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
		at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
		at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
		at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
		at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
		at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
		at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
		at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-08-11 01:26:40.710 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.config.DataInitializerTest@4a571516]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@7719b257 testClass = com.jade.platform.config.DataInitializerTest, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = ["dev"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dd80673, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@8692d67, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@23bff419, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1d2bd371, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2dd29a59, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@2d36e77e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@c2db68f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@3a7a4ae7], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: Required identifier property not found for class com.jade.platform.domain.model.Catalog
	at org.springframework.data.mapping.PersistentEntity.getRequiredIdProperty(PersistentEntity.java:135)
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$11(R2dbcEntityTemplate.java:625)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoUsingWhen.subscribe(MonoUsingWhen.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:139)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:83)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:348)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:547)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:988)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.FluxFlatMap.subscribeOrReturn(FluxFlatMap.java:94)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8876)
	at reactor.core.publisher.FluxUsingWhen$ResourceSubscriber.onNext(FluxUsingWhen.java:198)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxRetry$RetrySubscriber.onNext(FluxRetry.java:88)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:181)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
	at io.r2dbc.pool.MonoDiscardOnCancel$MonoDiscardOnCancelSubscriber.onNext(MonoDiscardOnCancel.java:92)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:294)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:188)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:237)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:469)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.FluxFlatMap.subscribeOrReturn(FluxFlatMap.java:94)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.r2dbc.pool.MonoDiscardOnCancel.subscribe(MonoDiscardOnCancel.java:50)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.pool.AbstractPool$Borrower.deliver(AbstractPool.java:471)
	at reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:435)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onNext(FluxDoOnEach.java:154)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber.onNext(FluxDoOnEach.java:281)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:181)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onNext(MonoSubscribeOn.java:146)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:145)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.trySchedule(MonoSubscribeOn.java:189)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onSubscribe(MonoSubscribeOn.java:134)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:126)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$3(DataInitializer.java:69)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
		at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
		at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
		at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
		at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
		at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
		at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
		at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
		at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
		at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
		at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
		at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
		at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
		at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
		at java.base/java.util.Optional.orElseGet(Optional.java:364)
		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
		at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
		at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
		at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
		at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
		at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
		at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
		at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
		at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
		at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
		at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
		at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
		at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
		at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
		at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
		at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
		at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
		at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
		at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
		at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
		at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
		at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
		at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
		at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
		at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
		at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
		at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
		at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-08-11 01:27:10.363 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - Starting DataInitializerTest using Java 21.0.5 with PID 71391 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:27:10.364 [Test worker] [/] DEBUG c.j.p.config.DataInitializerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:27:10.365 [Test worker] [/] INFO  c.j.p.config.DataInitializerTest - The following 1 profile is active: "dev"
2025-08-11 01:27:10.921 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:27:11.015 [Test worker] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 1 R2DBC repository interface.
2025-08-11 01:27:11.345 [Test worker] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:27:11.402 [Test worker] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:27:11.432 [Test worker] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:27:11.451 [Test worker] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:27:12.058 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:27:12.079 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:27:12.177 [Test worker] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:27:12.208 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:27:12.246 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:27:12.504 [Test worker] [/] INFO  liquibase.database - Set default schema name to PUBLIC
2025-08-11 01:27:12.730 [Test worker] [/] INFO  liquibase.changelog - Creating database history table with name: PUBLIC.DATABASECHANGELOG
2025-08-11 01:27:12.782 [Test worker] [/] INFO  liquibase.changelog - Reading from PUBLIC.DATABASECHANGELOG
2025-08-11 01:27:12.787 [Test worker] [/] INFO  liquibase.snapshot - Creating snapshot
2025-08-11 01:27:12.825 [Test worker] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 01:27:12.826 [Test worker] [/] INFO  liquibase.command - Using deploymentId: 4872032359
2025-08-11 01:27:12.826 [Test worker] [/] INFO  liquibase.changelog - Reading from PUBLIC.DATABASECHANGELOG
2025-08-11 01:27:12.840 [Test worker] [/] INFO  liquibase.ui - Running Changeset: db/changelog/db.changelog-test.xml::01-test::booking-platform
2025-08-11 01:27:12.845 [Test worker] [/] ERROR liquibase.changelog - ChangeSet db/changelog/db.changelog-test.xml::01-test::booking-platform encountered an exception.
liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:497)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:83)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:185)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:141)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1189)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:790)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:126)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:70)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Scope.child(Scope.java:267)
	at liquibase.Scope.child(Scope.java:271)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:762)
	at org.h2.command.Parser.readIfDataType1(Parser.java:5735)
	at org.h2.command.Parser.readIfDataType(Parser.java:5698)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5680)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5559)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8876)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8819)
	at org.h2.command.Parser.parseCreate(Parser.java:6398)
	at org.h2.command.Parser.parsePrepared(Parser.java:645)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:561)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:491)
	... 163 common frames omitted
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - Run:                          0
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - Previously run:               0
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - -------------------------------
2025-08-11 01:27:12.854 [Test worker] [/] INFO  liquibase.util - Total change sets:            1
2025-08-11 01:27:12.855 [Test worker] [/] INFO  liquibase.util - Update summary generated
2025-08-11 01:27:12.856 [Test worker] [/] INFO  liquibase.command - Update command encountered an exception.
2025-08-11 01:27:12.857 [Test worker] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 01:27:12.858 [Test worker] [/] INFO  liquibase.command - Logging exception.
2025-08-11 01:27:12.858 [Test worker] [/] INFO  liquibase.ui - ERROR: Exception Details
2025-08-11 01:27:12.858 [Test worker] [/] INFO  liquibase.ui - ERROR: Exception Primary Class:  JdbcSQLSyntaxErrorException
2025-08-11 01:27:12.858 [Test worker] [/] INFO  liquibase.ui - ERROR: Exception Primary Reason:  Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232]
2025-08-11 01:27:12.858 [Test worker] [/] INFO  liquibase.ui - ERROR: Exception Primary Source:  H2 2.3.232 (2024-08-11)
2025-08-11 01:27:12.859 [Test worker] [/] INFO  liquibase.command - Command execution complete
2025-08-11 01:27:13.896 [Test worker] [/] WARN  o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
2025-08-11 01:27:13.938 [Test worker] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:27:13.950 [Test worker] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:300)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:155)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	... 135 common frames omitted
Caused by: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:840)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:126)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:70)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Scope.child(Scope.java:267)
	at liquibase.Scope.child(Scope.java:271)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	... 143 common frames omitted
Caused by: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:497)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:83)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:185)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:141)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1189)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:790)
	... 158 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:762)
	at org.h2.command.Parser.readIfDataType1(Parser.java:5735)
	at org.h2.command.Parser.readIfDataType(Parser.java:5698)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5680)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5559)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8876)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8819)
	at org.h2.command.Parser.parseCreate(Parser.java:6398)
	at org.h2.command.Parser.parsePrepared(Parser.java:645)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:561)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:491)
	... 163 common frames omitted
2025-08-11 01:27:13.952 [Test worker] [/] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.jade.platform.config.DataInitializerTest@63b85d97]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@32a541a8 testClass = com.jade.platform.config.DataInitializerTest, locations = [], classes = [com.jade.platform.UserServiceApplication], contextInitializerClasses = [], activeProfiles = ["dev"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dd80673, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@8692d67, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@23bff419, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1d2bd371, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2dd29a59, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@2d36e77e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@c2db68f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@517eb86c], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 91 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 114 common frames omitted
Caused by: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:300)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 117 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:155)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	... 135 common frames omitted
Caused by: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/db.changelog-test.xml::01-test::booking-platform:
     Reason: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:840)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:126)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:70)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Scope.child(Scope.java:267)
	at liquibase.Scope.child(Scope.java:271)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	... 143 common frames omitted
Caused by: liquibase.exception.DatabaseException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232] [Failed SQL: (42001) CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:497)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:83)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:185)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:141)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1189)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:790)
	... 158 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories [*]ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id))"; expected "data type"; SQL statement:
CREATE TABLE PUBLIC.catalog (id UUID NOT NULL, title VARCHAR(255) NOT NULL, description CLOB NOT NULL, price DECIMAL(19, 2) NOT NULL, rating DECIMAL(3, 2), industry_id UUID, industry_name VARCHAR(255), merchant_id UUID, categories ARRAY, tags ARRAY, compliance_status VARCHAR(50) NOT NULL, availability_status VARCHAR(50) NOT NULL, created_on TIMESTAMP NOT NULL, updated_on TIMESTAMP NOT NULL, CONSTRAINT PK_CATALOG PRIMARY KEY (id)) [42001-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:762)
	at org.h2.command.Parser.readIfDataType1(Parser.java:5735)
	at org.h2.command.Parser.readIfDataType(Parser.java:5698)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5680)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5559)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8876)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8819)
	at org.h2.command.Parser.parseCreate(Parser.java:6398)
	at org.h2.command.Parser.parsePrepared(Parser.java:645)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:561)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:491)
	... 163 common frames omitted
2025-08-11 01:30:20.803 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 71613 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:30:20.804 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:30:20.804 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:30:21.003 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:30:21.005 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:30:21.009 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:30:21.021 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:30:21.041 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.316 seconds (process running for 7.022)
2025-08-11 01:30:21.071 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52b11deb] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:30:21.084 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [33e0cfe5] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:30:21.091 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:30:21.095 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [33e0cfe5] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:30:21.109 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:30:21.129 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [33e0cfe5] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:30:21.129 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [33e0cfe5] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.145 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [33e0cfe5] Encoding [CatalogDTO[id=d92818c8-287a-4a3c-95ba-3f113f8b6b7a, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:30:21.153 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [33e0cfe5] Completed 200 OK
2025-08-11 01:30:21.153 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:30:21.156 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52b11deb] [29f385c3] Response 200 OK
2025-08-11 01:30:21.195 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [52b11deb] [29f385c3] Decoded [CatalogDTO[id=d92818c8-287a-4a3c-95ba-3f113f8b6b7a, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:30:21.195 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [33e0cfe5] Encoding [CatalogDTO[id=8e087999-cbe7-47ba-b07b-f4d5be6dfc09, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:30:21.195 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [52b11deb] [29f385c3] Decoded [CatalogDTO[id=8e087999-cbe7-47ba-b07b-f4d5be6dfc09, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:30:21.205 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [35f9c37c] HTTP DELETE /api/v1/catalogs/3a75eb8c-e282-4fb3-a9a2-292fb6d2f64a
2025-08-11 01:30:21.205 [parallel-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [39e19c9b] HTTP DELETE "/api/v1/catalogs/3a75eb8c-e282-4fb3-a9a2-292fb6d2f64a"
2025-08-11 01:30:21.205 [parallel-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/3a75eb8c-e282-4fb3-a9a2-292fb6d2f64a
2025-08-11 01:30:21.206 [parallel-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [39e19c9b] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:30:21.207 [parallel-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 3a75eb8c-e282-4fb3-a9a2-292fb6d2f64a
2025-08-11 01:30:21.207 [parallel-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [39e19c9b] Completed 204 NO_CONTENT
2025-08-11 01:30:21.208 [parallel-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:30:21.208 [parallel-6] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [35f9c37c] [58c6c191] Response 204 NO_CONTENT
2025-08-11 01:30:21.212 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [391133ad] HTTP POST /api/v1/catalogs
2025-08-11 01:30:21.214 [parallel-7] [/] DEBUG org.springframework.web.HttpLogging - [391133ad] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:30:21.214 [parallel-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ad471a3] HTTP POST "/api/v1/catalogs"
2025-08-11 01:30:21.215 [parallel-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:30:21.215 [parallel-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ad471a3] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:30:21.216 [parallel-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [ad471a3] Content-Type:application/json
2025-08-11 01:30:21.216 [parallel-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [ad471a3] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.224 [parallel-7] [/] DEBUG org.springframework.web.HttpLogging - [ad471a3] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:30:21.238 [parallel-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=fb14c957-7936-41bb-bf70-24d388722346, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=21606787-9d85-437d-88de-af07fec1f34c, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:30:21.239 [parallel-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ad471a3] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:30:21.239 [parallel-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ad471a3] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.239 [parallel-7] [/] DEBUG org.springframework.web.HttpLogging - [ad471a3] Encoding [CatalogDTO[id=121debab-3a87-4904-8788-bfb2c184b3fa, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:30:21.240 [parallel-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ad471a3] Completed 201 CREATED
2025-08-11 01:30:21.240 [parallel-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:30:21.240 [parallel-7] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [391133ad] [760e157d] Response 201 CREATED
2025-08-11 01:30:21.242 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [391133ad] [760e157d] Decoded [CatalogDTO[id=121debab-3a87-4904-8788-bfb2c184b3fa, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:30:21.245 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a9d873b] HTTP GET /api/v1/catalogs/0274f472-b5cc-4ff3-9bff-3e40976ed98c
2025-08-11 01:30:21.245 [parallel-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [143defd0] HTTP GET "/api/v1/catalogs/0274f472-b5cc-4ff3-9bff-3e40976ed98c"
2025-08-11 01:30:21.246 [parallel-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/0274f472-b5cc-4ff3-9bff-3e40976ed98c
2025-08-11 01:30:21.246 [parallel-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [143defd0] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:30:21.246 [parallel-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 0274f472-b5cc-4ff3-9bff-3e40976ed98c
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [143defd0] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [143defd0] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG org.springframework.web.HttpLogging - [143defd0] Encoding [CatalogDTO[id=0274f472-b5cc-4ff3-9bff-3e40976ed98c, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [143defd0] Completed 200 OK
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:30:21.247 [parallel-8] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a9d873b] [1afa1327] Response 200 OK
2025-08-11 01:30:21.248 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1a9d873b] [1afa1327] Decoded [CatalogDTO[id=0274f472-b5cc-4ff3-9bff-3e40976ed98c, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:30:21.251 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [22cc2ae5] HTTP PUT /api/v1/catalogs/e7241b6c-d062-4393-b3a2-19e67a63008b
2025-08-11 01:30:21.252 [parallel-9] [/] DEBUG org.springframework.web.HttpLogging - [22cc2ae5] Encoding [CatalogDTO[id=e7241b6c-d062-4393-b3a2-19e67a63008b, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:30:21.252 [parallel-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [28423e1e] HTTP PUT "/api/v1/catalogs/e7241b6c-d062-4393-b3a2-19e67a63008b"
2025-08-11 01:30:21.252 [parallel-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/e7241b6c-d062-4393-b3a2-19e67a63008b
2025-08-11 01:30:21.252 [parallel-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [28423e1e] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:30:21.253 [parallel-9] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [28423e1e] Content-Type:application/json
2025-08-11 01:30:21.253 [parallel-9] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [28423e1e] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.253 [parallel-9] [/] DEBUG org.springframework.web.HttpLogging - [28423e1e] Decoded [CatalogDTO[id=e7241b6c-d062-4393-b3a2-19e67a63008b, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:30:21.254 [parallel-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: e7241b6c-d062-4393-b3a2-19e67a63008b
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [28423e1e] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [28423e1e] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG org.springframework.web.HttpLogging - [28423e1e] Encoding [CatalogDTO[id=e7241b6c-d062-4393-b3a2-19e67a63008b, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [28423e1e] Completed 200 OK
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:30:21.255 [parallel-9] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [22cc2ae5] [1ea86222] Response 200 OK
2025-08-11 01:30:21.256 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [22cc2ae5] [1ea86222] Decoded [CatalogDTO[id=e7241b6c-d062-4393-b3a2-19e67a63008b, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:42:24.259 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 72901 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:42:24.260 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:42:24.260 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:42:25.250 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:42:25.258 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:42:25.317 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:42:25.344 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:42:25.363 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.357 seconds (process running for 1.965)
2025-08-11 01:42:25.402 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [72e36677] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:42:25.413 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [119202ec] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:42:25.420 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:42:25.423 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [119202ec] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:42:25.439 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:42:25.465 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [119202ec] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:42:25.465 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [119202ec] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.478 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [119202ec] Encoding [CatalogDTO[id=7f3bddc8-2b52-4d97-971b-2ae3bfa50901, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:42:25.487 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [119202ec] Completed 200 OK
2025-08-11 01:42:25.487 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:42:25.489 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [72e36677] [6a2e9b27] Response 200 OK
2025-08-11 01:42:25.520 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [72e36677] [6a2e9b27] Decoded [CatalogDTO[id=7f3bddc8-2b52-4d97-971b-2ae3bfa50901, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:42:25.520 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [119202ec] Encoding [CatalogDTO[id=cecf92f1-42a5-4fa6-a6ba-308e08ab83f0, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:42:25.521 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [72e36677] [6a2e9b27] Decoded [CatalogDTO[id=cecf92f1-42a5-4fa6-a6ba-308e08ab83f0, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:42:25.535 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2aa0feb2] HTTP DELETE /api/v1/catalogs/4c779e1d-741a-4429-92d8-043701100e94
2025-08-11 01:42:25.536 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [37fdae36] HTTP DELETE "/api/v1/catalogs/4c779e1d-741a-4429-92d8-043701100e94"
2025-08-11 01:42:25.536 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/4c779e1d-741a-4429-92d8-043701100e94
2025-08-11 01:42:25.536 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [37fdae36] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:42:25.538 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 4c779e1d-741a-4429-92d8-043701100e94
2025-08-11 01:42:25.538 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [37fdae36] Completed 204 NO_CONTENT
2025-08-11 01:42:25.539 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:42:25.539 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2aa0feb2] [31c04eeb] Response 204 NO_CONTENT
2025-08-11 01:42:25.544 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3856d0cb] HTTP POST /api/v1/catalogs
2025-08-11 01:42:25.546 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3856d0cb] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:42:25.547 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4b363556] HTTP POST "/api/v1/catalogs"
2025-08-11 01:42:25.548 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:42:25.548 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4b363556] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:42:25.549 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4b363556] Content-Type:application/json
2025-08-11 01:42:25.549 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4b363556] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.556 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4b363556] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:42:25.589 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=dd50e209-c20a-4623-99b2-7df21d9fec9c, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=4d9af8e5-2a62-44fb-b77d-433935e8419d, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:42:25.590 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4b363556] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:42:25.590 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4b363556] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.590 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4b363556] Encoding [CatalogDTO[id=8a70f4ff-0f01-4cc1-8189-4631a05193af, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:42:25.591 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4b363556] Completed 201 CREATED
2025-08-11 01:42:25.591 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:42:25.591 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3856d0cb] [115659ec] Response 201 CREATED
2025-08-11 01:42:25.593 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3856d0cb] [115659ec] Decoded [CatalogDTO[id=8a70f4ff-0f01-4cc1-8189-4631a05193af, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:42:25.596 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [543d2ef3] HTTP GET /api/v1/catalogs/31d613b6-abad-4b4d-b074-cc1a860f70b3
2025-08-11 01:42:25.596 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5a37f2db] HTTP GET "/api/v1/catalogs/31d613b6-abad-4b4d-b074-cc1a860f70b3"
2025-08-11 01:42:25.596 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/31d613b6-abad-4b4d-b074-cc1a860f70b3
2025-08-11 01:42:25.597 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5a37f2db] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:42:25.597 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 31d613b6-abad-4b4d-b074-cc1a860f70b3
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5a37f2db] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5a37f2db] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [5a37f2db] Encoding [CatalogDTO[id=31d613b6-abad-4b4d-b074-cc1a860f70b3, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5a37f2db] Completed 200 OK
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:42:25.598 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [543d2ef3] [54f007ed] Response 200 OK
2025-08-11 01:42:25.599 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [543d2ef3] [54f007ed] Decoded [CatalogDTO[id=31d613b6-abad-4b4d-b074-cc1a860f70b3, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:42:25.602 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f8415b] HTTP PUT /api/v1/catalogs/75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6
2025-08-11 01:42:25.603 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [45f8415b] Encoding [CatalogDTO[id=75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:42:25.603 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b45d719] HTTP PUT "/api/v1/catalogs/75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6"
2025-08-11 01:42:25.603 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6
2025-08-11 01:42:25.604 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2b45d719] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:42:25.604 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2b45d719] Content-Type:application/json
2025-08-11 01:42:25.604 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2b45d719] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.605 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2b45d719] Decoded [CatalogDTO[id=75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:42:25.606 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6
2025-08-11 01:42:25.606 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b45d719] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:42:25.606 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b45d719] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:42:25.607 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2b45d719] Encoding [CatalogDTO[id=75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:42:25.607 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b45d719] Completed 200 OK
2025-08-11 01:42:25.607 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:42:25.607 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f8415b] [79be2cf0] Response 200 OK
2025-08-11 01:42:25.608 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [45f8415b] [79be2cf0] Decoded [CatalogDTO[id=75d582b3-53bc-4c42-8ff1-4e9e4b2a90a6, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:49:33.617 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 74362 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:49:33.621 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:49:33.621 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:49:34.030 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:49:34.036 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:49:34.061 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:49:34.089 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:49:34.106 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.758 seconds (process running for 2.238)
2025-08-11 01:49:34.129 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [495bc9e7] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:49:34.140 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [430887ea] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:49:34.147 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:49:34.150 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [430887ea] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:49:34.163 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:49:34.187 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [430887ea] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:49:34.187 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [430887ea] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.206 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [430887ea] Encoding [CatalogDTO[id=244b41aa-318e-4331-aabd-f55d4b64dca1, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:49:34.218 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [430887ea] Completed 200 OK
2025-08-11 01:49:34.218 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:49:34.221 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [495bc9e7] [8335711] Response 200 OK
2025-08-11 01:49:34.251 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [495bc9e7] [8335711] Decoded [CatalogDTO[id=244b41aa-318e-4331-aabd-f55d4b64dca1, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:49:34.252 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [430887ea] Encoding [CatalogDTO[id=6b026b2b-3a29-4252-864d-f795a54cc82f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:49:34.252 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [495bc9e7] [8335711] Decoded [CatalogDTO[id=6b026b2b-3a29-4252-864d-f795a54cc82f, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:49:34.266 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b762988] HTTP DELETE /api/v1/catalogs/2c333532-f379-4781-a77d-9673205a4f69
2025-08-11 01:49:34.267 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [415e1af8] HTTP DELETE "/api/v1/catalogs/2c333532-f379-4781-a77d-9673205a4f69"
2025-08-11 01:49:34.267 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/2c333532-f379-4781-a77d-9673205a4f69
2025-08-11 01:49:34.267 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [415e1af8] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:49:34.268 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 2c333532-f379-4781-a77d-9673205a4f69
2025-08-11 01:49:34.269 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [415e1af8] Completed 204 NO_CONTENT
2025-08-11 01:49:34.270 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:49:34.270 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b762988] [6bd6b20] Response 204 NO_CONTENT
2025-08-11 01:49:34.273 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ba96967] HTTP POST /api/v1/catalogs
2025-08-11 01:49:34.275 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3ba96967] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:49:34.276 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4fcbee1c] HTTP POST "/api/v1/catalogs"
2025-08-11 01:49:34.276 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:49:34.276 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4fcbee1c] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:49:34.277 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4fcbee1c] Content-Type:application/json
2025-08-11 01:49:34.278 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4fcbee1c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.285 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4fcbee1c] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:49:34.316 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=27aed940-441a-4df3-93a9-951522e52f93, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=7ef5eddb-aa01-4457-b0cb-946124d34dec, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:49:34.316 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4fcbee1c] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:49:34.317 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4fcbee1c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.317 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4fcbee1c] Encoding [CatalogDTO[id=38d1149a-54b5-4e9d-b7ae-30a3a6e5f747, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:49:34.318 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4fcbee1c] Completed 201 CREATED
2025-08-11 01:49:34.318 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:49:34.318 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ba96967] [371b6f42] Response 201 CREATED
2025-08-11 01:49:34.319 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3ba96967] [371b6f42] Decoded [CatalogDTO[id=38d1149a-54b5-4e9d-b7ae-30a3a6e5f747, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:49:34.322 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4452e13c] HTTP GET /api/v1/catalogs/a0523ce4-0aff-474c-80c8-1433c19ff258
2025-08-11 01:49:34.323 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4f13aef1] HTTP GET "/api/v1/catalogs/a0523ce4-0aff-474c-80c8-1433c19ff258"
2025-08-11 01:49:34.323 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/a0523ce4-0aff-474c-80c8-1433c19ff258
2025-08-11 01:49:34.323 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4f13aef1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:49:34.324 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a0523ce4-0aff-474c-80c8-1433c19ff258
2025-08-11 01:49:34.324 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4f13aef1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:49:34.324 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4f13aef1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.324 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [4f13aef1] Encoding [CatalogDTO[id=a0523ce4-0aff-474c-80c8-1433c19ff258, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:49:34.325 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4f13aef1] Completed 200 OK
2025-08-11 01:49:34.325 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:49:34.325 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4452e13c] [41d44963] Response 200 OK
2025-08-11 01:49:34.325 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [4452e13c] [41d44963] Decoded [CatalogDTO[id=a0523ce4-0aff-474c-80c8-1433c19ff258, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:49:34.328 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bc18fec] HTTP PUT /api/v1/catalogs/cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac
2025-08-11 01:49:34.329 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [3bc18fec] Encoding [CatalogDTO[id=cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:49:34.330 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4a0bf1d] HTTP PUT "/api/v1/catalogs/cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac"
2025-08-11 01:49:34.330 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac
2025-08-11 01:49:34.330 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4a0bf1d] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:49:34.330 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4a0bf1d] Content-Type:application/json
2025-08-11 01:49:34.330 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4a0bf1d] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.331 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [4a0bf1d] Decoded [CatalogDTO[id=cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:49:34.332 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4a0bf1d] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4a0bf1d] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [4a0bf1d] Encoding [CatalogDTO[id=cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4a0bf1d] Completed 200 OK
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:49:34.333 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bc18fec] [191e266b] Response 200 OK
2025-08-11 01:49:34.334 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3bc18fec] [191e266b] Decoded [CatalogDTO[id=cf0ca3d8-6cf1-401b-8d6a-d85169fd37ac, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:50:14.901 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 74772 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:50:14.902 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:50:14.902 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 01:50:15.285 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:50:15.302 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:50:15.330 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 01:50:15.355 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:50:15.371 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.833 seconds (process running for 2.261)
2025-08-11 01:50:15.392 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27048db3] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:50:15.406 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3da1fcc9] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 01:50:15.412 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 01:50:15.416 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3da1fcc9] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:50:15.427 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 01:50:15.446 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3da1fcc9] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:50:15.446 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3da1fcc9] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.458 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [3da1fcc9] Encoding [CatalogDTO[id=3e47b4f3-c924-46d7-b3e0-ff19c26b3435, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:50:15.466 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3da1fcc9] Completed 200 OK
2025-08-11 01:50:15.467 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:50:15.468 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27048db3] [7edb0267] Response 200 OK
2025-08-11 01:50:15.496 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [27048db3] [7edb0267] Decoded [CatalogDTO[id=3e47b4f3-c924-46d7-b3e0-ff19c26b3435, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 01:50:15.496 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3da1fcc9] Encoding [CatalogDTO[id=aaec9da7-84a1-4a88-84c0-6adb40aa2989, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:50:15.497 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [27048db3] [7edb0267] Decoded [CatalogDTO[id=aaec9da7-84a1-4a88-84c0-6adb40aa2989, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 01:50:15.506 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52325940] HTTP DELETE /api/v1/catalogs/d4a8b0b5-0817-4718-8720-6f43130c92b2
2025-08-11 01:50:15.507 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [47b05dbb] HTTP DELETE "/api/v1/catalogs/d4a8b0b5-0817-4718-8720-6f43130c92b2"
2025-08-11 01:50:15.507 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/d4a8b0b5-0817-4718-8720-6f43130c92b2
2025-08-11 01:50:15.507 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [47b05dbb] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 01:50:15.508 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: d4a8b0b5-0817-4718-8720-6f43130c92b2
2025-08-11 01:50:15.509 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [47b05dbb] Completed 204 NO_CONTENT
2025-08-11 01:50:15.510 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 01:50:15.510 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52325940] [1c0ea763] Response 204 NO_CONTENT
2025-08-11 01:50:15.513 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1aef7428] HTTP POST /api/v1/catalogs
2025-08-11 01:50:15.515 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [1aef7428] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:50:15.515 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3b8ea0c5] HTTP POST "/api/v1/catalogs"
2025-08-11 01:50:15.516 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 01:50:15.516 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3b8ea0c5] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 01:50:15.517 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [3b8ea0c5] Content-Type:application/json
2025-08-11 01:50:15.517 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [3b8ea0c5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.523 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3b8ea0c5] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 01:50:15.552 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=0b08499c-cce7-44ac-8469-71f1c70ed55b, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=0944892d-aa0e-4d43-b096-2e6a4c677e74, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 01:50:15.553 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3b8ea0c5] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:50:15.553 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3b8ea0c5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.553 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3b8ea0c5] Encoding [CatalogDTO[id=3dd198fe-3fbd-421a-819c-8d87f2197762, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:50:15.554 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3b8ea0c5] Completed 201 CREATED
2025-08-11 01:50:15.554 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 01:50:15.555 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1aef7428] [7a68a61e] Response 201 CREATED
2025-08-11 01:50:15.556 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1aef7428] [7a68a61e] Decoded [CatalogDTO[id=3dd198fe-3fbd-421a-819c-8d87f2197762, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:50:15.559 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [126d0868] HTTP GET /api/v1/catalogs/b15b4300-26e4-4114-924c-5d7143ce30b8
2025-08-11 01:50:15.559 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7dc61040] HTTP GET "/api/v1/catalogs/b15b4300-26e4-4114-924c-5d7143ce30b8"
2025-08-11 01:50:15.559 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/b15b4300-26e4-4114-924c-5d7143ce30b8
2025-08-11 01:50:15.559 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7dc61040] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 01:50:15.560 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: b15b4300-26e4-4114-924c-5d7143ce30b8
2025-08-11 01:50:15.560 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7dc61040] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:50:15.560 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7dc61040] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.560 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [7dc61040] Encoding [CatalogDTO[id=b15b4300-26e4-4114-924c-5d7143ce30b8, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:50:15.561 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7dc61040] Completed 200 OK
2025-08-11 01:50:15.561 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:50:15.561 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [126d0868] [7301f188] Response 200 OK
2025-08-11 01:50:15.562 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [126d0868] [7301f188] Decoded [CatalogDTO[id=b15b4300-26e4-4114-924c-5d7143ce30b8, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 01:50:15.565 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [462f8fe9] HTTP PUT /api/v1/catalogs/b4f23034-4f46-4a4c-a0b4-c93c9c581595
2025-08-11 01:50:15.565 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [462f8fe9] Encoding [CatalogDTO[id=b4f23034-4f46-4a4c-a0b4-c93c9c581595, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:50:15.566 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b60657c] HTTP PUT "/api/v1/catalogs/b4f23034-4f46-4a4c-a0b4-c93c9c581595"
2025-08-11 01:50:15.566 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/b4f23034-4f46-4a4c-a0b4-c93c9c581595
2025-08-11 01:50:15.566 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7b60657c] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 01:50:15.567 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7b60657c] Content-Type:application/json
2025-08-11 01:50:15.568 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7b60657c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.568 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7b60657c] Decoded [CatalogDTO[id=b4f23034-4f46-4a4c-a0b4-c93c9c581595, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:50:15.568 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: b4f23034-4f46-4a4c-a0b4-c93c9c581595
2025-08-11 01:50:15.569 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7b60657c] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:50:15.569 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7b60657c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:50:15.569 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7b60657c] Encoding [CatalogDTO[id=b4f23034-4f46-4a4c-a0b4-c93c9c581595, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:50:15.569 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b60657c] Completed 200 OK
2025-08-11 01:50:15.569 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 01:50:15.570 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [462f8fe9] [182853b6] Response 200 OK
2025-08-11 01:50:15.570 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [462f8fe9] [182853b6] Decoded [CatalogDTO[id=b4f23034-4f46-4a4c-a0b4-c93c9c581595, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 01:50:58.810 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 74839 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:50:58.811 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:50:58.811 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 01:50:59.443 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:50:59.570 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 122 ms. Found 1 R2DBC repository interface.
2025-08-11 01:50:59.964 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:51:00.041 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:51:00.130 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:51:00.309 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:51:00.620 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:51:00.637 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:51:00.749 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:51:00.775 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:51:00.804 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:51:01.113 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 01:51:01.343 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 01:51:01.373 [main] [/] INFO  liquibase.changelog - Change failed validation!
2025-08-11 01:51:01.374 [main] [/] INFO  liquibase.command - Logging exception.
2025-08-11 01:51:01.374 [main] [/] INFO  liquibase.ui - ERROR: Exception Details
2025-08-11 01:51:01.374 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Class:  ValidationFailedException
2025-08-11 01:51:01.374 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Reason:  Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

2025-08-11 01:51:01.374 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Source:  4.31.1
2025-08-11 01:51:01.375 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 01:51:02.787 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

2025-08-11 01:51:02.804 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:51:02.815 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.CommandExecutionException: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 18 common frames omitted
Caused by: liquibase.exception.CommandExecutionException: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:300)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 21 common frames omitted
Caused by: liquibase.exception.ValidationFailedException: Validation Failed:
     1 changesets check sum
          db/changelog/changes/01-create-tables.xml::01::booking-platform was: 9:c09de7c696e0f50b8089cc6029595cab but is now: 9:aa5fc1eeef8977763dee6f7b35249b31

	at liquibase.changelog.DatabaseChangeLog.validate(DatabaseChangeLog.java:384)
	at liquibase.command.core.helpers.DatabaseChangelogCommandStep.run(DatabaseChangelogCommandStep.java:88)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	... 39 common frames omitted
2025-08-11 01:53:18.079 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 75041 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:53:18.080 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:53:18.080 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 01:53:18.623 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:53:18.696 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 R2DBC repository interface.
2025-08-11 01:53:19.090 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:53:19.169 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:53:19.250 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:53:19.432 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:53:19.722 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:53:19.740 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:53:19.851 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:53:19.883 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:53:19.934 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:53:20.248 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 01:53:20.462 [main] [/] INFO  liquibase.changelog - Creating database history table with name: public.databasechangelog
2025-08-11 01:53:20.485 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 01:53:20.506 [main] [/] INFO  liquibase.snapshot - Creating snapshot
2025-08-11 01:53:20.568 [main] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 01:53:20.569 [main] [/] INFO  liquibase.command - Using deploymentId: 4873600076
2025-08-11 01:53:20.570 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 01:53:20.584 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/01-create-tables.xml::01::booking-platform
2025-08-11 01:53:20.592 [main] [/] INFO  liquibase.changelog - Table catalog created
2025-08-11 01:53:20.593 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/01-create-tables.xml::01::booking-platform ran successfully in 8ms
2025-08-11 01:53:20.598 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/02-add-indexes.xml::02::booking-platform
2025-08-11 01:53:20.602 [main] [/] INFO  liquibase.changelog - Index idx_catalog_title created
2025-08-11 01:53:20.605 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_id created
2025-08-11 01:53:20.607 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_name created
2025-08-11 01:53:20.609 [main] [/] INFO  liquibase.changelog - Index idx_catalog_merchant_id created
2025-08-11 01:53:20.612 [main] [/] INFO  liquibase.changelog - Index idx_catalog_price created
2025-08-11 01:53:20.613 [main] [/] INFO  liquibase.changelog - Index idx_catalog_rating created
2025-08-11 01:53:20.616 [main] [/] INFO  liquibase.changelog - Index idx_catalog_compliance_status created
2025-08-11 01:53:20.618 [main] [/] INFO  liquibase.changelog - Index idx_catalog_availability_status created
2025-08-11 01:53:20.619 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_status created
2025-08-11 01:53:20.627 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 01:53:20.636 [main] [/] WARN  liquibase.executor - trigger "trig_catalog_description_update" for relation "catalog" does not exist, skipping
2025-08-11 01:53:20.640 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 01:53:20.641 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/02-add-indexes.xml::02::booking-platform ran successfully in 43ms
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - Run:                          2
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - Previously run:               0
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 01:53:20.645 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 01:53:20.646 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 01:53:20.646 [main] [/] INFO  liquibase.command - Update command completed successfully.
2025-08-11 01:53:20.647 [main] [/] INFO  liquibase.ui - Liquibase: Update has been successful. Rows affected: 2
2025-08-11 01:53:20.649 [main] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 01:53:20.650 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 01:53:22.263 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 01:53:22.323 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 01:53:22.332 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.505 seconds (process running for 4.866)
2025-08-11 01:53:22.333 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 01:53:22.483 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 01:53:22.501 [reactor-tcp-nio-1] [/] ERROR c.j.platform.config.DataInitializer - Error initializing sample data
java.lang.IllegalStateException: Required identifier property not found for class com.jade.platform.domain.model.Catalog
	at org.springframework.data.mapping.PersistentEntity.getRequiredIdProperty(PersistentEntity.java:135)
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$11(R2dbcEntityTemplate.java:625)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoUsingWhen.subscribe(MonoUsingWhen.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:139)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:83)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:348)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:547)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:988)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:194)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:268)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:54:06.192 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bfdc682d-1] HTTP GET "/favicon.ico"
2025-08-11 01:54:06.212 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 01:54:06.232 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bfdc682d-1] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 01:54:06.241 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bfdc682d-1] Resource not found
2025-08-11 01:54:06.243 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bfdc682d-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 01:54:06.249 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:54:06.278 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bfdc682d-1] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 01:54:06.278 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bfdc682d-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 01:54:06.285 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [bfdc682d-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 01:54:06.301 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bfdc682d-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 01:54:06.303 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 01:54:12.176 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f7bec7ee-2] HTTP GET "/favicon.ico"
2025-08-11 01:54:12.178 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 01:54:12.180 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f7bec7ee-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 01:54:12.181 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f7bec7ee-2] Resource not found
2025-08-11 01:54:12.182 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f7bec7ee-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 01:54:12.183 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:54:12.191 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f7bec7ee-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 01:54:12.191 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f7bec7ee-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 01:54:12.193 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [f7bec7ee-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 01:54:12.195 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f7bec7ee-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 01:54:12.195 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 01:54:18.526 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d49a30e2-3] HTTP GET "/api/v1/catalogs?page=1&size=10&direction=DESC"
2025-08-11 01:54:18.527 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs?page=1&size=10&direction=DESC
2025-08-11 01:54:18.531 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [d49a30e2-3] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:54:18.550 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=1, size=10, sort=null, direction=DESC
2025-08-11 01:54:18.562 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d49a30e2-3] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:54:18.562 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d49a30e2-3] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:54:18.588 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding all catalog items with pagination: Page request [number: 1, size 10, sort: UNSORTED]
2025-08-11 01:54:18.597 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding all catalog items
2025-08-11 01:54:18.608 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d49a30e2-3] Completed 200 OK
2025-08-11 01:54:18.609 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 01:54:58.837 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [dec8293f-4] HTTP GET "/api/v1/catalogs?page=1&size=10&sort=createdAt&direction=DESC"
2025-08-11 01:54:58.839 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs?page=1&size=10&sort=createdAt&direction=DESC
2025-08-11 01:54:58.840 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [dec8293f-4] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 01:54:58.843 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=1, size=10, sort=createdAt, direction=DESC
2025-08-11 01:54:58.846 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [dec8293f-4] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 01:54:58.846 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [dec8293f-4] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 01:54:58.853 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding all catalog items with pagination: Page request [number: 1, size 10, sort: createdAt: DESC]
2025-08-11 01:54:58.858 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding all catalog items
2025-08-11 01:54:58.861 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [dec8293f-4] Completed 200 OK
2025-08-11 01:54:58.861 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 01:58:27.077 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 01:58:27.082 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 01:59:39.900 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 75718 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 01:59:39.901 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 01:59:39.901 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 01:59:40.391 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 01:59:40.460 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 1 R2DBC repository interface.
2025-08-11 01:59:40.848 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 01:59:40.903 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 01:59:40.982 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 01:59:41.110 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 01:59:41.391 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:59:41.410 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:59:41.496 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 01:59:41.522 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 01:59:41.557 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:59:41.769 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
2025-08-11 01:59:41.787 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 01:59:41.800 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 18 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 21 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:777)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:234)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 26 common frames omitted
2025-08-11 02:02:52.138 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 76106 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:02:52.139 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:02:52.140 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:02:52.721 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:02:52.795 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 1 R2DBC repository interface.
2025-08-11 02:02:53.209 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:02:53.270 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:02:53.366 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:02:53.566 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:02:53.898 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:02:53.918 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:02:54.054 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:02:54.102 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:02:54.162 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:02:54.615 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:02:54.867 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:02:54.912 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:02:54.913 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:02:54.918 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:02:54.919 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:02:56.544 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:02:56.615 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:02:56.624 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.774 seconds (process running for 5.198)
2025-08-11 02:02:56.626 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:02:56.838 [main] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 02:02:56.852 [main] [/] ERROR c.j.platform.config.DataInitializer - Error initializing sample data
java.lang.IllegalStateException: Required identifier property not found for class com.jade.platform.domain.model.Catalog
	at org.springframework.data.mapping.PersistentEntity.getRequiredIdProperty(PersistentEntity.java:135)
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$11(R2dbcEntityTemplate.java:625)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoUsingWhen.subscribe(MonoUsingWhen.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.Mono.block(Mono.java:1778)
	at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		... 21 common frames omitted
2025-08-11 02:02:56.855 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 02:02:56.864 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.RuntimeException: Failed to initialize sample data
	at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:80)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: java.lang.IllegalStateException: Required identifier property not found for class com.jade.platform.domain.model.Catalog
	at org.springframework.data.mapping.PersistentEntity.getRequiredIdProperty(PersistentEntity.java:135)
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$11(R2dbcEntityTemplate.java:625)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoUsingWhen.subscribe(MonoUsingWhen.java:87)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:430)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.Mono.block(Mono.java:1778)
	at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
	... 20 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		... 21 common frames omitted
2025-08-11 02:02:56.866 [main] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:02:56.867 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:07:16.774 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 76810 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:07:16.775 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:07:16.776 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:07:17.446 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:07:17.512 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 1 R2DBC repository interface.
2025-08-11 02:07:17.916 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:07:17.972 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:07:18.063 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:07:18.227 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:07:18.530 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:07:18.548 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:07:18.656 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:07:18.682 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:07:18.712 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:07:19.038 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:07:19.255 [main] [/] INFO  liquibase.changelog - Creating database history table with name: public.databasechangelog
2025-08-11 02:07:19.293 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:07:19.314 [main] [/] INFO  liquibase.snapshot - Creating snapshot
2025-08-11 02:07:19.389 [main] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 02:07:19.390 [main] [/] INFO  liquibase.command - Using deploymentId: 4874438835
2025-08-11 02:07:19.391 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:07:19.404 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/01-create-tables.xml::01::booking-platform
2025-08-11 02:07:19.413 [main] [/] INFO  liquibase.changelog - Table catalog created
2025-08-11 02:07:19.415 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/01-create-tables.xml::01::booking-platform ran successfully in 11ms
2025-08-11 02:07:19.422 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/02-add-indexes.xml::02::booking-platform
2025-08-11 02:07:19.425 [main] [/] INFO  liquibase.changelog - Index idx_catalog_title created
2025-08-11 02:07:19.427 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_id created
2025-08-11 02:07:19.429 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_name created
2025-08-11 02:07:19.431 [main] [/] INFO  liquibase.changelog - Index idx_catalog_merchant_id created
2025-08-11 02:07:19.433 [main] [/] INFO  liquibase.changelog - Index idx_catalog_price created
2025-08-11 02:07:19.434 [main] [/] INFO  liquibase.changelog - Index idx_catalog_rating created
2025-08-11 02:07:19.437 [main] [/] INFO  liquibase.changelog - Index idx_catalog_compliance_status created
2025-08-11 02:07:19.439 [main] [/] INFO  liquibase.changelog - Index idx_catalog_availability_status created
2025-08-11 02:07:19.441 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_status created
2025-08-11 02:07:19.451 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 02:07:19.468 [main] [/] WARN  liquibase.executor - trigger "trig_catalog_description_update" for relation "catalog" does not exist, skipping
2025-08-11 02:07:19.475 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 02:07:19.476 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/02-add-indexes.xml::02::booking-platform ran successfully in 54ms
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - Run:                          2
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - Previously run:               0
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:07:19.482 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:07:19.483 [main] [/] INFO  liquibase.command - Update command completed successfully.
2025-08-11 02:07:19.483 [main] [/] INFO  liquibase.ui - Liquibase: Update has been successful. Rows affected: 2
2025-08-11 02:07:19.487 [main] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 02:07:19.488 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:07:21.124 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:07:21.198 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:07:21.208 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.698 seconds (process running for 5.074)
2025-08-11 02:07:21.210 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:07:21.399 [main] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 02:07:21.450 [reactor-tcp-nio-1] [/] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [b9cfe827-6bbc-44c2-976d-d202d823e846] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:07:21.450 [reactor-tcp-nio-2] [/] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [bb55b9d4-e663-4444-8644-916ef50df8f5] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:07:21.451 [main] [/] ERROR c.j.platform.config.DataInitializer - Error initializing sample data
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [63813279-e39a-4499-b477-ccc1c4a8ba38] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
		at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
2025-08-11 02:07:21.453 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 02:07:21.472 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.RuntimeException: Failed to initialize sample data
	at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:80)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [63813279-e39a-4499-b477-ccc1c4a8ba38] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
		at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
2025-08-11 02:07:21.474 [main] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:07:21.475 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:07:43.358 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 76911 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:07:43.359 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:07:43.359 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 02:07:44.310 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:07:44.318 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:07:44.372 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 02:07:44.399 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:07:44.418 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.3 seconds (process running for 1.892)
2025-08-11 02:07:44.458 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [362cf66] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 02:07:44.473 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [674f8c55] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 02:07:44.485 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 02:07:44.492 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [674f8c55] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 02:07:44.513 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 02:07:44.540 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [674f8c55] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:07:44.540 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [674f8c55] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.555 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [674f8c55] Encoding [CatalogDTO[id=c57d7528-2958-4c83-a85d-790459138cb1, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 02:07:44.573 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [674f8c55] Completed 200 OK
2025-08-11 02:07:44.573 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 02:07:44.577 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [362cf66] [4e6c5b97] Response 200 OK
2025-08-11 02:07:44.620 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [362cf66] [4e6c5b97] Decoded [CatalogDTO[id=c57d7528-2958-4c83-a85d-790459138cb1, title=Catalog 1, description=Description 1, indu (truncated)...]
2025-08-11 02:07:44.621 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [674f8c55] Encoding [CatalogDTO[id=c4101a7b-f06a-4e90-9a72-91e9f824a2c8, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 02:07:44.621 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [362cf66] [4e6c5b97] Decoded [CatalogDTO[id=c4101a7b-f06a-4e90-9a72-91e9f824a2c8, title=Catalog 2, description=Description 2, indu (truncated)...]
2025-08-11 02:07:44.641 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66dd04e2] HTTP DELETE /api/v1/catalogs/dd3a73cf-1019-45b8-a99a-3f27823a09bf
2025-08-11 02:07:44.644 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4cd9fba8] HTTP DELETE "/api/v1/catalogs/dd3a73cf-1019-45b8-a99a-3f27823a09bf"
2025-08-11 02:07:44.656 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/dd3a73cf-1019-45b8-a99a-3f27823a09bf
2025-08-11 02:07:44.657 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4cd9fba8] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 02:07:44.658 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: dd3a73cf-1019-45b8-a99a-3f27823a09bf
2025-08-11 02:07:44.661 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4cd9fba8] Completed 204 NO_CONTENT
2025-08-11 02:07:44.663 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 02:07:44.663 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66dd04e2] [3893a3b4] Response 204 NO_CONTENT
2025-08-11 02:07:44.669 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45832b85] HTTP POST /api/v1/catalogs
2025-08-11 02:07:44.671 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [45832b85] Encoding [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 02:07:44.672 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6539cc3e] HTTP POST "/api/v1/catalogs"
2025-08-11 02:07:44.672 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 02:07:44.672 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [6539cc3e] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 02:07:44.673 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6539cc3e] Content-Type:application/json
2025-08-11 02:07:44.673 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6539cc3e] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.680 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6539cc3e] Decoded [CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for vali (truncated)...]
2025-08-11 02:07:44.732 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=97e2d849-6688-44f9-8cfa-d14a78797451, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=b2b4073d-794e-43cf-8bf7-bc1cc3973280, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 02:07:44.733 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6539cc3e] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:07:44.733 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6539cc3e] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.734 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6539cc3e] Encoding [CatalogDTO[id=a0be60e3-830e-4761-9746-cc9165feef55, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 02:07:44.735 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6539cc3e] Completed 201 CREATED
2025-08-11 02:07:44.735 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 02:07:44.735 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45832b85] [431f57c6] Response 201 CREATED
2025-08-11 02:07:44.737 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [45832b85] [431f57c6] Decoded [CatalogDTO[id=a0be60e3-830e-4761-9746-cc9165feef55, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 02:07:44.740 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d842877] HTTP GET /api/v1/catalogs/9aea8b8f-dd9a-4732-9922-08aff0885fe4
2025-08-11 02:07:44.741 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b596696] HTTP GET "/api/v1/catalogs/9aea8b8f-dd9a-4732-9922-08aff0885fe4"
2025-08-11 02:07:44.741 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/9aea8b8f-dd9a-4732-9922-08aff0885fe4
2025-08-11 02:07:44.742 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2b596696] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 02:07:44.742 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 9aea8b8f-dd9a-4732-9922-08aff0885fe4
2025-08-11 02:07:44.743 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b596696] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:07:44.743 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b596696] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.744 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [2b596696] Encoding [CatalogDTO[id=9aea8b8f-dd9a-4732-9922-08aff0885fe4, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 02:07:44.744 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b596696] Completed 200 OK
2025-08-11 02:07:44.744 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 02:07:44.744 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d842877] [259e9d8d] Response 200 OK
2025-08-11 02:07:44.745 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6d842877] [259e9d8d] Decoded [CatalogDTO[id=9aea8b8f-dd9a-4732-9922-08aff0885fe4, title=Test Catalog, description=Test Description (truncated)...]
2025-08-11 02:07:44.748 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73aae7a] HTTP PUT /api/v1/catalogs/30b3b14b-d163-4a23-b203-6cecbfa2d066
2025-08-11 02:07:44.749 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [73aae7a] Encoding [CatalogDTO[id=30b3b14b-d163-4a23-b203-6cecbfa2d066, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 02:07:44.749 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2f3b143f] HTTP PUT "/api/v1/catalogs/30b3b14b-d163-4a23-b203-6cecbfa2d066"
2025-08-11 02:07:44.750 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/30b3b14b-d163-4a23-b203-6cecbfa2d066
2025-08-11 02:07:44.750 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2f3b143f] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 02:07:44.750 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2f3b143f] Content-Type:application/json
2025-08-11 02:07:44.751 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2f3b143f] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.751 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2f3b143f] Decoded [CatalogDTO[id=30b3b14b-d163-4a23-b203-6cecbfa2d066, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 02:07:44.752 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 30b3b14b-d163-4a23-b203-6cecbfa2d066
2025-08-11 02:07:44.754 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2f3b143f] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:07:44.754 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2f3b143f] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:07:44.754 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2f3b143f] Encoding [CatalogDTO[id=30b3b14b-d163-4a23-b203-6cecbfa2d066, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 02:07:44.755 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2f3b143f] Completed 200 OK
2025-08-11 02:07:44.755 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 02:07:44.755 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73aae7a] [11761b4a] Response 200 OK
2025-08-11 02:07:44.756 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [73aae7a] [11761b4a] Decoded [CatalogDTO[id=30b3b14b-d163-4a23-b203-6cecbfa2d066, title=Updated Catalog, description=Updated Descr (truncated)...]
2025-08-11 02:08:17.948 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 76936 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:08:17.949 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:08:17.949 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:08:18.544 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:08:18.620 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 1 R2DBC repository interface.
2025-08-11 02:08:19.030 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:08:19.084 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:08:19.170 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:08:19.336 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:08:19.663 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:08:19.680 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:08:19.792 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:08:19.818 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:08:19.856 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:08:20.141 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:08:20.394 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:08:20.434 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:08:20.435 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:08:20.438 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:08:20.439 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:08:21.558 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:08:21.618 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:08:21.627 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 3.963 seconds (process running for 4.338)
2025-08-11 02:08:21.629 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:08:21.793 [main] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 02:08:21.842 [main] [/] ERROR c.j.platform.config.DataInitializer - Error initializing sample data
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [abd9f45b-36af-4564-b43a-1a998a1a5137] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
		at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
2025-08-11 02:08:21.854 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 02:08:21.863 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.RuntimeException: Failed to initialize sample data
	at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:80)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [abd9f45b-36af-4564-b43a-1a998a1a5137] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
	at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.jade.platform.config.DataInitializer.lambda$initData$1(DataInitializer.java:75)
		at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:788)
		at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:82)
		at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
		at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:86)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:796)
		at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:787)
		at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:772)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:772)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
		at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
2025-08-11 02:08:21.865 [main] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:08:21.866 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:12:00.269 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 77584 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:12:00.270 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:12:00.270 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:12:00.835 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:12:00.917 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 1 R2DBC repository interface.
2025-08-11 02:12:01.312 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:12:01.372 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:12:01.453 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:12:01.619 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:12:01.900 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:12:01.920 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:12:02.082 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:12:02.120 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:12:02.160 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:12:02.454 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:12:02.693 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:12:02.741 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:12:02.743 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:12:02.746 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:12:02.746 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:12:02.747 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:12:04.365 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:12:04.427 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:12:04.436 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.447 seconds (process running for 4.804)
2025-08-11 02:12:04.437 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:12:04.603 [main] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 6
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 1
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 2
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 3
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 4
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 5
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 7
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 8
2025-08-11 02:12:04.691 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 9
2025-08-11 02:12:04.695 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 10
2025-08-11 02:12:04.695 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 16
2025-08-11 02:12:04.695 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 17
2025-08-11 02:12:04.695 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 12
2025-08-11 02:12:04.695 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 13
2025-08-11 02:12:04.695 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 14
2025-08-11 02:12:04.695 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 15
2025-08-11 02:12:04.695 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 11
2025-08-11 02:12:04.696 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 18
2025-08-11 02:12:04.698 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 19
2025-08-11 02:12:04.701 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 23
2025-08-11 02:12:04.701 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 20
2025-08-11 02:12:04.701 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 22
2025-08-11 02:12:04.701 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 21
2025-08-11 02:12:04.701 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 24
2025-08-11 02:12:04.702 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 25
2025-08-11 02:12:04.702 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 27
2025-08-11 02:12:04.702 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 26
2025-08-11 02:12:04.703 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 28
2025-08-11 02:12:04.704 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 29
2025-08-11 02:12:04.705 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 31
2025-08-11 02:12:04.705 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 33
2025-08-11 02:12:04.705 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 34
2025-08-11 02:12:04.705 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 32
2025-08-11 02:12:04.705 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 36
2025-08-11 02:12:04.705 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 30
2025-08-11 02:12:04.705 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 35
2025-08-11 02:12:04.707 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 37
2025-08-11 02:12:04.708 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 40
2025-08-11 02:12:04.709 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 39
2025-08-11 02:12:04.709 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 42
2025-08-11 02:12:04.709 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 41
2025-08-11 02:12:04.709 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 43
2025-08-11 02:12:04.709 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 38
2025-08-11 02:12:04.709 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 44
2025-08-11 02:12:04.710 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 46
2025-08-11 02:12:04.710 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 47
2025-08-11 02:12:04.711 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 48
2025-08-11 02:12:04.711 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 50
2025-08-11 02:12:04.711 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 49
2025-08-11 02:12:04.711 [reactor-tcp-nio-10] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 45
2025-08-11 02:12:04.711 [main] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 02:15:57.377 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:15:57.385 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:16:13.862 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 77763 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:16:13.863 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:16:13.863 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:16:14.485 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:16:14.591 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 1 R2DBC repository interface.
2025-08-11 02:16:15.022 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:16:15.083 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:16:15.176 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:16:15.345 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:16:15.640 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:16:15.659 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:16:15.788 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:16:15.821 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:16:15.857 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:16:16.157 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:16:16.480 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:16:16.526 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:16:16.527 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:16:16.531 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:16:16.531 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:16:16.531 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:16:16.532 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:16:16.532 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:16:16.532 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:16:16.532 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:16:16.532 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:16:18.148 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:16:18.216 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:16:18.225 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.655 seconds (process running for 5.047)
2025-08-11 02:16:18.227 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:16:18.400 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 02:21:54.243 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:21:54.246 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:21:58.516 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 78053 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:21:58.516 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:21:58.516 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:21:59.023 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:21:59.089 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 1 R2DBC repository interface.
2025-08-11 02:21:59.522 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:21:59.573 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:21:59.654 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:21:59.814 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:22:00.101 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:22:00.117 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:22:00.227 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:22:00.252 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:22:00.281 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:22:00.430 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
2025-08-11 02:22:00.443 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 02:22:00.451 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 18 common frames omitted
Caused by: liquibase.exception.DatabaseException: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:280)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 21 common frames omitted
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:373)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:275)
	... 26 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:261)
	at org.postgresql.core.PGStream.<init>(PGStream.java:122)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	... 34 common frames omitted
2025-08-11 02:23:02.974 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 78105 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:23:02.975 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:23:02.975 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:23:03.532 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:23:03.607 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 02:23:04.031 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:23:04.092 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:23:04.168 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:23:04.340 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:23:04.629 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:23:04.646 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:23:04.753 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:23:04.780 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:23:04.817 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:23:05.160 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:23:05.392 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:23:05.437 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:23:05.438 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:23:05.442 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:23:05.443 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:23:07.046 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:23:07.133 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:23:07.141 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.423 seconds (process running for 4.754)
2025-08-11 02:23:07.143 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:23:07.342 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 02:25:56.670 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:25:56.676 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:26:00.682 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 78202 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:26:00.683 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:26:00.683 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:26:01.208 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:26:01.277 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 1 R2DBC repository interface.
2025-08-11 02:26:01.665 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:26:01.719 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:26:01.798 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:26:01.968 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:26:02.257 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:26:02.274 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:26:02.382 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:26:02.407 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:26:02.437 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:26:02.733 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:26:02.971 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:26:03.011 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:26:03.012 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:26:03.017 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:26:03.018 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:26:04.618 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:26:04.683 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:26:04.692 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.308 seconds (process running for 4.665)
2025-08-11 02:26:04.693 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:26:04.845 [main] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 9
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 4
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 5
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 6
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 7
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 8
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 1
2025-08-11 02:26:04.926 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 3
2025-08-11 02:26:04.926 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 2
2025-08-11 02:26:04.929 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 11
2025-08-11 02:26:04.930 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 13
2025-08-11 02:26:04.930 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 10
2025-08-11 02:26:04.930 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 12
2025-08-11 02:26:04.930 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 16
2025-08-11 02:26:04.930 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 18
2025-08-11 02:26:04.931 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 15
2025-08-11 02:26:04.931 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 17
2025-08-11 02:26:04.931 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 14
2025-08-11 02:26:04.932 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 22
2025-08-11 02:26:04.933 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 24
2025-08-11 02:26:04.933 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 21
2025-08-11 02:26:04.933 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 20
2025-08-11 02:26:04.933 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 23
2025-08-11 02:26:04.933 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 19
2025-08-11 02:26:04.937 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 26
2025-08-11 02:26:04.937 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 31
2025-08-11 02:26:04.937 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 30
2025-08-11 02:26:04.937 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 25
2025-08-11 02:26:04.937 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 29
2025-08-11 02:26:04.937 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 28
2025-08-11 02:26:04.938 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 27
2025-08-11 02:26:04.939 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 33
2025-08-11 02:26:04.939 [reactor-tcp-nio-10] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 32
2025-08-11 02:26:04.939 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 34
2025-08-11 02:26:04.939 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 35
2025-08-11 02:26:04.940 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 38
2025-08-11 02:26:04.940 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 37
2025-08-11 02:26:04.940 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 36
2025-08-11 02:26:04.940 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 39
2025-08-11 02:26:04.941 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 40
2025-08-11 02:26:04.942 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 41
2025-08-11 02:26:04.944 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 45
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 44
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 46
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 48
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 49
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 50
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 42
2025-08-11 02:26:04.945 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 43
2025-08-11 02:26:04.945 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 47
2025-08-11 02:26:04.945 [main] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 02:26:35.702 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f800e458-1] HTTP GET "/api/v1/catalogs?page=1&size=10&sort=createdAt&direction=DESC"
2025-08-11 02:26:35.727 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs?page=1&size=10&sort=createdAt&direction=DESC
2025-08-11 02:26:35.732 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f800e458-1] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 02:26:35.746 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=1, size=10, sort=createdAt, direction=DESC
2025-08-11 02:26:35.758 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f800e458-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:26:35.759 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f800e458-1] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:26:35.787 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding all catalog items with pagination: Page request [number: 1, size 10, sort: createdAt: DESC]
2025-08-11 02:26:35.814 [reactor-tcp-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=68041e10-b066-4435-a857-f8f35ae49cfb, title=Sample Catalog Item 46, description=This i (truncated)...]
2025-08-11 02:26:35.828 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item 50, description=This i (truncated)...]
2025-08-11 02:26:35.829 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=1eb02892-ea3e-4042-b63c-aeb9c03a7217, title=Sample Catalog Item 2, description=This is (truncated)...]
2025-08-11 02:26:35.829 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=9c060381-fdf4-4b35-9bb6-c602d7e44c1f, title=Sample Catalog Item 13, description=This i (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=c5b9d38a-9718-46e8-94df-a212f40e157e, title=Sample Catalog Item 24, description=This i (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=98a5b47b-f4a9-4995-ba5f-02c84e2c704d, title=Sample Catalog Item 31, description=This i (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=2d56fbdd-9bc6-4414-ab34-063abb2cca2f, title=Sample Catalog Item 36, description=This i (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=64ef7748-7798-4d5c-9c77-06cb405fe497, title=Sample Catalog Item 48, description=This i (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=55f08445-6f87-46cf-abd3-a7a54a81d21e, title=Sample Catalog Item 1, description=This is (truncated)...]
2025-08-11 02:26:35.830 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f800e458-1] Encoding [CatalogDTO[id=01f85b34-9f84-45da-846a-bce495f9bbb0, title=Sample Catalog Item 8, description=This is (truncated)...]
2025-08-11 02:26:35.831 [reactor-http-nio-2] [/] DEBUG c.j.platform.service.CatalogService - Completed finding all catalog items
2025-08-11 02:26:35.838 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f800e458-1] Completed 200 OK
2025-08-11 02:26:35.842 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:27:03.779 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [88305f17-2] HTTP GET "/favicon.ico"
2025-08-11 02:27:03.781 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:27:03.786 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [88305f17-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:27:03.788 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [88305f17-2] Resource not found
2025-08-11 02:27:03.790 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [88305f17-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:27:03.790 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:27:03.798 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [88305f17-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:27:03.798 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [88305f17-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:27:03.801 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [88305f17-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:27:03.805 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [88305f17-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:03.805 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:24.671 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [153418dc-3] HTTP GET "/favicon.ico"
2025-08-11 02:27:24.674 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:27:24.676 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [153418dc-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:27:24.677 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [153418dc-3] Resource not found
2025-08-11 02:27:24.679 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [153418dc-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:27:24.680 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:27:24.682 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [153418dc-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:27:24.682 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [153418dc-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:27:24.682 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [153418dc-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:27:24.683 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [153418dc-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:24.684 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:25.114 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [153418dc-4] HTTP GET "/favicon.ico"
2025-08-11 02:27:25.116 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:27:25.118 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [153418dc-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:27:25.118 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [153418dc-4] Resource not found
2025-08-11 02:27:25.119 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [153418dc-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:27:25.119 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:27:25.120 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [153418dc-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:27:25.121 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [153418dc-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:27:25.121 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [153418dc-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:27:25.122 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [153418dc-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:25.122 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:43.617 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3e9f85a9-5] HTTP GET "/favicon.ico"
2025-08-11 02:27:43.618 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:27:43.618 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [3e9f85a9-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:27:43.619 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [3e9f85a9-5] Resource not found
2025-08-11 02:27:43.619 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [3e9f85a9-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:27:43.619 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:27:43.620 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [3e9f85a9-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:27:43.620 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [3e9f85a9-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:27:43.620 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [3e9f85a9-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:27:43.621 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3e9f85a9-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:27:43.621 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:28:29.961 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [484ce9e4-6] HTTP GET "/favicon.ico"
2025-08-11 02:28:29.964 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:28:29.965 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [484ce9e4-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:28:29.966 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [484ce9e4-6] Resource not found
2025-08-11 02:28:29.967 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [484ce9e4-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:28:29.967 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:28:29.969 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [484ce9e4-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:28:29.969 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [484ce9e4-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:28:29.969 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [484ce9e4-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:28:29.970 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [484ce9e4-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:28:29.971 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:28:40.635 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c5c1653f-7] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdAt&direction=DESC"
2025-08-11 02:28:40.636 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdAt&direction=DESC
2025-08-11 02:28:40.637 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [c5c1653f-7] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:28:40.643 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdAt, direction=DESC
2025-08-11 02:28:40.649 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c5c1653f-7] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:28:40.650 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c5c1653f-7] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:28:40.656 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdAt: DESC]
2025-08-11 02:28:40.661 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdAt: DESC]
2025-08-11 02:28:40.661 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@44b94b8f
2025-08-11 02:28:40.673 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@a47dfbe
2025-08-11 02:28:40.689 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c5c1653f-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:28:40.690 [reactor-tcp-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.r2dbc.BadSqlGrammarException: executeMany; bad SQL grammar [SELECT catalog.* FROM catalog ORDER BY catalog.createdAt DESC LIMIT 10]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: column catalog.createdat does not exist
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:96)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$map$2(PostgresqlResult.java:117)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:28:40.691 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c5c1653f-7] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:28:40.692 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c5c1653f-7] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:28:40.692 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c5c1653f-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:28:40.692 [reactor-tcp-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [c5c1653f-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:28:40.692 [reactor-tcp-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c5c1653f-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:28:40.692 [reactor-tcp-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:29:37.872 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [85f4d73f-8] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdAt&direction=DESC"
2025-08-11 02:29:37.876 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdAt&direction=DESC
2025-08-11 02:29:37.878 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [85f4d73f-8] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:29:37.881 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdAt, direction=DESC
2025-08-11 02:29:37.882 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [85f4d73f-8] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:29:37.882 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [85f4d73f-8] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:29:37.890 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdAt: DESC]
2025-08-11 02:29:37.891 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdAt: DESC]
2025-08-11 02:29:37.891 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@33e0329e
2025-08-11 02:29:37.894 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@a47dfbe
2025-08-11 02:29:37.899 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [85f4d73f-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:29:37.900 [reactor-tcp-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.r2dbc.BadSqlGrammarException: executeMany; bad SQL grammar [SELECT catalog.* FROM catalog ORDER BY catalog.createdAt DESC LIMIT 10]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: column catalog.createdat does not exist
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:96)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$map$2(PostgresqlResult.java:117)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:29:37.902 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [85f4d73f-8] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:29:37.902 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [85f4d73f-8] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:29:37.902 [reactor-tcp-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [85f4d73f-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:29:37.902 [reactor-tcp-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [85f4d73f-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:29:37.903 [reactor-tcp-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [85f4d73f-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:29:37.904 [reactor-tcp-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:33:04.170 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [90e47aa4-9] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 02:33:04.173 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 02:33:04.175 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [90e47aa4-9] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:33:04.184 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 02:33:04.187 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [90e47aa4-9] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:33:04.187 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [90e47aa4-9] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:33:04.199 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:33:04.199 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:33:04.200 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@2ebdb39c
2025-08-11 02:33:04.210 [reactor-tcp-nio-9] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@a47dfbe
2025-08-11 02:33:04.226 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:33:04.226 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 50
2025-08-11 02:33:04.233 [reactor-tcp-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [90e47aa4-9] Encoding [PageResponse[content=[CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:33:04.242 [reactor-tcp-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [90e47aa4-9] Completed 200 OK
2025-08-11 02:33:04.242 [reactor-tcp-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:34:17.514 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:34:17.537 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:34:21.466 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 78555 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:34:21.467 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:34:21.467 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:34:21.944 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:34:22.021 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 1 R2DBC repository interface.
2025-08-11 02:34:22.430 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:34:22.491 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:34:22.588 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:34:22.763 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:34:23.069 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:34:23.086 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:34:23.192 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:34:23.217 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:34:23.246 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:34:23.519 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:34:23.738 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:34:23.783 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:34:23.784 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:34:23.788 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:34:23.789 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:34:25.396 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:34:25.452 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:34:25.461 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.241 seconds (process running for 4.56)
2025-08-11 02:34:25.462 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:34:25.610 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 02:34:34.223 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa9c9560-1] HTTP GET "/"
2025-08-11 02:34:34.234 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/
2025-08-11 02:34:34.241 [reactor-http-nio-2] [/] DEBUG o.s.w.r.f.s.s.RouterFunctionMapping - [aa9c9560-1] Mapped to org.springframework.boot.autoconfigure.web.reactive.WelcomePageRouterFunctionFactory$$Lambda/0x0000000801731310@3288ee8b
2025-08-11 02:34:34.251 [boundedElastic-1] [/] DEBUG org.springframework.web.HttpLogging - [aa9c9560-1] Zero-copy [class path resource [static/index.html]]
2025-08-11 02:34:34.256 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa9c9560-1] Completed 200 OK
2025-08-11 02:34:34.259 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:34:34.837 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa9c9560-2] HTTP GET "/openapi.yaml"
2025-08-11 02:34:34.838 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/openapi.yaml
2025-08-11 02:34:34.840 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [aa9c9560-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:34:34.864 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f83e087d-3] HTTP GET "/favicon.ico"
2025-08-11 02:34:34.864 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:34:34.865 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f83e087d-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:34:34.866 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f83e087d-3] Resource not found
2025-08-11 02:34:34.871 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [aa9c9560-2] Resource associated with 'application/octet-stream'
2025-08-11 02:34:34.871 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [aa9c9560-2] Zero-copy [class path resource [static/openapi.yaml]]
2025-08-11 02:34:34.872 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa9c9560-2] Completed 200 OK
2025-08-11 02:34:34.872 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:34:34.873 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f83e087d-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:34:34.873 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:34:34.888 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f83e087d-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:34:34.888 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f83e087d-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:34:34.901 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [f83e087d-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:34:34.934 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f83e087d-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:34:34.935 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:35:08.785 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a469aed7-4] HTTP GET "/api/v1/catalogs/filter?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 02:35:08.788 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 02:35:08.796 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [a469aed7-4] Mapped to com.jade.platform.controller.CatalogController#filterCatalogs(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:35:08.830 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria and sorting: sort=createdOn, direction=DESC
2025-08-11 02:35:08.848 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a469aed7-4] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:35:08.848 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a469aed7-4] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:35:08.886 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:35:08.890 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@5e529fcb
2025-08-11 02:35:08.926 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item 50, description=This i (truncated)...]
2025-08-11 02:35:08.934 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=666ec7f3-9376-49e9-b95b-37e1762dacd4, title=Sample Catalog Item 49, description=This i (truncated)...]
2025-08-11 02:35:08.934 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=64ef7748-7798-4d5c-9c77-06cb405fe497, title=Sample Catalog Item 48, description=This i (truncated)...]
2025-08-11 02:35:08.935 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=efc6c47f-20cc-41ed-8445-ed914b76b7c9, title=Sample Catalog Item 47, description=This i (truncated)...]
2025-08-11 02:35:08.935 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=68041e10-b066-4435-a857-f8f35ae49cfb, title=Sample Catalog Item 46, description=This i (truncated)...]
2025-08-11 02:35:08.935 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=9c8c51a4-4126-468d-ac93-4900f9be60ec, title=Sample Catalog Item 45, description=This i (truncated)...]
2025-08-11 02:35:08.935 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=25150e3d-b261-4057-a9b9-b0e92d92c4d3, title=Sample Catalog Item 44, description=This i (truncated)...]
2025-08-11 02:35:08.935 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=0cc16a24-1888-4f24-8dfe-4da87c5bc714, title=Sample Catalog Item 43, description=This i (truncated)...]
2025-08-11 02:35:08.936 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=45aad266-4175-4c64-ac66-ed3dc1375b16, title=Sample Catalog Item 42, description=This i (truncated)...]
2025-08-11 02:35:08.936 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a469aed7-4] Encoding [CatalogDTO[id=14055713-b6d8-44e8-a7f8-9e665b6563ab, title=Sample Catalog Item 41, description=This i (truncated)...]
2025-08-11 02:35:08.936 [reactor-http-nio-4] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:35:08.941 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a469aed7-4] Completed 200 OK
2025-08-11 02:35:08.941 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:35:18.116 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [64742064-5] HTTP GET "/favicon.ico"
2025-08-11 02:35:18.117 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:35:18.119 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [64742064-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:35:18.121 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [64742064-5] Resource not found
2025-08-11 02:35:18.121 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [64742064-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:35:18.121 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:35:18.123 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [64742064-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:35:18.123 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [64742064-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:35:18.124 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [64742064-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:35:18.125 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [64742064-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:35:18.125 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:35:32.040 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6facb2cc-6] HTTP GET "/favicon.ico"
2025-08-11 02:35:32.041 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:35:32.042 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [6facb2cc-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:35:32.042 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [6facb2cc-6] Resource not found
2025-08-11 02:35:32.043 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [6facb2cc-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:35:32.043 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:35:32.044 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6facb2cc-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:35:32.044 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6facb2cc-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:35:32.044 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [6facb2cc-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:35:32.045 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6facb2cc-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:35:32.046 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:35:54.950 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ed9abb17-7] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 02:35:54.953 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 02:35:54.955 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ed9abb17-7] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:35:54.962 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 02:35:54.972 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ed9abb17-7] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:35:54.972 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ed9abb17-7] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:35:54.980 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:35:54.981 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:35:54.983 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@58feba61
2025-08-11 02:35:54.985 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@5cb16b0c
2025-08-11 02:35:54.996 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:35:54.997 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 50
2025-08-11 02:35:55.006 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [ed9abb17-7] Encoding [PageResponse[content=[CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:35:55.007 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ed9abb17-7] Completed 200 OK
2025-08-11 02:35:55.008 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:36:57.981 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e85c38e2-8] HTTP GET "/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC"
2025-08-11 02:36:57.989 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC
2025-08-11 02:36:57.992 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [e85c38e2-8] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:36:58.002 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 02:36:58.004 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e85c38e2-8] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:36:58.004 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e85c38e2-8] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:36:58.015 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 02:36:58.015 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 02:36:58.018 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@6068432c
2025-08-11 02:36:58.027 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@dc5e3fa
2025-08-11 02:36:58.060 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:36:58.064 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 29
2025-08-11 02:36:58.066 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [e85c38e2-8] Encoding [PageResponse[content=[CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:36:58.067 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e85c38e2-8] Completed 200 OK
2025-08-11 02:36:58.067 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:37:34.901 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69a15ec0-9] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=APPROVED&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC"
2025-08-11 02:37:34.902 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=APPROVED&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC
2025-08-11 02:37:34.903 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [69a15ec0-9] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:37:34.908 [reactor-http-nio-9] [/] DEBUG o.s.web.method.HandlerMethod - [69a15ec0-9] Could not resolve parameter [11] in reactor.core.publisher.Mono<com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>> com.jade.platform.controller.CatalogController.filterCatalogsPaged(java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.math.BigDecimal,java.math.BigDecimal,java.util.UUID,java.lang.Double,java.lang.Double,com.jade.platform.domain.enums.ComplianceStatus,com.jade.platform.domain.enums.AvailabilityStatus,int,int,java.lang.String,java.lang.String): 400 BAD_REQUEST "Type mismatch."
2025-08-11 02:37:34.909 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [69a15ec0-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:37:34.909 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.server.ServerWebInputException: 400 BAD_REQUEST "Type mismatch."
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.applyConversion(AbstractNamedValueArgumentResolver.java:216)
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.lambda$resolveArgument$0(AbstractNamedValueArgumentResolver.java:117)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'com.jade.platform.domain.enums.ComplianceStatus'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam com.jade.platform.domain.enums.ComplianceStatus] for value [APPROVED]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:867)
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.applyConversion(AbstractNamedValueArgumentResolver.java:209)
	... 82 common frames omitted
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam com.jade.platform.domain.enums.ComplianceStatus] for value [APPROVED]
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:131)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	... 85 common frames omitted
Caused by: java.lang.IllegalArgumentException: No enum constant com.jade.platform.domain.enums.ComplianceStatus.APPROVED
	at java.base/java.lang.Enum.valueOf(Enum.java:293)
	at org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:54)
	at org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:39)
	at org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:415)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 88 common frames omitted
2025-08-11 02:37:34.911 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [69a15ec0-9] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:37:34.912 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [69a15ec0-9] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:37:34.912 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [69a15ec0-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:37:34.912 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [69a15ec0-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:37:34.914 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69a15ec0-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:37:34.914 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:38:49.749 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5549e1e5-10] HTTP GET "/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC"
2025-08-11 02:38:49.759 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC
2025-08-11 02:38:49.764 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5549e1e5-10] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:38:49.778 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 02:38:49.783 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5549e1e5-10] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:38:49.783 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5549e1e5-10] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:38:49.791 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 02:38:49.791 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 02:38:49.791 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@14539257
2025-08-11 02:38:49.792 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@6db210dd
2025-08-11 02:38:49.803 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:38:49.805 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 29
2025-08-11 02:38:49.808 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [5549e1e5-10] Encoding [PageResponse[content=[CatalogDTO[id=96fadd13-8145-4d1c-b3ce-5f6856ee29fc, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:38:49.809 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5549e1e5-10] Completed 200 OK
2025-08-11 02:38:49.809 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:40:47.609 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:40:47.619 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:40:51.808 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 78803 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:40:51.809 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:40:51.809 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:40:52.348 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:40:52.423 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 02:40:52.817 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:40:52.869 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:40:52.952 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:40:53.113 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:40:53.377 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:40:53.393 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:40:53.503 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:40:53.532 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:40:53.564 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:40:53.872 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:40:54.092 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:40:54.130 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:40:54.132 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:40:54.136 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:40:54.137 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:40:54.137 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:40:55.735 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:40:55.794 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:40:55.802 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.282 seconds (process running for 4.678)
2025-08-11 02:40:55.803 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:40:55.950 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 02:41:04.603 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ced71e3-1] HTTP GET "/"
2025-08-11 02:41:04.615 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/
2025-08-11 02:41:04.630 [reactor-http-nio-2] [/] DEBUG o.s.w.r.f.s.s.RouterFunctionMapping - [3ced71e3-1] Mapped to org.springframework.boot.autoconfigure.web.reactive.WelcomePageRouterFunctionFactory$$Lambda/0x000000d00172e630@2c840596
2025-08-11 02:41:04.645 [boundedElastic-1] [/] DEBUG org.springframework.web.HttpLogging - [3ced71e3-1] Zero-copy [class path resource [static/index.html]]
2025-08-11 02:41:04.650 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ced71e3-1] Completed 200 OK
2025-08-11 02:41:04.652 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:41:05.285 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ced71e3-2] HTTP GET "/openapi.yaml"
2025-08-11 02:41:05.287 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/openapi.yaml
2025-08-11 02:41:05.289 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [3ced71e3-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:41:05.292 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a9a0706f-3] HTTP GET "/favicon.ico"
2025-08-11 02:41:05.293 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:41:05.293 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [a9a0706f-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:41:05.294 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [a9a0706f-3] Resource not found
2025-08-11 02:41:05.298 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [a9a0706f-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:41:05.299 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:41:05.305 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [3ced71e3-2] Resource associated with 'application/octet-stream'
2025-08-11 02:41:05.305 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [3ced71e3-2] Zero-copy [class path resource [static/openapi.yaml]]
2025-08-11 02:41:05.306 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ced71e3-2] Completed 200 OK
2025-08-11 02:41:05.306 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:41:05.311 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a9a0706f-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:41:05.311 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a9a0706f-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:41:05.318 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [a9a0706f-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:41:05.327 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a9a0706f-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:41:05.327 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:41:25.913 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bcffa632-4] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:41:25.916 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:41:25.923 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [bcffa632-4] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:41:25.945 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:41:25.955 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [bcffa632-4] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:41:25.956 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [bcffa632-4] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:41:26.021 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:41:26.026 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:41:26.026 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@ae04196
2025-08-11 02:41:26.031 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@68d8b9b9
2025-08-11 02:41:26.064 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:41:26.065 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 50
2025-08-11 02:41:26.075 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [bcffa632-4] Encoding [PageResponse[content=[CatalogDTO[id=55f08445-6f87-46cf-abd3-a7a54a81d21e, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:41:26.080 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bcffa632-4] Completed 200 OK
2025-08-11 02:41:26.081 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:41:53.130 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [623a52e8-5] HTTP GET "/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:41:53.131 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:41:53.132 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [623a52e8-5] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:41:53.135 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:41:53.136 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [623a52e8-5] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:41:53.136 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [623a52e8-5] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:41:53.144 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:41:53.144 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:41:53.145 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@3c1ab4ef
2025-08-11 02:41:53.149 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@79416380
2025-08-11 02:41:53.179 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:41:53.181 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 29
2025-08-11 02:41:53.185 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [623a52e8-5] Encoding [PageResponse[content=[CatalogDTO[id=55f08445-6f87-46cf-abd3-a7a54a81d21e, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:41:53.186 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [623a52e8-5] Completed 200 OK
2025-08-11 02:41:53.186 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:42:15.681 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa95340a-6] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:42:15.696 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:42:15.697 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [aa95340a-6] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:42:15.700 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:42:15.702 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [aa95340a-6] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:42:15.703 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [aa95340a-6] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:42:15.714 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:42:15.715 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:42:15.715 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@6d638862
2025-08-11 02:42:15.720 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@565d99ea
2025-08-11 02:42:15.736 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:42:15.740 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 15
2025-08-11 02:42:15.742 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [aa95340a-6] Encoding [PageResponse[content=[CatalogDTO[id=1eb02892-ea3e-4042-b63c-aeb9c03a7217, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:42:15.743 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [aa95340a-6] Completed 200 OK
2025-08-11 02:42:15.744 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:42:41.241 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [82b4cb1d-7] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=NON_COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:42:41.242 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=NON_COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:42:41.243 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [82b4cb1d-7] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:42:41.244 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:42:41.245 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [82b4cb1d-7] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:42:41.245 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [82b4cb1d-7] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:42:41.256 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=NON_COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:42:41.257 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=NON_COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:42:41.257 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@2ea6d2b8
2025-08-11 02:42:41.258 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@1f04d100
2025-08-11 02:42:41.265 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:42:41.266 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 14
2025-08-11 02:42:41.268 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [82b4cb1d-7] Encoding [PageResponse[content=[CatalogDTO[id=55f08445-6f87-46cf-abd3-a7a54a81d21e, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:42:41.268 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [82b4cb1d-7] Completed 200 OK
2025-08-11 02:42:41.269 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:43:10.604 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e95077ff-8] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=NON_COMPLIANT&availabilityStatus=UNAVAILABLE&page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:43:10.605 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=NON_COMPLIANT&availabilityStatus=UNAVAILABLE&page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:43:10.606 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [e95077ff-8] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:43:10.607 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:43:10.607 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e95077ff-8] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:43:10.607 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e95077ff-8] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:43:10.611 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=NON_COMPLIANT, availabilityStatus=UNAVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:43:10.611 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=NON_COMPLIANT, availabilityStatus=UNAVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:43:10.611 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@621467a8
2025-08-11 02:43:10.612 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@10780975
2025-08-11 02:43:10.619 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:43:10.620 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 11
2025-08-11 02:43:10.623 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [e95077ff-8] Encoding [PageResponse[content=[CatalogDTO[id=c4902ec0-3443-403b-b346-25fc7ffe221f, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:43:10.624 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e95077ff-8] Completed 200 OK
2025-08-11 02:43:10.624 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:43:49.940 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2ca80d9d-9] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=UNAVAILABLE&page=0&size=20&sort=createdOn&direction=ASC"
2025-08-11 02:43:49.943 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=UNAVAILABLE&page=0&size=20&sort=createdOn&direction=ASC
2025-08-11 02:43:49.943 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2ca80d9d-9] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:43:49.944 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 02:43:49.945 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2ca80d9d-9] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:43:49.945 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2ca80d9d-9] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 02:43:49.948 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=UNAVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:43:49.948 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=UNAVAILABLE], Page request [number: 0, size 20, sort: createdOn: ASC]
2025-08-11 02:43:49.948 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@4525cb45
2025-08-11 02:43:49.949 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@50e6e233
2025-08-11 02:43:49.956 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:43:49.958 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 10
2025-08-11 02:43:49.959 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [2ca80d9d-9] Encoding [PageResponse[content=[CatalogDTO[id=06944048-376d-42d0-ad38-8c630674dca3, title=Sample Catalog Item  (truncated)...]
2025-08-11 02:43:49.960 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2ca80d9d-9] Completed 200 OK
2025-08-11 02:43:49.960 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:44:15.859 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [72843f26-10] HTTP GET "/favicon.ico"
2025-08-11 02:44:15.860 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:44:15.861 [reactor-http-nio-10] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [72843f26-10] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:44:15.864 [reactor-http-nio-10] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [72843f26-10] Resource not found
2025-08-11 02:44:15.868 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [72843f26-10] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:44:15.868 [reactor-http-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:44:15.870 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [72843f26-10] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:44:15.870 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [72843f26-10] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:44:15.871 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [72843f26-10] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:44:15.871 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [72843f26-10] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:44:15.872 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:44:50.188 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7dc1a56a-11] HTTP GET "/api/v1/catalogs/filter?industryId=186a1d63-f88d-4a59-b4b7-97ab611f924c&page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 02:44:50.190 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter?industryId=186a1d63-f88d-4a59-b4b7-97ab611f924c&page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 02:44:50.191 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7dc1a56a-11] Mapped to com.jade.platform.controller.CatalogController#filterCatalogs(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 02:44:50.197 [reactor-http-nio-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria and sorting: sort=createdOn, direction=DESC
2025-08-11 02:44:50.203 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7dc1a56a-11] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:44:50.203 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7dc1a56a-11] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:44:50.221 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=186a1d63-f88d-4a59-b4b7-97ab611f924c, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 02:44:50.222 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@1ebe8904
2025-08-11 02:44:50.234 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [7dc1a56a-11] Encoding [CatalogDTO[id=666ec7f3-9376-49e9-b95b-37e1762dacd4, title=Sample Catalog Item 49, description=This i (truncated)...]
2025-08-11 02:44:50.238 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 02:44:50.243 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7dc1a56a-11] Completed 200 OK
2025-08-11 02:44:50.244 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 02:45:07.949 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5ac683fc-12] HTTP GET "/favicon.ico"
2025-08-11 02:45:07.950 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:45:07.951 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [5ac683fc-12] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:45:07.952 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [5ac683fc-12] Resource not found
2025-08-11 02:45:07.952 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [5ac683fc-12] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:45:07.952 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:45:07.953 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [5ac683fc-12] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:45:07.953 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [5ac683fc-12] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:45:07.953 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [5ac683fc-12] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:45:07.954 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5ac683fc-12] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:45:07.954 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:45:37.516 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [906834c9-13] HTTP GET "/favicon.ico"
2025-08-11 02:45:37.518 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:45:37.519 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [906834c9-13] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:45:37.519 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [906834c9-13] Resource not found
2025-08-11 02:45:37.520 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [906834c9-13] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:45:37.520 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:45:37.521 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [906834c9-13] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:45:37.521 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [906834c9-13] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:45:37.521 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [906834c9-13] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:45:37.521 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [906834c9-13] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:45:37.521 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:45:56.918 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7edbe98b-14] HTTP GET "/favicon.ico"
2025-08-11 02:45:56.920 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:45:56.929 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [7edbe98b-14] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:45:56.935 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [7edbe98b-14] Resource not found
2025-08-11 02:45:56.938 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [7edbe98b-14] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:45:56.939 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:45:56.943 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7edbe98b-14] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:45:56.943 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7edbe98b-14] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:45:56.943 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [7edbe98b-14] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:45:56.945 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7edbe98b-14] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:45:56.945 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:06.774 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ffc20792-15] HTTP GET "/favicon.ico"
2025-08-11 02:46:06.775 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:46:06.775 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [ffc20792-15] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:46:06.776 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [ffc20792-15] Resource not found
2025-08-11 02:46:06.776 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ffc20792-15] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:46:06.776 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:46:06.778 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ffc20792-15] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:46:06.778 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ffc20792-15] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:46:06.778 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [ffc20792-15] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:46:06.779 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ffc20792-15] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:06.779 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:28.231 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29a059b4-16] HTTP GET "/favicon.ico"
2025-08-11 02:46:28.233 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:46:28.235 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [29a059b4-16] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:46:28.235 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [29a059b4-16] Resource not found
2025-08-11 02:46:28.236 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [29a059b4-16] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:46:28.237 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:46:28.239 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [29a059b4-16] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:46:28.239 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [29a059b4-16] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:46:28.239 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [29a059b4-16] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:46:28.241 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29a059b4-16] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:28.241 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:33.191 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [15fa7b00-17] HTTP GET "/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4"
2025-08-11 02:46:33.194 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:46:33.195 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [15fa7b00-17] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 02:46:33.197 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:46:33.206 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [15fa7b00-17] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:46:33.207 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findById(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:46:33.207 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [15fa7b00-17] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:46:33.208 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [15fa7b00-17] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:46:33.208 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [15fa7b00-17] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:46:33.208 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [15fa7b00-17] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:46:33.208 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [15fa7b00-17] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:46:33.209 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:35.973 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [fbe1ce55-18] HTTP GET "/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4"
2025-08-11 02:47:35.977 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:35.979 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [fbe1ce55-18] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 02:47:35.981 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:35.984 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [fbe1ce55-18] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:47:35.984 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findById(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:47:35.986 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [fbe1ce55-18] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:47:35.986 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [fbe1ce55-18] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:47:35.986 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [fbe1ce55-18] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:47:35.987 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [fbe1ce55-18] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:47:35.988 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [fbe1ce55-18] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:35.989 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:37.049 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [43ab9065-19] HTTP GET "/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4"
2025-08-11 02:47:37.050 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:37.050 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [43ab9065-19] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 02:47:37.050 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:37.051 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [43ab9065-19] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:47:37.051 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findById(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:47:37.051 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [43ab9065-19] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:47:37.051 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [43ab9065-19] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:47:37.051 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [43ab9065-19] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:47:37.052 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [43ab9065-19] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:47:37.052 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [43ab9065-19] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:37.053 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:41.301 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:47:41.309 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:47:45.129 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 79014 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:47:45.130 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:47:45.130 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:47:45.608 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:47:45.687 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 1 R2DBC repository interface.
2025-08-11 02:47:46.059 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:47:46.117 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:47:46.196 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:47:46.358 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:47:46.634 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:47:46.651 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:47:46.758 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:47:46.783 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:47:46.818 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:47:47.093 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:47:47.318 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:47:47.363 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:47:47.365 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:47:47.369 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:47:48.980 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:47:49.038 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:47:49.050 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.164 seconds (process running for 4.518)
2025-08-11 02:47:49.051 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:47:49.197 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 02:47:56.813 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e8ac731a-1] HTTP GET "/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4"
2025-08-11 02:47:56.823 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:56.825 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [e8ac731a-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 02:47:56.838 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 666ec7f3-9376-49e9-b95b-37e1762dacd4
2025-08-11 02:47:56.842 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [e8ac731a-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:47:56.842 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findById(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:47:56.852 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e8ac731a-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:47:56.853 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e8ac731a-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:47:56.853 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e8ac731a-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:47:56.859 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [e8ac731a-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:47:56.871 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e8ac731a-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:47:56.873 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:16.623 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0d3fadb3-2] HTTP GET "/favicon.ico"
2025-08-11 02:48:16.627 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:48:16.638 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [0d3fadb3-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:48:16.641 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [0d3fadb3-2] Resource not found
2025-08-11 02:48:16.643 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [0d3fadb3-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:48:16.643 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:48:16.646 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0d3fadb3-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:48:16.646 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0d3fadb3-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:48:16.647 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [0d3fadb3-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:48:16.648 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0d3fadb3-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:16.649 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:21.785 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e20ca059-3] HTTP GET "/favicon.ico"
2025-08-11 02:48:21.785 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:48:21.786 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [e20ca059-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:48:21.787 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [e20ca059-3] Resource not found
2025-08-11 02:48:21.788 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [e20ca059-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:48:21.789 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:48:21.791 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e20ca059-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:48:21.791 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e20ca059-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:48:21.791 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [e20ca059-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:48:21.792 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e20ca059-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:21.793 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:53.956 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [edf9b365-4] HTTP GET "/favicon.ico"
2025-08-11 02:48:53.957 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:48:53.959 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [edf9b365-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:48:53.959 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [edf9b365-4] Resource not found
2025-08-11 02:48:53.960 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [edf9b365-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:48:53.960 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:48:53.961 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [edf9b365-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:48:53.961 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [edf9b365-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:48:53.961 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [edf9b365-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:48:53.962 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [edf9b365-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:48:53.963 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:50:07.427 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [08efb57d-5] HTTP POST "/api/v1/catalogs"
2025-08-11 02:50:07.431 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 02:50:07.432 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [08efb57d-5] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 02:50:07.438 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [08efb57d-5] Content-Type:application/json
2025-08-11 02:50:07.471 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [08efb57d-5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:50:07.498 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [08efb57d-5] Decoded [CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=string, industryId=198 (truncated)...]
2025-08-11 02:50:07.523 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [08efb57d-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleValidationException(WebExchangeBindException)
2025-08-11 02:50:07.523 [reactor-http-nio-6] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling validation exception: Validation failed for argument at index 0 in method: reactor.core.publisher.Mono<com.jade.platform.dto.CatalogDTO> com.jade.platform.controller.CatalogController.createCatalog(com.jade.platform.dto.CatalogDTO), with 1 error(s): [Field error in object 'catalogDTO' on field 'description': rejected value [string]; codes [Size.catalogDTO.description,Size.description,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [catalogDTO.description,description]; arguments []; default message [description],4000,10]; default message [Description must be between 10 and 4000 characters]] 
2025-08-11 02:50:07.524 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [08efb57d-5] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:50:07.524 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [08efb57d-5] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:50:07.524 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [08efb57d-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:50:07.524 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [08efb57d-5] Encoding [ProblemDetail[type='about:blank', title='Validation Error', status=400, detail='Validation failed',  (truncated)...]
2025-08-11 02:50:07.525 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [08efb57d-5] Completed 400 BAD_REQUEST
2025-08-11 02:50:07.526 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 400 BAD_REQUEST
2025-08-11 02:51:04.882 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f0756211-6] HTTP POST "/api/v1/catalogs"
2025-08-11 02:51:04.885 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 02:51:04.887 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f0756211-6] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 02:51:04.888 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f0756211-6] Content-Type:application/json
2025-08-11 02:51:04.889 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f0756211-6] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:51:04.894 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [f0756211-6] Decoded [CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health suppl (truncated)...]
2025-08-11 02:51:04.898 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:51:04.913 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f0756211-6] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:51:04.913 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f0756211-6] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:51:04.947 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:51:04.947 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 02:51:04.996 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f0756211-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:51:04.997 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [19896c9d-0af0-4000-85a5-841e38c9c401] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:51:04.998 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f0756211-6] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:51:04.999 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f0756211-6] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:51:04.999 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f0756211-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:51:04.999 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f0756211-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:51:04.999 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f0756211-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:51:04.999 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:51:17.291 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [63040977-7] HTTP POST "/api/v1/catalogs"
2025-08-11 02:51:17.295 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 02:51:17.297 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [63040977-7] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 02:51:17.299 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [63040977-7] Content-Type:application/json
2025-08-11 02:51:17.300 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [63040977-7] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:51:17.302 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [63040977-7] Decoded [CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health suppl (truncated)...]
2025-08-11 02:51:17.304 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:51:17.306 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [63040977-7] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:51:17.306 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [63040977-7] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:51:17.314 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=19896c9d-0af0-4000-85a5-841e38c9c401, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:51:17.314 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 02:51:17.330 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [63040977-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:51:17.331 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [19896c9d-0af0-4000-85a5-841e38c9c401] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:51:17.332 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [63040977-7] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:51:17.332 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [63040977-7] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:51:17.332 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [63040977-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:51:17.333 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [63040977-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:51:17.333 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [63040977-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:51:17.333 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:51:43.579 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b01791ce-8] HTTP GET "/favicon.ico"
2025-08-11 02:51:43.591 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:51:43.594 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [b01791ce-8] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:51:43.596 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [b01791ce-8] Resource not found
2025-08-11 02:51:43.597 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [b01791ce-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:51:43.597 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:51:43.599 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b01791ce-8] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:51:43.599 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b01791ce-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:51:43.599 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [b01791ce-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:51:43.600 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b01791ce-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:51:43.601 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:52:06.375 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f67a0cbb-9] HTTP POST "/api/v1/catalogs"
2025-08-11 02:52:06.386 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 02:52:06.407 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6e694d12-10] HTTP GET "/favicon.ico"
2025-08-11 02:52:06.407 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f67a0cbb-9] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 02:52:06.407 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 02:52:06.411 [reactor-http-nio-1] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [6e694d12-10] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 02:52:06.411 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f67a0cbb-9] Content-Type:application/json
2025-08-11 02:52:06.412 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f67a0cbb-9] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:52:06.412 [reactor-http-nio-1] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [6e694d12-10] Resource not found
2025-08-11 02:52:06.414 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [6e694d12-10] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:52:06.414 [reactor-http-nio-1] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:52:06.416 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [f67a0cbb-9] Decoded [CatalogDTO[id=null, title=string, description=This is a health supplement, industryId=19896c9d-0af0- (truncated)...]
2025-08-11 02:52:06.416 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6e694d12-10] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 02:52:06.416 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6e694d12-10] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:52:06.416 [reactor-http-nio-1] [/] DEBUG org.springframework.web.HttpLogging - [6e694d12-10] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:52:06.417 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:52:06.417 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6e694d12-10] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:52:06.418 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:52:06.418 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f67a0cbb-9] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 02:52:06.418 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f67a0cbb-9] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 02:52:06.427 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=string, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 02:52:06.428 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 02:52:06.456 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f67a0cbb-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 02:52:06.456 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 02:52:06.457 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f67a0cbb-9] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 02:52:06.457 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f67a0cbb-9] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 02:52:06.457 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f67a0cbb-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 02:52:06.457 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f67a0cbb-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 02:52:06.458 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f67a0cbb-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 02:52:06.458 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 02:57:58.281 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 02:57:58.290 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 02:58:03.399 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 79503 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 02:58:03.400 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 02:58:03.400 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 02:58:04.038 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 02:58:04.126 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 1 R2DBC repository interface.
2025-08-11 02:58:04.549 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 02:58:04.620 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 02:58:04.708 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 02:58:04.867 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 02:58:05.156 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 02:58:05.173 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 02:58:05.278 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 02:58:05.316 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 02:58:05.353 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 02:58:05.645 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 02:58:05.906 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:58:05.948 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 02:58:05.950 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 02:58:05.953 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 02:58:05.953 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 02:58:05.953 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 02:58:05.953 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 02:58:05.954 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 02:58:05.954 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 02:58:05.954 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 02:58:05.954 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 02:58:07.564 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 02:58:07.626 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 02:58:07.635 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.73 seconds (process running for 5.055)
2025-08-11 02:58:07.637 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 02:58:07.873 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:07:38.675 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:07:38.681 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:08:34.619 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 79902 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:08:34.620 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:08:34.621 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:08:35.173 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:08:35.248 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 1 R2DBC repository interface.
2025-08-11 03:08:35.648 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:08:35.705 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:08:35.793 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:08:35.959 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:08:36.249 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:08:36.273 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:08:36.415 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:08:36.460 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:08:36.504 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:08:36.800 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:08:37.036 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:08:37.074 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:08:37.076 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:08:37.080 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:08:37.081 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:08:37.081 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:08:38.690 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:08:38.757 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:08:38.766 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.399 seconds (process running for 6.901)
2025-08-11 03:08:38.767 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:08:38.941 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:09:15.350 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [91aa1420-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:09:15.363 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:09:15.367 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [91aa1420-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:09:15.387 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [91aa1420-1] Content-Type:application/json
2025-08-11 03:09:15.424 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [91aa1420-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:09:15.456 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [91aa1420-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:09:15.479 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:09:15.493 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [91aa1420-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:09:15.493 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [91aa1420-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:09:15.517 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:09:15.517 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:09:15.569 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [91aa1420-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:09:15.571 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [7f186f1c-d0b4-410b-9881-ef51eeb9fa6d] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:09:15.592 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [91aa1420-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:09:15.592 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [91aa1420-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:09:15.592 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [91aa1420-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:09:15.600 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [91aa1420-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:09:15.612 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [91aa1420-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:09:15.616 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:15:56.514 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:15:56.522 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:16:01.317 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 80163 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:16:01.318 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:16:01.318 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:16:01.908 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:16:01.979 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 1 R2DBC repository interface.
2025-08-11 03:16:02.363 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:16:02.415 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:16:02.515 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:16:02.676 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:16:02.963 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:16:02.979 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:16:03.097 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:16:03.126 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:16:03.157 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:16:03.472 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:16:03.683 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:16:03.724 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:16:03.725 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:16:03.729 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:16:03.730 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:16:05.337 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:16:05.393 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:16:05.401 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.524 seconds (process running for 4.826)
2025-08-11 03:16:05.403 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:16:05.561 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:16:19.315 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9195c911-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:16:19.325 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:16:19.328 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [9195c911-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:16:19.339 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [9195c911-1] Content-Type:application/json
2025-08-11 03:16:19.362 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [9195c911-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:16:19.386 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [9195c911-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:16:19.403 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:16:19.414 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9195c911-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:16:19.415 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9195c911-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:16:19.440 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:16:19.440 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:16:19.482 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [9195c911-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:16:19.482 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [aa4675b1-3ada-46b5-b0ba-0183592e8120] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:16:19.491 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9195c911-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:16:19.491 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9195c911-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:16:19.491 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9195c911-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:16:19.494 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [9195c911-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:16:19.500 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9195c911-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:16:19.502 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:27:23.773 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:27:23.784 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:27:28.981 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 80582 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:27:28.982 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:27:28.983 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:27:29.566 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:27:29.644 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 1 R2DBC repository interface.
2025-08-11 03:27:30.023 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:27:30.081 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:27:30.158 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:27:30.323 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:27:30.604 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:27:30.621 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:27:30.730 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:27:30.757 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:27:30.787 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:27:31.085 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:27:31.312 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:27:31.351 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:27:31.352 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:27:31.356 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:27:31.357 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:27:32.965 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:27:33.051 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:27:33.060 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.557 seconds (process running for 4.878)
2025-08-11 03:27:33.061 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:27:33.221 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:27:48.418 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0679303a-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:27:48.429 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:27:48.433 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [0679303a-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:27:48.463 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [0679303a-1] Content-Type:application/json
2025-08-11 03:27:48.481 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [0679303a-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:27:48.504 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [0679303a-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:27:48.520 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:27:48.527 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0679303a-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:27:48.527 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0679303a-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:27:48.545 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:27:48.545 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:27:48.594 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [0679303a-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:27:48.595 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:27:48.603 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0679303a-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:27:48.603 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0679303a-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:27:48.603 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0679303a-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:27:48.605 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [0679303a-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:27:48.611 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0679303a-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:27:48.614 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:32:24.905 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:32:24.920 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:32:30.106 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 80771 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:32:30.106 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:32:30.107 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:32:30.684 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:32:30.759 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 03:32:31.149 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:32:31.209 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:32:31.294 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:32:31.458 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:32:31.776 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:32:31.796 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:32:31.910 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:32:31.937 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:32:31.975 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:32:32.267 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:32:32.499 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:32:32.540 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:32:32.542 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:32:32.547 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:32:32.548 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:32:34.162 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:32:34.227 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:32:34.236 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.535 seconds (process running for 4.838)
2025-08-11 03:32:34.237 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:32:34.400 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:33:07.562 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8fd3beff-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:33:07.575 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:33:07.583 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [8fd3beff-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:33:07.593 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [8fd3beff-1] Content-Type:application/json
2025-08-11 03:33:07.615 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [8fd3beff-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:33:07.645 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [8fd3beff-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:33:07.663 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:33:07.678 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [8fd3beff-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:33:07.678 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [8fd3beff-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:33:07.696 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:33:07.696 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:33:07.752 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [8fd3beff-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:33:07.752 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (id, title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)]; null value in column "updated_on" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "updated_on" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:33:07.760 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8fd3beff-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:33:07.761 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8fd3beff-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:33:07.761 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8fd3beff-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:33:07.764 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [8fd3beff-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:33:07.771 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8fd3beff-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:33:07.774 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:35:39.283 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:35:39.290 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:35:44.178 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 80896 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:35:44.178 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:35:44.179 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:35:44.701 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:35:44.790 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 1 R2DBC repository interface.
2025-08-11 03:35:45.192 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:35:45.243 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:35:45.323 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:35:45.481 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:35:45.757 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:35:45.775 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:35:45.883 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:35:45.917 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:35:45.964 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:35:46.251 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:35:46.488 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:35:46.533 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:35:46.534 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:35:46.538 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:35:46.539 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:35:48.149 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:35:48.212 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:35:48.226 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.38 seconds (process running for 4.731)
2025-08-11 03:35:48.228 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:35:48.377 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:36:01.872 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c45a0c5b-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:36:01.883 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:36:01.887 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [c45a0c5b-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:36:01.895 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [c45a0c5b-1] Content-Type:application/json
2025-08-11 03:36:01.940 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [c45a0c5b-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:36:01.964 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [c45a0c5b-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:36:01.981 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:36:01.995 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c45a0c5b-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:36:01.995 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c45a0c5b-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:36:02.010 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:36:02.010 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:36:02.049 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c45a0c5b-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:36:02.050 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [0a6a270e-fdde-41d0-96c9-d8b89733259b] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:36:02.056 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c45a0c5b-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:36:02.056 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c45a0c5b-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:36:02.057 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c45a0c5b-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:36:02.059 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [c45a0c5b-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:36:02.064 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c45a0c5b-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:36:02.065 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:36:49.934 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:36:49.938 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 03:36:54.459 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 80947 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 03:36:54.459 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 03:36:54.460 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 03:36:54.990 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 03:36:55.065 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 R2DBC repository interface.
2025-08-11 03:36:55.473 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 03:36:55.527 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 03:36:55.608 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 03:36:55.772 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 03:36:56.058 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 03:36:56.076 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 03:36:56.195 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 03:36:56.224 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 03:36:56.254 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 03:36:56.601 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 03:36:56.822 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:36:56.861 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 03:36:56.863 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 03:36:56.867 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 03:36:56.868 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 03:36:58.026 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 03:36:58.083 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 03:36:58.091 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 3.98 seconds (process running for 4.302)
2025-08-11 03:36:58.093 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 03:36:58.254 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 03:37:11.563 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [347e1a7a-1] HTTP POST "/api/v1/catalogs"
2025-08-11 03:37:11.606 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 03:37:11.619 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [347e1a7a-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 03:37:11.651 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [347e1a7a-1] Content-Type:application/json
2025-08-11 03:37:11.697 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [347e1a7a-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:37:11.759 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [347e1a7a-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 03:37:11.811 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:37:11.830 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [347e1a7a-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 03:37:11.830 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [347e1a7a-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 03:37:11.859 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 03:37:11.859 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 03:37:11.961 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [347e1a7a-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 03:37:11.962 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 03:37:11.978 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [347e1a7a-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 03:37:11.978 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [347e1a7a-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 03:37:11.978 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [347e1a7a-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 03:37:11.981 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [347e1a7a-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 03:37:11.989 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [347e1a7a-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 03:37:11.993 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 03:40:14.135 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 03:40:14.142 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:00:26.586 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 82522 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:00:26.587 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:00:26.587 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:00:27.280 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:00:27.372 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 1 R2DBC repository interface.
2025-08-11 09:00:27.773 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:00:27.834 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:00:27.925 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:00:28.099 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:00:28.399 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:00:28.418 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:00:28.543 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:00:28.573 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:00:28.615 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:00:28.934 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:00:29.204 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:00:29.295 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:00:29.298 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:00:29.308 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:00:29.309 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:00:30.947 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:00:31.007 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:00:31.016 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.826 seconds (process running for 5.423)
2025-08-11 09:00:31.017 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:00:31.193 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 09:00:41.760 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bde6ed20-1] HTTP POST "/api/v1/catalogs"
2025-08-11 09:00:41.775 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 09:00:41.778 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [bde6ed20-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 09:00:41.788 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [bde6ed20-1] Content-Type:application/json
2025-08-11 09:00:41.821 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [bde6ed20-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:00:41.853 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [bde6ed20-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 09:00:41.875 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:00:41.885 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [bde6ed20-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 09:00:41.885 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [bde6ed20-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:00:41.904 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:00:41.904 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 09:00:41.954 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bde6ed20-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 09:00:41.954 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 09:00:41.962 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bde6ed20-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 09:00:41.963 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bde6ed20-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 09:00:41.963 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bde6ed20-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 09:00:41.965 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [bde6ed20-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 09:00:41.971 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bde6ed20-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 09:00:41.973 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 09:05:04.300 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 09:05:04.304 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:05:09.136 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 82683 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:05:09.137 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:05:09.139 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:05:09.642 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:05:09.716 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 R2DBC repository interface.
2025-08-11 09:05:10.100 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:05:10.151 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:05:10.244 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:05:10.405 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:05:10.686 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:05:10.703 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:05:10.807 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:05:10.831 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:05:10.860 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:05:11.150 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:05:11.379 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:05:11.429 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:05:11.435 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:05:11.441 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:05:11.442 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:05:11.443 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:05:13.080 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:05:13.136 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:05:13.144 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.374 seconds (process running for 4.687)
2025-08-11 09:05:13.146 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:05:13.291 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 09:05:20.222 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [87d26e09-1] HTTP POST "/api/v1/catalogs"
2025-08-11 09:05:20.234 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 09:05:20.237 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [87d26e09-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 09:05:20.248 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [87d26e09-1] Content-Type:application/json
2025-08-11 09:05:20.268 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [87d26e09-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:05:20.295 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [87d26e09-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 09:05:20.317 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:05:20.328 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [87d26e09-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 09:05:20.329 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [87d26e09-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:05:20.349 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:05:20.350 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 09:05:20.393 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [87d26e09-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 09:05:20.394 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 09:05:20.405 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [87d26e09-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 09:05:20.405 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [87d26e09-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 09:05:20.405 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [87d26e09-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 09:05:20.408 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [87d26e09-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 09:05:20.414 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [87d26e09-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 09:05:20.416 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 09:07:10.376 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 09:07:10.380 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:07:14.939 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 82760 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:07:14.940 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:07:14.940 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:07:15.430 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:07:15.513 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 1 R2DBC repository interface.
2025-08-11 09:07:15.885 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:07:15.939 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:07:16.023 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:07:16.180 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:07:16.462 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:07:16.479 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:07:16.596 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:07:16.623 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:07:16.654 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:07:16.945 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:07:17.177 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:07:17.217 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:07:17.218 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:07:17.222 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:07:17.222 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:07:17.223 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:07:18.825 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:07:18.886 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:07:18.894 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.21 seconds (process running for 4.558)
2025-08-11 09:07:18.895 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:07:19.051 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 09:07:25.962 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e56d26c2-1] HTTP POST "/api/v1/catalogs"
2025-08-11 09:07:25.974 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 09:07:25.978 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [e56d26c2-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 09:07:25.986 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [e56d26c2-1] Content-Type:application/json
2025-08-11 09:07:26.006 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [e56d26c2-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:07:26.055 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [e56d26c2-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 09:07:26.079 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:07:26.086 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e56d26c2-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 09:07:26.087 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e56d26c2-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:07:26.104 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:07:26.104 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 09:07:26.148 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [e56d26c2-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 09:07:26.149 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 09:07:26.157 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e56d26c2-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 09:07:26.157 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e56d26c2-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 09:07:26.158 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e56d26c2-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 09:07:26.160 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [e56d26c2-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 09:07:26.166 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e56d26c2-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 09:07:26.167 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 09:12:01.121 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 09:12:01.126 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:12:07.730 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 82920 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:12:07.731 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:12:07.731 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:12:08.217 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:12:08.289 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 R2DBC repository interface.
2025-08-11 09:12:08.656 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:12:08.710 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:12:08.792 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:12:08.951 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:12:09.246 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:12:09.265 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:12:09.396 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:12:09.427 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:12:09.460 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:12:09.785 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:12:10.051 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:12:10.102 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:12:10.103 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:12:10.107 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:12:10.108 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:12:11.727 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:12:11.788 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:12:11.796 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.331 seconds (process running for 6.799)
2025-08-11 09:12:11.798 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:12:12.003 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 09:12:18.019 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f57a16fa-1] HTTP POST "/api/v1/catalogs"
2025-08-11 09:12:18.038 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 09:12:18.041 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f57a16fa-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 09:12:18.049 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f57a16fa-1] Content-Type:application/json
2025-08-11 09:12:18.067 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [f57a16fa-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:12:18.104 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [f57a16fa-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 09:12:18.123 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:12:18.129 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f57a16fa-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 09:12:18.130 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f57a16fa-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 09:12:18.147 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 09:12:18.148 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 09:12:18.192 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f57a16fa-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 09:12:18.193 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)]; null value in column "id" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "id" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 09:12:18.201 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f57a16fa-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 09:12:18.201 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f57a16fa-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 09:12:18.201 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f57a16fa-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 09:12:18.203 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f57a16fa-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 09:12:18.208 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f57a16fa-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 09:12:18.210 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 09:56:13.005 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 09:56:13.064 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:56:18.656 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 84584 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:56:18.656 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:56:18.657 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:56:19.208 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:56:19.284 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 09:56:19.680 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:56:19.736 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:56:19.825 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:56:19.997 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:56:20.289 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:56:20.306 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:56:20.418 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:56:20.445 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:56:20.476 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:56:20.791 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:56:21.024 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:56:21.061 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:56:21.063 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:56:21.067 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:56:21.068 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:56:21.068 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:56:22.700 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:56:22.760 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:56:22.769 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.481 seconds (process running for 5.055)
2025-08-11 09:56:22.770 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:56:22.932 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 09:57:54.522 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 09:57:54.539 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 09:57:58.645 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 84649 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 09:57:58.646 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 09:57:58.646 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 09:57:59.169 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 09:57:59.253 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 1 R2DBC repository interface.
2025-08-11 09:57:59.630 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 09:57:59.682 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 09:57:59.768 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 09:57:59.928 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 09:58:00.204 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 09:58:00.220 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 09:58:00.340 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 09:58:00.366 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 09:58:00.395 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 09:58:00.704 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 09:58:00.925 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:58:00.968 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 09:58:00.969 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 09:58:00.974 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 09:58:00.975 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 09:58:02.578 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 09:58:02.641 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 09:58:02.650 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.261 seconds (process running for 4.606)
2025-08-11 09:58:02.652 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 09:58:02.810 [main] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 10:01:49.718 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e1d20c62-1] HTTP POST "/api/v1/catalogs"
2025-08-11 10:01:49.738 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 10:01:49.742 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [e1d20c62-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 10:01:49.751 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [e1d20c62-1] Content-Type:application/json
2025-08-11 10:01:49.773 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [e1d20c62-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 10:01:49.827 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [e1d20c62-1] Decoded [CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement,  (truncated)...]
2025-08-11 10:01:49.846 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 10:01:49.853 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e1d20c62-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 10:01:49.853 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [e1d20c62-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 10:01:49.880 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[id=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 10:01:49.881 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 10:01:49.932 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [e1d20c62-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 10:01:49.933 [reactor-tcp-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.TransientDataAccessResourceException: Failed to update table [catalog]; Row with Id [ec1bcf45-d95e-44d3-8b86-67060bb36c27] does not exist
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$13(R2dbcEntityTemplate.java:671)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:268)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:532)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:389)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:850)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:898)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:1001)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:261)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onComplete(FluxDiscardOnCancel.java:104)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:223)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:465)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:871)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:819)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:249)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:215)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:206)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.complete(ReactorNettyClient.java:680)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:946)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 10:01:49.942 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e1d20c62-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 10:01:49.943 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e1d20c62-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 10:01:49.943 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e1d20c62-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 10:01:49.947 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [e1d20c62-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 10:01:49.956 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e1d20c62-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 10:01:49.959 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 10:13:44.483 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 10:13:44.527 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 12:22:49.054 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 91275 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:22:49.055 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:22:49.056 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:22:49.524 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:22:49.534 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:22:49.560 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:22:49.591 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:22:49.609 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.889 seconds (process running for 3.36)
2025-08-11 12:22:49.632 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [257b6c58] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:22:49.651 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [594415e1] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:22:49.657 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:22:49.660 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [594415e1] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:22:49.672 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:22:49.694 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [594415e1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:22:49.695 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [594415e1] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.709 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [594415e1] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=8f4cf005-1293-4fd6- (truncated)...]
2025-08-11 12:22:49.719 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [594415e1] Completed 200 OK
2025-08-11 12:22:49.719 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:22:49.721 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [257b6c58] [3ed7cd5d] Response 200 OK
2025-08-11 12:22:49.753 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [257b6c58] [3ed7cd5d] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=8f4cf005-1293-4fd6- (truncated)...]
2025-08-11 12:22:49.753 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [594415e1] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=8f4cf005-1293-4fd6- (truncated)...]
2025-08-11 12:22:49.754 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [257b6c58] [3ed7cd5d] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=8f4cf005-1293-4fd6- (truncated)...]
2025-08-11 12:22:49.764 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61d8a491] HTTP DELETE /api/v1/catalogs/e6f3ab3a-9005-4089-a387-f3d8ba455cd7
2025-08-11 12:22:49.765 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [616ecc34] HTTP DELETE "/api/v1/catalogs/e6f3ab3a-9005-4089-a387-f3d8ba455cd7"
2025-08-11 12:22:49.765 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/e6f3ab3a-9005-4089-a387-f3d8ba455cd7
2025-08-11 12:22:49.765 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [616ecc34] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:22:49.766 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: e6f3ab3a-9005-4089-a387-f3d8ba455cd7
2025-08-11 12:22:49.767 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [616ecc34] Completed 204 NO_CONTENT
2025-08-11 12:22:49.768 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:22:49.768 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61d8a491] [5332157b] Response 204 NO_CONTENT
2025-08-11 12:22:49.772 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [314c6f89] HTTP POST /api/v1/catalogs
2025-08-11 12:22:49.775 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [314c6f89] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:22:49.775 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [787912bc] HTTP POST "/api/v1/catalogs"
2025-08-11 12:22:49.776 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:22:49.776 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [787912bc] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:22:49.777 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [787912bc] Content-Type:application/json
2025-08-11 12:22:49.777 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [787912bc] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.784 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [787912bc] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:22:49.813 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=ed0aab7e-1cb2-4689-b149-8f1738aeee13, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=31d4e79c-b245-4b89-aba0-9e1560dab895, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:22:49.814 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [787912bc] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:22:49.814 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [787912bc] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.815 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [787912bc] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:22:49.815 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [787912bc] Completed 201 CREATED
2025-08-11 12:22:49.815 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:22:49.815 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [314c6f89] [527ef28d] Response 201 CREATED
2025-08-11 12:22:49.816 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [314c6f89] [527ef28d] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:22:49.819 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6244afc4] HTTP GET /api/v1/catalogs/423dac86-c03d-4c82-87a5-5c1581e76676
2025-08-11 12:22:49.820 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6e0a8ee2] HTTP GET "/api/v1/catalogs/423dac86-c03d-4c82-87a5-5c1581e76676"
2025-08-11 12:22:49.820 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/423dac86-c03d-4c82-87a5-5c1581e76676
2025-08-11 12:22:49.820 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [6e0a8ee2] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:22:49.820 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 423dac86-c03d-4c82-87a5-5c1581e76676
2025-08-11 12:22:49.821 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6e0a8ee2] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:22:49.821 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6e0a8ee2] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.821 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6e0a8ee2] Completed 200 OK
2025-08-11 12:22:49.821 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:22:49.821 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6244afc4] [64f2e592] Response 200 OK
2025-08-11 12:22:49.824 [Test worker] [/] ERROR o.s.t.w.r.server.ExchangeResult - Request details for assertion failure:

> GET /api/v1/catalogs/423dac86-c03d-4c82-87a5-5c1581e76676
> WebTestClient-Request-Id: [4]

No content

< 200 OK OK
< X-Request-ID: [86a633e9-47af-4572-ae3c-ae1b59ed3bef]
< Content-Length: [0]

0 bytes of content (unknown content-type).

2025-08-11 12:22:49.828 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6765b6a2] HTTP PUT /api/v1/catalogs/6044322c-14bb-4d45-b053-c97ee750ce65
2025-08-11 12:22:49.828 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [6765b6a2] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:22:49.829 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1f08467] HTTP PUT "/api/v1/catalogs/6044322c-14bb-4d45-b053-c97ee750ce65"
2025-08-11 12:22:49.829 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/6044322c-14bb-4d45-b053-c97ee750ce65
2025-08-11 12:22:49.829 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [1f08467] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:22:49.830 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [1f08467] Content-Type:application/json
2025-08-11 12:22:49.830 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [1f08467] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.830 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [1f08467] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:22:49.831 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 6044322c-14bb-4d45-b053-c97ee750ce65
2025-08-11 12:22:49.831 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [1f08467] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:22:49.831 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [1f08467] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:22:49.831 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1f08467] Completed 200 OK
2025-08-11 12:22:49.831 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:22:49.832 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6765b6a2] [331186d5] Response 200 OK
2025-08-11 12:22:49.832 [Test worker] [/] ERROR o.s.t.w.r.server.ExchangeResult - Request details for assertion failure:

> PUT /api/v1/catalogs/6044322c-14bb-4d45-b053-c97ee750ce65
> WebTestClient-Request-Id: [5]
> Content-Type: [application/json]
> Content-Length: [460]

{"publicId":null,"title":"Updated Catalog","description":"Updated Description with sufficient length for validation","industryId":"f1b1abf1-8aa5-4400-b459-c68913285d40","industryName":"Updated Industry","categories":["UpdatedCategory"],"tags":["UpdatedTag"],"price":59.99,"merchantId":"c6761241-12e9-40d8-8a9a-a75fc352de61","rating":4.0,"complianceStatus":"COMPLIANT","availabilityStatus":"AVAILABLE","createdOn":null,"updatedOn":"2025-08-11T11:22:49.827671Z"}

< 200 OK OK
< X-Request-ID: [3707c784-031f-429f-8105-0a9ca567e4dd]
< Content-Length: [0]

0 bytes of content (unknown content-type).

2025-08-11 12:25:45.682 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 91540 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:25:45.683 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:25:45.683 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:25:46.080 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:25:46.087 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:25:46.110 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:25:46.135 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:25:46.152 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.746 seconds (process running for 2.156)
2025-08-11 12:25:46.173 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58486deb] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:25:46.188 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [723cb487] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:25:46.195 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:25:46.197 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [723cb487] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:25:46.209 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:25:46.230 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [723cb487] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:25:46.230 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [723cb487] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.243 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [723cb487] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=63eee268-51d6-4f13- (truncated)...]
2025-08-11 12:25:46.252 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [723cb487] Completed 200 OK
2025-08-11 12:25:46.252 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:25:46.255 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58486deb] [24994879] Response 200 OK
2025-08-11 12:25:46.289 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [58486deb] [24994879] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=63eee268-51d6-4f13- (truncated)...]
2025-08-11 12:25:46.289 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [723cb487] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=63eee268-51d6-4f13- (truncated)...]
2025-08-11 12:25:46.290 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [58486deb] [24994879] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=63eee268-51d6-4f13- (truncated)...]
2025-08-11 12:25:46.300 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d0df326] HTTP DELETE /api/v1/catalogs/c579baa7-cf8a-4651-b5b4-04285b485a85
2025-08-11 12:25:46.301 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69e48e8b] HTTP DELETE "/api/v1/catalogs/c579baa7-cf8a-4651-b5b4-04285b485a85"
2025-08-11 12:25:46.301 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/c579baa7-cf8a-4651-b5b4-04285b485a85
2025-08-11 12:25:46.301 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [69e48e8b] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:25:46.302 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: c579baa7-cf8a-4651-b5b4-04285b485a85
2025-08-11 12:25:46.302 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69e48e8b] Completed 204 NO_CONTENT
2025-08-11 12:25:46.303 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:25:46.304 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d0df326] [5ef52272] Response 204 NO_CONTENT
2025-08-11 12:25:46.307 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cefa0be] HTTP POST /api/v1/catalogs
2025-08-11 12:25:46.308 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4cefa0be] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:25:46.309 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b22b0a5] HTTP POST "/api/v1/catalogs"
2025-08-11 12:25:46.309 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:25:46.309 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2b22b0a5] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:25:46.310 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2b22b0a5] Content-Type:application/json
2025-08-11 12:25:46.310 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2b22b0a5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.316 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2b22b0a5] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:25:46.346 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=dcdac711-181e-46ea-b3e9-9e334e131e6a, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=f0d3758d-cccf-423f-9167-9d5f453b3f0c, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:25:46.347 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b22b0a5] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:25:46.347 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2b22b0a5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.348 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2b22b0a5] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:25:46.349 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b22b0a5] Completed 201 CREATED
2025-08-11 12:25:46.349 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:25:46.349 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cefa0be] [6001433f] Response 201 CREATED
2025-08-11 12:25:46.350 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [4cefa0be] [6001433f] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:25:46.353 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c7c898a] HTTP GET /api/v1/catalogs/75522653-e66d-462c-9946-27fedb3e3dc0
2025-08-11 12:25:46.353 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [21785c82] HTTP GET "/api/v1/catalogs/75522653-e66d-462c-9946-27fedb3e3dc0"
2025-08-11 12:25:46.353 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/75522653-e66d-462c-9946-27fedb3e3dc0
2025-08-11 12:25:46.353 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [21785c82] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:25:46.354 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 75522653-e66d-462c-9946-27fedb3e3dc0
2025-08-11 12:25:46.354 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [21785c82] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:25:46.354 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [21785c82] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.355 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [21785c82] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=bb64a0c5-8f66 (truncated)...]
2025-08-11 12:25:46.355 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [21785c82] Completed 200 OK
2025-08-11 12:25:46.355 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:25:46.355 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c7c898a] [ead53a9] Response 200 OK
2025-08-11 12:25:46.356 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2c7c898a] [ead53a9] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=bb64a0c5-8f66 (truncated)...]
2025-08-11 12:25:46.358 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6296e4bf] HTTP PUT /api/v1/catalogs/2be9d258-8bc4-4830-bbd9-dd3e2ba5f4a9
2025-08-11 12:25:46.359 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [6296e4bf] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:25:46.359 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [31af79aa] HTTP PUT "/api/v1/catalogs/2be9d258-8bc4-4830-bbd9-dd3e2ba5f4a9"
2025-08-11 12:25:46.359 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/2be9d258-8bc4-4830-bbd9-dd3e2ba5f4a9
2025-08-11 12:25:46.359 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [31af79aa] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:25:46.359 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [31af79aa] Content-Type:application/json
2025-08-11 12:25:46.360 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [31af79aa] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.360 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [31af79aa] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:25:46.360 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 2be9d258-8bc4-4830-bbd9-dd3e2ba5f4a9
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [31af79aa] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [31af79aa] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [31af79aa] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [31af79aa] Completed 200 OK
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:25:46.361 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6296e4bf] [231d08e1] Response 200 OK
2025-08-11 12:25:46.362 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6296e4bf] [231d08e1] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:25:46.376 [Test worker] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 12:25:46.376 [Test worker] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 12:25:46.379 [Test worker] [/] ERROR c.j.platform.config.DataInitializer - Error initializing sample data
java.lang.NullPointerException: The mapper returned a null Publisher
	at java.base/java.util.Objects.requireNonNull(Objects.java:259)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:388)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:373)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:205)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.Mono.block(Mono.java:1778)
	at com.jade.platform.config.DataInitializer.lambda$initData$0(DataInitializer.java:52)
	at com.jade.platform.config.DataInitializerTest.shouldCreateSampleDataInDevProfile(DataInitializerTest.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-08-11 12:26:48.585 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 91744 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:26:48.586 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:26:48.587 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:26:49.011 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:26:49.018 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:26:49.047 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:26:49.091 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:26:49.112 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.776 seconds (process running for 2.209)
2025-08-11 12:26:49.135 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [11174bf] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:26:49.147 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29ab5213] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:26:49.154 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:26:49.156 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [29ab5213] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:26:49.168 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:26:49.194 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [29ab5213] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:26:49.194 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [29ab5213] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.208 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [29ab5213] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=50a2b92f-c823-4b57- (truncated)...]
2025-08-11 12:26:49.217 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29ab5213] Completed 200 OK
2025-08-11 12:26:49.217 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:26:49.219 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [11174bf] [43debec7] Response 200 OK
2025-08-11 12:26:49.257 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [11174bf] [43debec7] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=50a2b92f-c823-4b57- (truncated)...]
2025-08-11 12:26:49.258 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [29ab5213] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=50a2b92f-c823-4b57- (truncated)...]
2025-08-11 12:26:49.258 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [11174bf] [43debec7] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=50a2b92f-c823-4b57- (truncated)...]
2025-08-11 12:26:49.268 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b79df53] HTTP DELETE /api/v1/catalogs/b63d3916-5da1-4ef5-83c1-6363751e6a0e
2025-08-11 12:26:49.269 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [46bdef79] HTTP DELETE "/api/v1/catalogs/b63d3916-5da1-4ef5-83c1-6363751e6a0e"
2025-08-11 12:26:49.269 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/b63d3916-5da1-4ef5-83c1-6363751e6a0e
2025-08-11 12:26:49.269 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [46bdef79] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:26:49.270 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: b63d3916-5da1-4ef5-83c1-6363751e6a0e
2025-08-11 12:26:49.270 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [46bdef79] Completed 204 NO_CONTENT
2025-08-11 12:26:49.271 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:26:49.272 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b79df53] [5a37af8a] Response 204 NO_CONTENT
2025-08-11 12:26:49.275 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cba474f] HTTP POST /api/v1/catalogs
2025-08-11 12:26:49.277 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [5cba474f] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:26:49.277 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4d74d034] HTTP POST "/api/v1/catalogs"
2025-08-11 12:26:49.278 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:26:49.278 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4d74d034] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:26:49.279 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4d74d034] Content-Type:application/json
2025-08-11 12:26:49.279 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4d74d034] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.285 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4d74d034] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:26:49.316 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=261ef640-c460-4d2a-a620-34a31d0152ff, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=e574fd6a-08b3-49a8-b423-968c4373c65a, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:26:49.317 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4d74d034] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:26:49.317 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4d74d034] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.318 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4d74d034] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:26:49.318 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4d74d034] Completed 201 CREATED
2025-08-11 12:26:49.318 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:26:49.319 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cba474f] [2eb47be0] Response 201 CREATED
2025-08-11 12:26:49.320 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [5cba474f] [2eb47be0] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:26:49.323 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75c589f2] HTTP GET /api/v1/catalogs/5aae6395-c7ac-43e8-a5be-14049333cf96
2025-08-11 12:26:49.323 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [51ebb2c5] HTTP GET "/api/v1/catalogs/5aae6395-c7ac-43e8-a5be-14049333cf96"
2025-08-11 12:26:49.323 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/5aae6395-c7ac-43e8-a5be-14049333cf96
2025-08-11 12:26:49.324 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [51ebb2c5] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:26:49.324 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 5aae6395-c7ac-43e8-a5be-14049333cf96
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [51ebb2c5] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [51ebb2c5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [51ebb2c5] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=49143d6c-ea8c (truncated)...]
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [51ebb2c5] Completed 200 OK
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:26:49.325 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75c589f2] [7e3eb3fc] Response 200 OK
2025-08-11 12:26:49.326 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [75c589f2] [7e3eb3fc] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=49143d6c-ea8c (truncated)...]
2025-08-11 12:26:49.328 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [416c1b0] HTTP PUT /api/v1/catalogs/ef75a7a2-86d2-4958-89b7-0a496dfd5bd8
2025-08-11 12:26:49.329 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [416c1b0] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:26:49.329 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9cf4e16] HTTP PUT "/api/v1/catalogs/ef75a7a2-86d2-4958-89b7-0a496dfd5bd8"
2025-08-11 12:26:49.329 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/ef75a7a2-86d2-4958-89b7-0a496dfd5bd8
2025-08-11 12:26:49.329 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [9cf4e16] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:26:49.330 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [9cf4e16] Content-Type:application/json
2025-08-11 12:26:49.330 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [9cf4e16] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.330 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [9cf4e16] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:26:49.331 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: ef75a7a2-86d2-4958-89b7-0a496dfd5bd8
2025-08-11 12:26:49.332 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9cf4e16] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:26:49.332 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9cf4e16] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:26:49.332 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [9cf4e16] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:26:49.332 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9cf4e16] Completed 200 OK
2025-08-11 12:26:49.332 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:26:49.333 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [416c1b0] [33c082ca] Response 200 OK
2025-08-11 12:26:49.333 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [416c1b0] [33c082ca] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:28:01.392 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 91891 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:28:01.393 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:28:01.394 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:28:01.789 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:28:01.794 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:28:01.820 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:28:01.849 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:28:01.868 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 0.754 seconds (process running for 2.352)
2025-08-11 12:28:01.890 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62a81453] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:28:01.905 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7885c628] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:28:01.911 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:28:01.914 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7885c628] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:28:01.925 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:28:01.945 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7885c628] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:28:01.945 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7885c628] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:01.959 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [7885c628] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=a2bf5b24-9aad-4709- (truncated)...]
2025-08-11 12:28:01.969 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7885c628] Completed 200 OK
2025-08-11 12:28:01.969 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:28:01.971 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62a81453] [52ec2f6c] Response 200 OK
2025-08-11 12:28:02.000 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [62a81453] [52ec2f6c] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=a2bf5b24-9aad-4709- (truncated)...]
2025-08-11 12:28:02.000 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [7885c628] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=a2bf5b24-9aad-4709- (truncated)...]
2025-08-11 12:28:02.001 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [62a81453] [52ec2f6c] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=a2bf5b24-9aad-4709- (truncated)...]
2025-08-11 12:28:02.011 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6065bcb7] HTTP DELETE /api/v1/catalogs/2960d9ec-15cb-434b-bf2b-604cc736f013
2025-08-11 12:28:02.012 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1d700696] HTTP DELETE "/api/v1/catalogs/2960d9ec-15cb-434b-bf2b-604cc736f013"
2025-08-11 12:28:02.012 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/2960d9ec-15cb-434b-bf2b-604cc736f013
2025-08-11 12:28:02.012 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [1d700696] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:28:02.013 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 2960d9ec-15cb-434b-bf2b-604cc736f013
2025-08-11 12:28:02.014 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1d700696] Completed 204 NO_CONTENT
2025-08-11 12:28:02.015 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:28:02.015 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6065bcb7] [6d2ee7ff] Response 204 NO_CONTENT
2025-08-11 12:28:02.018 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31450fc0] HTTP POST /api/v1/catalogs
2025-08-11 12:28:02.021 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [31450fc0] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:28:02.021 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [571689d0] HTTP POST "/api/v1/catalogs"
2025-08-11 12:28:02.022 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:28:02.022 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [571689d0] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:28:02.023 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [571689d0] Content-Type:application/json
2025-08-11 12:28:02.023 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [571689d0] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:02.030 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [571689d0] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:28:02.066 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=ac2f57d9-f67d-4942-96c2-22be207acdc9, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=ee79562a-1884-409f-adc3-bff8578e498d, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:28:02.067 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [571689d0] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:28:02.067 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [571689d0] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:02.067 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [571689d0] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:28:02.068 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [571689d0] Completed 201 CREATED
2025-08-11 12:28:02.068 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:28:02.068 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31450fc0] [181de22b] Response 201 CREATED
2025-08-11 12:28:02.069 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [31450fc0] [181de22b] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:28:02.072 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [534d0cfa] HTTP GET /api/v1/catalogs/9ac8b45e-bf63-492d-9610-c2a97423f6cf
2025-08-11 12:28:02.073 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4042c3a6] HTTP GET "/api/v1/catalogs/9ac8b45e-bf63-492d-9610-c2a97423f6cf"
2025-08-11 12:28:02.073 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/9ac8b45e-bf63-492d-9610-c2a97423f6cf
2025-08-11 12:28:02.073 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4042c3a6] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:28:02.074 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 9ac8b45e-bf63-492d-9610-c2a97423f6cf
2025-08-11 12:28:02.074 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4042c3a6] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:28:02.074 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4042c3a6] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:02.074 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [4042c3a6] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=819910ac-68c3 (truncated)...]
2025-08-11 12:28:02.075 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4042c3a6] Completed 200 OK
2025-08-11 12:28:02.075 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:28:02.075 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [534d0cfa] [6f97d0aa] Response 200 OK
2025-08-11 12:28:02.075 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [534d0cfa] [6f97d0aa] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=819910ac-68c3 (truncated)...]
2025-08-11 12:28:02.078 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [72240290] HTTP PUT /api/v1/catalogs/d128dda4-e894-4a58-b141-a8ea75bdae3f
2025-08-11 12:28:02.079 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [72240290] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:28:02.079 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6989bcff] HTTP PUT "/api/v1/catalogs/d128dda4-e894-4a58-b141-a8ea75bdae3f"
2025-08-11 12:28:02.079 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/d128dda4-e894-4a58-b141-a8ea75bdae3f
2025-08-11 12:28:02.079 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [6989bcff] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:28:02.080 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6989bcff] Content-Type:application/json
2025-08-11 12:28:02.080 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6989bcff] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:02.081 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [6989bcff] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:28:02.082 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: d128dda4-e894-4a58-b141-a8ea75bdae3f
2025-08-11 12:28:02.083 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6989bcff] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:28:02.083 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6989bcff] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:28:02.083 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [6989bcff] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:28:02.083 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6989bcff] Completed 200 OK
2025-08-11 12:28:02.083 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:28:02.084 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [72240290] [30b45b80] Response 200 OK
2025-08-11 12:28:02.084 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [72240290] [30b45b80] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:44:15.287 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 93019 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:44:15.288 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:44:15.288 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:44:16.301 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:44:16.308 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:44:16.365 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:44:16.401 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:44:16.422 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.397 seconds (process running for 2.024)
2025-08-11 12:44:16.468 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a1a0bc] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:44:16.481 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [64b32643] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:44:16.491 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:44:16.495 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [64b32643] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:44:16.510 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:44:16.536 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [64b32643] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:44:16.536 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [64b32643] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.549 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [64b32643] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=9d7d449a-931d-48bf- (truncated)...]
2025-08-11 12:44:16.561 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [64b32643] Completed 200 OK
2025-08-11 12:44:16.561 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:44:16.563 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a1a0bc] [1c2379e5] Response 200 OK
2025-08-11 12:44:16.595 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3a1a0bc] [1c2379e5] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=9d7d449a-931d-48bf- (truncated)...]
2025-08-11 12:44:16.595 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [64b32643] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=9d7d449a-931d-48bf- (truncated)...]
2025-08-11 12:44:16.596 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3a1a0bc] [1c2379e5] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=9d7d449a-931d-48bf- (truncated)...]
2025-08-11 12:44:16.610 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23358740] HTTP DELETE /api/v1/catalogs/1829000b-eedf-4617-97e6-7358c8a94193
2025-08-11 12:44:16.611 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [30de0ec8] HTTP DELETE "/api/v1/catalogs/1829000b-eedf-4617-97e6-7358c8a94193"
2025-08-11 12:44:16.611 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/1829000b-eedf-4617-97e6-7358c8a94193
2025-08-11 12:44:16.612 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [30de0ec8] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:44:16.613 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 1829000b-eedf-4617-97e6-7358c8a94193
2025-08-11 12:44:16.614 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [30de0ec8] Completed 204 NO_CONTENT
2025-08-11 12:44:16.615 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:44:16.615 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23358740] [5a3f37b1] Response 204 NO_CONTENT
2025-08-11 12:44:16.620 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b7e4b20] HTTP POST /api/v1/catalogs
2025-08-11 12:44:16.622 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [7b7e4b20] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:44:16.623 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [559dd0b4] HTTP POST "/api/v1/catalogs"
2025-08-11 12:44:16.623 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:44:16.623 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [559dd0b4] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:44:16.624 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [559dd0b4] Content-Type:application/json
2025-08-11 12:44:16.625 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [559dd0b4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.631 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [559dd0b4] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:44:16.668 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=6764a511-6783-4f60-81b8-27384ee77e1c, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=bb764baa-ac20-40ba-89b1-2863cfecf411, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:44:16.669 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [559dd0b4] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:44:16.669 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [559dd0b4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.670 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [559dd0b4] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:44:16.671 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [559dd0b4] Completed 201 CREATED
2025-08-11 12:44:16.671 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:44:16.671 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b7e4b20] [44832e7c] Response 201 CREATED
2025-08-11 12:44:16.672 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [7b7e4b20] [44832e7c] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:44:16.676 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [36330be8] HTTP GET /api/v1/catalogs/1e07c8bc-02ac-4a2f-9117-c612da700d46
2025-08-11 12:44:16.677 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3987f3e1] HTTP GET "/api/v1/catalogs/1e07c8bc-02ac-4a2f-9117-c612da700d46"
2025-08-11 12:44:16.677 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/1e07c8bc-02ac-4a2f-9117-c612da700d46
2025-08-11 12:44:16.677 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3987f3e1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:44:16.678 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 1e07c8bc-02ac-4a2f-9117-c612da700d46
2025-08-11 12:44:16.679 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3987f3e1] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:44:16.679 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3987f3e1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.679 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [3987f3e1] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=26b6ef3f-4f68 (truncated)...]
2025-08-11 12:44:16.680 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3987f3e1] Completed 200 OK
2025-08-11 12:44:16.680 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:44:16.680 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [36330be8] [1652ffd5] Response 200 OK
2025-08-11 12:44:16.681 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [36330be8] [1652ffd5] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=26b6ef3f-4f68 (truncated)...]
2025-08-11 12:44:16.685 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43090195] HTTP PUT /api/v1/catalogs/7fd20df7-062c-4c82-a8c9-b9f3909b2c4c
2025-08-11 12:44:16.685 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [43090195] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:44:16.686 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [389a66cd] HTTP PUT "/api/v1/catalogs/7fd20df7-062c-4c82-a8c9-b9f3909b2c4c"
2025-08-11 12:44:16.686 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/7fd20df7-062c-4c82-a8c9-b9f3909b2c4c
2025-08-11 12:44:16.686 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [389a66cd] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:44:16.687 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [389a66cd] Content-Type:application/json
2025-08-11 12:44:16.687 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [389a66cd] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.688 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [389a66cd] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:44:16.688 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 7fd20df7-062c-4c82-a8c9-b9f3909b2c4c
2025-08-11 12:44:16.689 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [389a66cd] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:44:16.689 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [389a66cd] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:44:16.689 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [389a66cd] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:44:16.690 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [389a66cd] Completed 200 OK
2025-08-11 12:44:16.690 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:44:16.690 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43090195] [db6b52b] Response 200 OK
2025-08-11 12:44:16.691 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [43090195] [db6b52b] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:47:08.765 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 93208 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:47:08.766 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:47:08.766 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 12:47:09.762 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:47:09.768 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:47:09.822 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 12:47:09.851 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:47:09.871 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.352 seconds (process running for 2.007)
2025-08-11 12:47:09.913 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [454e9d65] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:47:09.924 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3fcf95d3] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 12:47:09.930 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 12:47:09.934 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3fcf95d3] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 12:47:09.951 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 12:47:09.973 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3fcf95d3] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:47:09.974 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3fcf95d3] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:09.987 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [3fcf95d3] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=0bf4ca91-8c05-4f14- (truncated)...]
2025-08-11 12:47:09.995 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3fcf95d3] Completed 200 OK
2025-08-11 12:47:09.995 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:47:09.997 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [454e9d65] [52cb582b] Response 200 OK
2025-08-11 12:47:10.028 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [454e9d65] [52cb582b] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=0bf4ca91-8c05-4f14- (truncated)...]
2025-08-11 12:47:10.028 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3fcf95d3] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=0bf4ca91-8c05-4f14- (truncated)...]
2025-08-11 12:47:10.028 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [454e9d65] [52cb582b] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=0bf4ca91-8c05-4f14- (truncated)...]
2025-08-11 12:47:10.047 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6968bb65] HTTP DELETE /api/v1/catalogs/eb167179-1450-4ce5-834f-e24d45a99ae2
2025-08-11 12:47:10.048 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [284f23ce] HTTP DELETE "/api/v1/catalogs/eb167179-1450-4ce5-834f-e24d45a99ae2"
2025-08-11 12:47:10.048 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/eb167179-1450-4ce5-834f-e24d45a99ae2
2025-08-11 12:47:10.048 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [284f23ce] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 12:47:10.049 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: eb167179-1450-4ce5-834f-e24d45a99ae2
2025-08-11 12:47:10.050 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [284f23ce] Completed 204 NO_CONTENT
2025-08-11 12:47:10.051 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 12:47:10.051 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6968bb65] [20143430] Response 204 NO_CONTENT
2025-08-11 12:47:10.055 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6159fb3c] HTTP POST /api/v1/catalogs
2025-08-11 12:47:10.058 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6159fb3c] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:47:10.058 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6a3d8026] HTTP POST "/api/v1/catalogs"
2025-08-11 12:47:10.059 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 12:47:10.059 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [6a3d8026] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 12:47:10.060 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6a3d8026] Content-Type:application/json
2025-08-11 12:47:10.060 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [6a3d8026] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:10.067 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6a3d8026] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:47:10.100 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length for validation, industryId=1f72d99c-a596-41f5-91c3-213f5c8118df, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=04d6024d-3e60-46fc-9939-8e57ed74ee70, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 12:47:10.101 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6a3d8026] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:47:10.101 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [6a3d8026] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:10.101 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [6a3d8026] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:47:10.102 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6a3d8026] Completed 201 CREATED
2025-08-11 12:47:10.102 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 12:47:10.102 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6159fb3c] [157ee15] Response 201 CREATED
2025-08-11 12:47:10.103 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6159fb3c] [157ee15] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description with sufficient length fo (truncated)...]
2025-08-11 12:47:10.107 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31dbf5bb] HTTP GET /api/v1/catalogs/498b94c2-52be-43d5-b8e3-63f3ca0e4dbc
2025-08-11 12:47:10.108 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [687c95ac] HTTP GET "/api/v1/catalogs/498b94c2-52be-43d5-b8e3-63f3ca0e4dbc"
2025-08-11 12:47:10.108 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/498b94c2-52be-43d5-b8e3-63f3ca0e4dbc
2025-08-11 12:47:10.109 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [687c95ac] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 12:47:10.109 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 498b94c2-52be-43d5-b8e3-63f3ca0e4dbc
2025-08-11 12:47:10.110 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [687c95ac] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:47:10.110 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [687c95ac] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:10.110 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [687c95ac] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=9ad420bc-a35d (truncated)...]
2025-08-11 12:47:10.111 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [687c95ac] Completed 200 OK
2025-08-11 12:47:10.111 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:47:10.111 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31dbf5bb] [47a993a7] Response 200 OK
2025-08-11 12:47:10.112 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [31dbf5bb] [47a993a7] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=9ad420bc-a35d (truncated)...]
2025-08-11 12:47:10.115 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6338afe2] HTTP PUT /api/v1/catalogs/1b98b461-66f7-486f-907d-c409ada9245a
2025-08-11 12:47:10.116 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [6338afe2] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:47:10.117 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7a277cbe] HTTP PUT "/api/v1/catalogs/1b98b461-66f7-486f-907d-c409ada9245a"
2025-08-11 12:47:10.117 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/1b98b461-66f7-486f-907d-c409ada9245a
2025-08-11 12:47:10.117 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7a277cbe] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 12:47:10.118 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7a277cbe] Content-Type:application/json
2025-08-11 12:47:10.118 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7a277cbe] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:10.119 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7a277cbe] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:47:10.119 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 1b98b461-66f7-486f-907d-c409ada9245a
2025-08-11 12:47:10.120 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7a277cbe] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 12:47:10.120 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7a277cbe] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 12:47:10.120 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [7a277cbe] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:47:10.121 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7a277cbe] Completed 200 OK
2025-08-11 12:47:10.121 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 12:47:10.121 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6338afe2] [2bc49ad4] Response 200 OK
2025-08-11 12:47:10.122 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6338afe2] [2bc49ad4] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 12:48:52.821 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 93319 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:48:52.822 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:48:52.822 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 12:48:53.414 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 12:48:53.487 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 R2DBC repository interface.
2025-08-11 12:48:53.953 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 12:48:54.056 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 12:48:54.151 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 12:48:54.320 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 12:48:54.628 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:48:54.647 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:48:54.759 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 12:48:54.785 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 12:48:54.821 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:48:55.094 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 12:48:55.345 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 12:48:55.383 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 12:48:55.384 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 12:48:55.387 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 12:48:55.387 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 12:48:55.387 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 12:48:55.387 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 12:48:55.388 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 12:48:55.388 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 12:48:55.388 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 12:48:55.388 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 12:48:56.999 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 12:48:57.071 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 12:48:57.080 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.557 seconds (process running for 4.933)
2025-08-11 12:48:57.082 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 12:48:57.241 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 12:48:57.241 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 12:50:12.278 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 12:50:12.283 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 12:50:16.110 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 93369 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 12:50:16.110 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 12:50:16.110 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 12:50:16.604 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 12:50:16.682 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 1 R2DBC repository interface.
2025-08-11 12:50:17.064 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 12:50:17.134 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 12:50:17.220 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 12:50:17.383 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 12:50:17.676 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 12:50:17.694 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 12:50:17.823 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 12:50:17.853 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 12:50:17.884 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 12:50:18.172 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 12:50:18.411 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 12:50:18.476 [main] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 12:50:18.476 [main] [/] INFO  liquibase.command - Using deploymentId: 4913018003
2025-08-11 12:50:18.477 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 12:50:18.481 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/03-alter-tables.xml::03::booking-platform
2025-08-11 12:50:18.495 [main] [/] ERROR liquibase.changelog - ChangeSet db/changelog/changes/03-alter-tables.xml::03::booking-platform encountered an exception.
liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:497)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:83)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:185)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:141)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1189)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:790)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:126)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:70)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Scope.child(Scope.java:267)
	at liquibase.Scope.child(Scope.java:271)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.postgresql.util.PSQLException: ERROR: type "serial" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:491)
	... 67 common frames omitted
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 12:50:18.499 [main] [/] INFO  liquibase.util - Total change sets:            3
2025-08-11 12:50:18.500 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 12:50:18.501 [main] [/] INFO  liquibase.command - Update command encountered an exception.
2025-08-11 12:50:18.503 [main] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.command - Logging exception.
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.ui - ERROR: Exception Details
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Class:  PSQLException
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Reason:  ERROR: type "serial" does not exist
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.ui - ERROR: Exception Primary Source:  PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1)
2025-08-11 12:50:18.504 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 12:50:19.936 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
2025-08-11 12:50:19.954 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 12:50:19.965 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 18 common frames omitted
Caused by: liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:300)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:186)
	at liquibase.command.CommandScope.execute(CommandScope.java:241)
	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Liquibase.runInScope(Liquibase.java:1333)
	at liquibase.Liquibase.update(Liquibase.java:205)
	at liquibase.Liquibase.update(Liquibase.java:188)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:326)
	at liquibase.integration.spring.SpringLiquibase.lambda$afterPropertiesSet$0(SpringLiquibase.java:278)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:271)
	... 21 common frames omitted
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:155)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:253)
	... 39 common frames omitted
Caused by: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/changes/03-alter-tables.xml::03::booking-platform:
     Reason: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:840)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:126)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:70)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:201)
	at liquibase.Scope.child(Scope.java:210)
	at liquibase.Scope.child(Scope.java:200)
	at liquibase.Scope.child(Scope.java:179)
	at liquibase.Scope.child(Scope.java:267)
	at liquibase.Scope.child(Scope.java:271)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	... 47 common frames omitted
Caused by: liquibase.exception.DatabaseException: ERROR: type "serial" does not exist [Failed SQL: (0) -- Create an index on the tsvector column
            ALTER TABLE catalog ALTER COLUMN id TYPE SERIAL]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:497)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:83)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:185)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:141)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1189)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:790)
	... 62 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: type "serial" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:491)
	... 67 common frames omitted
2025-08-11 13:08:10.921 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 94120 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 13:08:10.922 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 13:08:10.922 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 13:08:11.451 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 13:08:11.526 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 13:08:11.918 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 13:08:11.975 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 13:08:12.061 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 13:08:12.222 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 13:08:12.503 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 13:08:12.520 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 13:08:12.640 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 13:08:12.669 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 13:08:12.700 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 13:08:12.994 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 13:08:13.249 [main] [/] INFO  liquibase.changelog - Creating database history table with name: public.databasechangelog
2025-08-11 13:08:13.276 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:08:13.297 [main] [/] INFO  liquibase.snapshot - Creating snapshot
2025-08-11 13:08:13.358 [main] [/] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-08-11 13:08:13.359 [main] [/] INFO  liquibase.command - Using deploymentId: 4914092824
2025-08-11 13:08:13.360 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:08:13.372 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/01-create-tables.xml::01::booking-platform
2025-08-11 13:08:13.382 [main] [/] INFO  liquibase.changelog - Table catalog created
2025-08-11 13:08:13.383 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/01-create-tables.xml::01::booking-platform ran successfully in 11ms
2025-08-11 13:08:13.390 [main] [/] INFO  liquibase.ui - Running Changeset: db/changelog/changes/02-add-indexes.xml::02::booking-platform
2025-08-11 13:08:13.394 [main] [/] INFO  liquibase.changelog - Index idx_catalog_title created
2025-08-11 13:08:13.396 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_id created
2025-08-11 13:08:13.398 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_name created
2025-08-11 13:08:13.400 [main] [/] INFO  liquibase.changelog - Index idx_catalog_merchant_id created
2025-08-11 13:08:13.402 [main] [/] INFO  liquibase.changelog - Index idx_catalog_price created
2025-08-11 13:08:13.404 [main] [/] INFO  liquibase.changelog - Index idx_catalog_rating created
2025-08-11 13:08:13.406 [main] [/] INFO  liquibase.changelog - Index idx_catalog_compliance_status created
2025-08-11 13:08:13.408 [main] [/] INFO  liquibase.changelog - Index idx_catalog_availability_status created
2025-08-11 13:08:13.410 [main] [/] INFO  liquibase.changelog - Index idx_catalog_industry_status created
2025-08-11 13:08:13.419 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 13:08:13.432 [main] [/] WARN  liquibase.executor - trigger "trig_catalog_description_update" for relation "catalog" does not exist, skipping
2025-08-11 13:08:13.438 [main] [/] INFO  liquibase.changelog - Custom SQL executed
2025-08-11 13:08:13.439 [main] [/] INFO  liquibase.changelog - ChangeSet db/changelog/changes/02-add-indexes.xml::02::booking-platform ran successfully in 48ms
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - Run:                          2
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - Previously run:               0
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 13:08:13.445 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 13:08:13.446 [main] [/] INFO  liquibase.command - Update command completed successfully.
2025-08-11 13:08:13.446 [main] [/] INFO  liquibase.ui - Liquibase: Update has been successful. Rows affected: 2
2025-08-11 13:08:13.449 [main] [/] INFO  liquibase.lockservice - Successfully released change log lock
2025-08-11 13:08:13.450 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 13:08:15.086 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 13:08:15.146 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 13:08:15.154 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.489 seconds (process running for 4.919)
2025-08-11 13:08:15.156 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 13:08:15.315 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Generating 50 sample catalog items
2025-08-11 13:08:15.377 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 8
2025-08-11 13:08:15.378 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 6
2025-08-11 13:08:15.378 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 5
2025-08-11 13:08:15.378 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 1
2025-08-11 13:08:15.378 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 7
2025-08-11 13:08:15.378 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 2
2025-08-11 13:08:15.379 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 3
2025-08-11 13:08:15.379 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 4
2025-08-11 13:08:15.382 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 15
2025-08-11 13:08:15.382 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 13
2025-08-11 13:08:15.382 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 12
2025-08-11 13:08:15.382 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 11
2025-08-11 13:08:15.383 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 14
2025-08-11 13:08:15.383 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 10
2025-08-11 13:08:15.383 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 17
2025-08-11 13:08:15.383 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 9
2025-08-11 13:08:15.384 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 16
2025-08-11 13:08:15.386 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 18
2025-08-11 13:08:15.387 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 21
2025-08-11 13:08:15.387 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 23
2025-08-11 13:08:15.387 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 19
2025-08-11 13:08:15.388 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 22
2025-08-11 13:08:15.388 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 20
2025-08-11 13:08:15.388 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 24
2025-08-11 13:08:15.388 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 25
2025-08-11 13:08:15.388 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 26
2025-08-11 13:08:15.391 [reactor-tcp-nio-4] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 27
2025-08-11 13:08:15.391 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 33
2025-08-11 13:08:15.392 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 30
2025-08-11 13:08:15.392 [reactor-tcp-nio-6] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 32
2025-08-11 13:08:15.392 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 31
2025-08-11 13:08:15.392 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 35
2025-08-11 13:08:15.393 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 29
2025-08-11 13:08:15.393 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 34
2025-08-11 13:08:15.394 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 28
2025-08-11 13:08:15.395 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 37
2025-08-11 13:08:15.395 [reactor-tcp-nio-3] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 36
2025-08-11 13:08:15.405 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 40
2025-08-11 13:08:15.405 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 38
2025-08-11 13:08:15.405 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 39
2025-08-11 13:08:15.405 [reactor-tcp-nio-2] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 42
2025-08-11 13:08:15.405 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 41
2025-08-11 13:08:15.407 [reactor-tcp-nio-1] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 44
2025-08-11 13:08:15.407 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 43
2025-08-11 13:08:15.408 [reactor-tcp-nio-7] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 45
2025-08-11 13:08:15.408 [reactor-tcp-nio-8] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 47
2025-08-11 13:08:15.408 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 48
2025-08-11 13:08:15.408 [reactor-tcp-nio-9] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 46
2025-08-11 13:08:15.409 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 49
2025-08-11 13:08:15.409 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.config.DataInitializer - Saved catalog item: Sample Catalog Item 50
2025-08-11 13:08:15.409 [reactor-tcp-nio-5] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 13:09:06.224 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [96d90e35-1] HTTP GET "/favicon.ico"
2025-08-11 13:09:06.241 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:09:06.249 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [96d90e35-1] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:09:06.252 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [96d90e35-1] Resource not found
2025-08-11 13:09:06.255 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [96d90e35-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:09:06.258 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:09:06.271 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [96d90e35-1] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:09:06.271 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [96d90e35-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:09:06.279 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [96d90e35-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:09:06.290 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [96d90e35-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:09:06.292 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:09:12.601 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b8c1a8a-2] HTTP POST "/api/v1/catalogs"
2025-08-11 13:09:12.603 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 13:09:12.605 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7b8c1a8a-2] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 13:09:12.627 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7b8c1a8a-2] Content-Type:application/json
2025-08-11 13:09:12.655 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [7b8c1a8a-2] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:09:12.676 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [7b8c1a8a-2] Decoded [CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supple (truncated)...]
2025-08-11 13:09:12.695 [reactor-http-nio-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 13:09:12.700 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7b8c1a8a-2] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:09:12.700 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7b8c1a8a-2] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:09:12.719 [reactor-tcp-nio-10] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=1970-01-01T00:00:00Z, updatedOn=null]
2025-08-11 13:09:12.719 [reactor-tcp-nio-10] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 13:09:12.746 [reactor-tcp-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [7b8c1a8a-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:09:12.747 [reactor-tcp-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO catalog (public_id, title, description, industry_id, industry_name, categories, tags, price, merchant_id, rating, compliance_status, availability_status, created_on) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)]; null value in column "updated_on" of relation "catalog" violates not-null constraint
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO) [DispatcherHandler]
Original Stack Trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:247)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:157)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:7353)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:7406)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:403)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onComplete(FluxFilter.java:300)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2572)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.request(FluxMap.java:295)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.request(FluxFilter.java:321)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.request(FluxFilter.java:186)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onSubscribe(FluxFilter.java:85)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onSubscribe(FluxFilter.java:219)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onSubscribe(FluxMap.java:194)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:213)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: null value in column "updated_on" of relation "catalog" violates not-null constraint
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:102)
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:65)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:132)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:91)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:696)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:948)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:822)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:728)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:09:12.748 [reactor-tcp-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7b8c1a8a-2] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 13:09:12.749 [reactor-tcp-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7b8c1a8a-2] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 13:09:12.749 [reactor-tcp-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7b8c1a8a-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:09:12.749 [reactor-tcp-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [7b8c1a8a-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:09:12.749 [reactor-tcp-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b8c1a8a-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:09:12.749 [reactor-tcp-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:10:05.681 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 13:10:05.689 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 13:10:10.802 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 94226 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 13:10:10.803 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 13:10:10.804 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 13:10:11.428 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 13:10:11.503 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 1 R2DBC repository interface.
2025-08-11 13:10:11.923 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 13:10:11.977 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 13:10:12.069 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 13:10:12.236 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 13:10:12.516 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 13:10:12.533 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 13:10:12.650 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 13:10:12.677 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 13:10:12.711 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 13:10:13.013 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 13:10:13.286 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:10:13.326 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 13:10:13.327 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:10:13.331 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 13:10:13.332 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 13:10:14.726 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 13:10:14.785 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 13:10:14.794 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.297 seconds (process running for 4.982)
2025-08-11 13:10:14.796 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 13:10:14.954 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 50 catalog items, skipping initialization
2025-08-11 13:10:14.954 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 13:11:02.096 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42f7796f-1] HTTP POST "/api/v1/catalogs"
2025-08-11 13:11:02.108 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 13:11:02.112 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [42f7796f-1] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 13:11:02.123 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [42f7796f-1] Content-Type:application/json
2025-08-11 13:11:02.142 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [42f7796f-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:11:02.171 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [42f7796f-1] Decoded [CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supple (truncated)...]
2025-08-11 13:11:02.189 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 13:11:02.203 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [42f7796f-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:11:02.203 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [42f7796f-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:11:02.220 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[publicId=null, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 13:11:02.220 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 13:11:02.268 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Created catalog item with title: Heart Health Natural Supplement
2025-08-11 13:11:02.276 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [42f7796f-1] Encoding [CatalogDTO[publicId=18f0b5ab-6c2f-4788-b94c-e9c1bfc95213, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 13:11:02.284 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42f7796f-1] Completed 201 CREATED
2025-08-11 13:11:02.286 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 13:11:25.534 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1bf15074-2] HTTP GET "/favicon.ico"
2025-08-11 13:11:25.536 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:11:25.549 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [1bf15074-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:11:25.552 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [1bf15074-2] Resource not found
2025-08-11 13:11:25.554 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [1bf15074-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:11:25.554 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:11:25.563 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [1bf15074-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:11:25.563 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [1bf15074-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:11:25.565 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [1bf15074-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:11:25.565 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1bf15074-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:11:25.566 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:11:33.412 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b68d2de5-3] HTTP GET "/favicon.ico"
2025-08-11 13:11:33.416 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:11:33.418 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [b68d2de5-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:11:33.419 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [b68d2de5-3] Resource not found
2025-08-11 13:11:33.421 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [b68d2de5-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:11:33.421 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:11:33.422 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b68d2de5-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:11:33.422 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b68d2de5-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:11:33.423 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [b68d2de5-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:11:33.424 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b68d2de5-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:11:33.424 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:11:42.198 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8930ed99-4] HTTP GET "/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213"
2025-08-11 13:11:42.198 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:11:42.199 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [8930ed99-4] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:11:42.202 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:11:42.220 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [8930ed99-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:11:42.220 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findByPublicId(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:11:42.221 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8930ed99-4] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 13:11:42.222 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8930ed99-4] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 13:11:42.222 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [8930ed99-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:11:42.222 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [8930ed99-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:11:42.222 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8930ed99-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:11:42.223 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:12:04.451 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [518117bb-5] HTTP GET "/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213"
2025-08-11 13:12:04.457 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:12:04.460 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [518117bb-5] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:12:04.464 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:12:04.468 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [518117bb-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:12:04.469 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findByPublicId(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:118)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:12:04.472 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [518117bb-5] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 13:12:04.473 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [518117bb-5] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 13:12:04.473 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [518117bb-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:12:04.475 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [518117bb-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:12:04.477 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [518117bb-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:12:04.478 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:22:54.832 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 13:22:54.851 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 13:22:59.663 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 94754 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 13:22:59.665 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 13:22:59.666 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 13:23:00.431 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 13:23:00.513 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 1 R2DBC repository interface.
2025-08-11 13:23:00.919 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 13:23:00.980 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 13:23:01.058 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 13:23:01.219 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 13:23:01.511 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 13:23:01.529 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 13:23:01.635 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 13:23:01.661 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 13:23:01.697 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 13:23:01.992 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 13:23:02.217 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:23:02.257 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 13:23:02.259 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 13:23:02.263 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 13:23:02.264 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 13:23:03.898 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 13:23:03.952 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 13:23:03.961 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.813 seconds (process running for 5.17)
2025-08-11 13:23:03.962 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 13:23:04.113 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 13:23:04.113 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 13:23:14.226 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c183973d-1] HTTP GET "/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213"
2025-08-11 13:23:14.245 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:23:14.248 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [c183973d-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:23:14.262 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 18f0b5ab-6c2f-4788-b94c-e9c1bfc95213
2025-08-11 13:23:14.281 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c183973d-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:23:14.281 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c183973d-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:23:14.305 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 18f0b5ab-6c2f-4788-b94c-e9c1bfc95213 (cache miss)
2025-08-11 13:23:14.344 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c183973d-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 13:23:14.344 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 13:23:14.350 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c183973d-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 13:23:14.350 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c183973d-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 13:23:14.350 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c183973d-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:23:14.354 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [c183973d-1] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 13:23:14.362 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c183973d-1] Completed 404 NOT_FOUND
2025-08-11 13:23:14.364 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 13:31:10.778 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e5c4189b-2] HTTP GET "/favicon.ico"
2025-08-11 13:31:10.785 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:31:10.801 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [e5c4189b-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:31:10.810 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [e5c4189b-2] Resource not found
2025-08-11 13:31:10.814 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [e5c4189b-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:31:10.814 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:31:10.821 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e5c4189b-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:31:10.821 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [e5c4189b-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:31:10.822 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [e5c4189b-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:31:10.825 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [e5c4189b-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:31:10.826 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:31:33.302 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f2c633a4-3] HTTP GET "/favicon.ico"
2025-08-11 13:31:33.306 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:31:33.307 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f2c633a4-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:31:33.308 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f2c633a4-3] Resource not found
2025-08-11 13:31:33.310 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f2c633a4-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:31:33.311 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:31:33.312 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f2c633a4-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:31:33.313 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f2c633a4-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:31:33.314 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [f2c633a4-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:31:33.315 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f2c633a4-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:31:33.315 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:31:38.690 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [baa8c971-4] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 13:31:38.691 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:31:38.691 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [baa8c971-4] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:31:38.692 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:31:38.693 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [baa8c971-4] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:31:38.693 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [baa8c971-4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:31:38.705 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 13:31:38.729 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:31:38.742 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [baa8c971-4] Encoding [CatalogDTO[publicId=1a370ce5-0ec7-4f1a-967e-8e3ee87e258d, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 13:31:38.747 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [baa8c971-4] Completed 200 OK
2025-08-11 13:31:38.747 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 13:31:58.165 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [397f0952-5] HTTP GET "/favicon.ico"
2025-08-11 13:31:58.166 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:31:58.167 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [397f0952-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:31:58.167 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [397f0952-5] Resource not found
2025-08-11 13:31:58.167 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [397f0952-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:31:58.168 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:31:58.168 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [397f0952-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:31:58.168 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [397f0952-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:31:58.169 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [397f0952-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:31:58.169 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [397f0952-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:31:58.170 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:01.560 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d2d193fe-6] HTTP GET "/favicon.ico"
2025-08-11 13:32:01.561 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:32:01.562 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [d2d193fe-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:32:01.562 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [d2d193fe-6] Resource not found
2025-08-11 13:32:01.563 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [d2d193fe-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:32:01.563 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:32:01.564 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d2d193fe-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:32:01.564 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d2d193fe-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:32:01.564 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [d2d193fe-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:32:01.566 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d2d193fe-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:01.566 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:31.271 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b1739ba5-7] HTTP GET "/favicon.ico"
2025-08-11 13:32:31.274 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:32:31.276 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [b1739ba5-7] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:32:31.278 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [b1739ba5-7] Resource not found
2025-08-11 13:32:31.279 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [b1739ba5-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:32:31.280 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:32:31.282 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b1739ba5-7] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:32:31.282 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b1739ba5-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:32:31.283 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [b1739ba5-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:32:31.284 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b1739ba5-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:31.284 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:49.152 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [080d1224-8] HTTP GET "/favicon.ico"
2025-08-11 13:32:49.155 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:32:49.156 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [080d1224-8] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:32:49.157 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [080d1224-8] Resource not found
2025-08-11 13:32:49.157 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [080d1224-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:32:49.157 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:32:49.158 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [080d1224-8] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:32:49.158 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [080d1224-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:32:49.158 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [080d1224-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:32:49.159 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [080d1224-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:49.159 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:55.856 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [97ebfd64-9] HTTP GET "/favicon.ico"
2025-08-11 13:32:55.857 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:32:55.858 [reactor-http-nio-10] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [97ebfd64-9] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:32:55.858 [reactor-http-nio-10] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [97ebfd64-9] Resource not found
2025-08-11 13:32:55.859 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [97ebfd64-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:32:55.859 [reactor-http-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:32:55.860 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [97ebfd64-9] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:32:55.860 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [97ebfd64-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:32:55.860 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [97ebfd64-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:32:55.861 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [97ebfd64-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:32:55.861 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:33:19.435 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a9ecf601-10] HTTP GET "/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC"
2025-08-11 13:33:19.440 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?complianceStatus=COMPLIANT&availabilityStatus=AVAILABLE&page=0&size=20&sort=createdOn&direction=DESC
2025-08-11 13:33:19.441 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [a9ecf601-10] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 13:33:19.447 [reactor-http-nio-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 13:33:19.468 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a9ecf601-10] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:33:19.469 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a9ecf601-10] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 13:33:19.477 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 13:33:19.481 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 13:33:19.482 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@23069abb
2025-08-11 13:33:19.488 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@667b8df5
2025-08-11 13:33:19.512 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 13:33:19.515 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 13
2025-08-11 13:33:19.524 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [a9ecf601-10] Encoding [PageResponse[content=[CatalogDTO[publicId=9a8fdba4-5ff6-4914-953e-7e97da9b4a3f, title=Heart Health N (truncated)...]
2025-08-11 13:33:19.527 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a9ecf601-10] Completed 200 OK
2025-08-11 13:33:19.527 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 13:34:06.078 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29aec660-11] HTTP GET "/favicon.ico"
2025-08-11 13:34:06.081 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:34:06.082 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [29aec660-11] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:34:06.083 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [29aec660-11] Resource not found
2025-08-11 13:34:06.084 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [29aec660-11] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:34:06.085 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:34:06.088 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [29aec660-11] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:34:06.088 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [29aec660-11] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:34:06.089 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [29aec660-11] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:34:06.090 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [29aec660-11] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:34:06.091 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:34:13.579 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [510df6ff-12] HTTP GET "/api/v1/catalogs/9a8fdba4-5ff6-4914-953e-7e97da9b4a3f"
2025-08-11 13:34:13.580 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/9a8fdba4-5ff6-4914-953e-7e97da9b4a3f
2025-08-11 13:34:13.581 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [510df6ff-12] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:34:13.586 [reactor-http-nio-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 9a8fdba4-5ff6-4914-953e-7e97da9b4a3f
2025-08-11 13:34:13.588 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [510df6ff-12] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:34:13.588 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [510df6ff-12] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:34:13.597 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 9a8fdba4-5ff6-4914-953e-7e97da9b4a3f (cache miss)
2025-08-11 13:34:13.604 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [510df6ff-12] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 13:34:13.604 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 13:34:13.604 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [510df6ff-12] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 13:34:13.605 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [510df6ff-12] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 13:34:13.605 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [510df6ff-12] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:34:13.605 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [510df6ff-12] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 13:34:13.605 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [510df6ff-12] Completed 404 NOT_FOUND
2025-08-11 13:34:13.606 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 13:39:54.456 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6cf62ab-13] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 13:39:54.460 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [dd7884e2-14] HTTP GET "/favicon.ico"
2025-08-11 13:39:54.461 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:39:54.461 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:39:54.463 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f6cf62ab-13] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:39:54.464 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [dd7884e2-14] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:39:54.467 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [dd7884e2-14] Resource not found
2025-08-11 13:39:54.468 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:39:54.468 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [dd7884e2-14] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:39:54.469 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:39:54.470 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6cf62ab-13] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:39:54.470 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6cf62ab-13] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:39:54.470 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [dd7884e2-14] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:39:54.470 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [dd7884e2-14] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:39:54.471 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [dd7884e2-14] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:39:54.472 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [dd7884e2-14] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:39:54.472 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:39:54.480 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 13:39:54.489 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:39:54.491 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f6cf62ab-13] Encoding [CatalogDTO[publicId=8379bed0-0c9e-4efa-92e1-3a9d5cd230c6, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 13:39:54.492 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6cf62ab-13] Completed 200 OK
2025-08-11 13:39:54.492 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 13:40:51.689 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 13:40:51.705 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 13:40:56.900 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 95341 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 13:40:56.901 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 13:40:56.901 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 13:40:57.455 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 13:40:57.532 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 1 R2DBC repository interface.
2025-08-11 13:40:57.935 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 13:40:57.998 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 13:40:58.077 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 13:40:58.243 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 13:40:58.527 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 13:40:58.545 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 13:40:58.656 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 13:40:58.685 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 13:40:58.720 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 13:40:58.994 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 13:40:59.219 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:40:59.263 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 13:40:59.264 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 13:40:59.269 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 13:40:59.269 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 13:40:59.270 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 13:40:59.270 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 13:40:59.270 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 13:40:59.270 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 13:40:59.271 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 13:40:59.271 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 13:41:00.879 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 13:41:00.935 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 13:41:00.944 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.617 seconds (process running for 4.98)
2025-08-11 13:41:00.945 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 13:41:01.097 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 13:41:01.097 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 13:41:13.842 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [da68af2d-1] HTTP GET "/favicon.ico"
2025-08-11 13:41:13.859 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 13:41:13.866 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [da68af2d-1] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 13:41:13.869 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [da68af2d-1] Resource not found
2025-08-11 13:41:13.871 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [da68af2d-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 13:41:13.876 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 13:41:13.900 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [da68af2d-1] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 13:41:13.900 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [da68af2d-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 13:41:13.908 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [da68af2d-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 13:41:13.921 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [da68af2d-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 13:41:13.922 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 13:41:18.147 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [adebeb8d-2] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 13:41:18.149 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:41:18.156 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [adebeb8d-2] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 13:41:18.168 [reactor-http-nio-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:41:18.180 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [adebeb8d-2] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 13:41:18.180 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [adebeb8d-2] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 13:41:18.201 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 13:41:18.258 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 13:41:18.276 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [adebeb8d-2] Encoding [CatalogDTO[publicId=6cd55760-7904-4821-9ce6-9b35d63c9e85, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 13:41:18.280 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [adebeb8d-2] Completed 200 OK
2025-08-11 13:41:18.281 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 13:54:09.604 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 13:54:09.623 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 15:20:13.611 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 96336 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 15:20:13.612 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 15:20:13.612 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 15:20:14.168 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 15:20:14.249 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 1 R2DBC repository interface.
2025-08-11 15:20:14.648 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 15:20:14.703 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 15:20:14.796 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 15:20:14.964 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 15:20:15.262 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 15:20:15.279 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 15:20:15.391 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 15:20:15.424 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 15:20:15.455 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 15:20:15.779 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 15:20:16.024 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:20:16.062 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 15:20:16.063 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 15:20:16.068 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 15:20:16.069 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 15:20:17.689 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 15:20:17.754 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 15:20:17.763 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.46 seconds (process running for 5.989)
2025-08-11 15:20:17.764 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 15:20:17.911 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 15:20:17.911 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 15:20:28.304 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69092872-1] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 15:20:28.317 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:20:28.322 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [69092872-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:20:28.334 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:20:28.363 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [69092872-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:20:28.363 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [69092872-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:20:28.387 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 15:20:28.441 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: Catalog[id=52, publicId=b80543ef-02cc-4bd1-aed3-1a6ad28e33ef, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000.00, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=2025-08-11T14:20:28.438893Z, updatedOn=2025-08-11T14:20:28.438893Z]
2025-08-11 15:20:28.441 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:20:28.451 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [69092872-1] Encoding [CatalogDTO[publicId=b80543ef-02cc-4bd1-aed3-1a6ad28e33ef, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 15:20:28.463 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69092872-1] Completed 200 OK
2025-08-11 15:20:28.465 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 15:25:32.926 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 15:25:32.930 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 15:25:37.786 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 96529 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 15:25:37.787 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 15:25:37.787 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 15:25:38.332 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 15:25:38.408 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 1 R2DBC repository interface.
2025-08-11 15:25:38.794 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 15:25:38.857 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 15:25:38.957 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 15:25:39.126 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 15:25:39.401 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 15:25:39.417 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 15:25:39.541 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 15:25:39.580 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 15:25:39.623 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 15:25:39.896 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 15:25:40.113 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:25:40.153 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 15:25:40.154 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 15:25:40.158 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 15:25:40.159 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 15:25:40.159 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 15:25:41.761 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 15:25:41.822 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 15:25:41.831 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.519 seconds (process running for 4.854)
2025-08-11 15:25:41.832 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 15:25:41.985 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 15:25:41.985 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 15:25:49.779 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5487c2f9-1] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 15:25:49.795 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:25:49.798 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5487c2f9-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:25:49.808 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:25:49.816 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5487c2f9-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:25:49.817 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5487c2f9-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:25:49.839 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 15:25:49.883 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: Catalog[id=52, publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000.00, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=2025-08-11T12:11:02.221330Z, updatedOn=2025-08-11T12:11:02.221330Z]
2025-08-11 15:25:49.883 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:25:49.891 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [5487c2f9-1] Encoding [CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 15:25:49.900 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5487c2f9-1] Completed 200 OK
2025-08-11 15:25:49.902 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 15:32:35.107 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 15:32:35.116 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 15:32:40.888 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 96784 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 15:32:40.889 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 15:32:40.889 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 15:32:41.364 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 15:32:41.430 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 1 R2DBC repository interface.
2025-08-11 15:32:41.825 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 15:32:41.878 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 15:32:41.967 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 15:32:42.139 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 15:32:42.419 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 15:32:42.435 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 15:32:42.557 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 15:32:42.583 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 15:32:42.613 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 15:32:42.971 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 15:32:43.200 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:32:43.237 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 15:32:43.238 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 15:32:43.242 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 15:32:43.243 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 15:32:43.243 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 15:32:44.855 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 15:32:44.914 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 15:32:44.922 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.276 seconds (process running for 5.649)
2025-08-11 15:32:44.923 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 15:32:45.082 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 15:32:45.082 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 15:33:03.450 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b192f5bb-1] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 15:33:03.461 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:33:03.465 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [b192f5bb-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:33:03.475 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:33:03.499 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [b192f5bb-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:33:03.499 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [b192f5bb-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:33:03.514 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 15:33:03.545 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 15:33:03.555 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [b192f5bb-1] Encoding [CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 15:33:03.573 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b192f5bb-1] Completed 200 OK
2025-08-11 15:33:03.575 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 15:33:15.871 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c0722605-2] HTTP GET "/favicon.ico"
2025-08-11 15:33:15.873 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 15:33:15.887 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [c0722605-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 15:33:15.893 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [c0722605-2] Resource not found
2025-08-11 15:33:15.896 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c0722605-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 15:33:15.896 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 15:33:15.934 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c0722605-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 15:33:15.934 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c0722605-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 15:33:15.936 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [c0722605-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 15:33:15.937 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c0722605-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:15.938 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:15.938 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c0722605-3] HTTP GET "/favicon.ico"
2025-08-11 15:33:15.938 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 15:33:15.939 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [c0722605-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 15:33:15.939 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [c0722605-3] Resource not found
2025-08-11 15:33:15.940 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c0722605-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 15:33:15.940 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 15:33:15.941 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c0722605-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 15:33:15.941 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c0722605-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 15:33:15.941 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [c0722605-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 15:33:15.941 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c0722605-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:15.942 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:22.999 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2bd5d901-4] HTTP GET "/favicon.ico"
2025-08-11 15:33:23.000 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 15:33:23.001 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [2bd5d901-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 15:33:23.002 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [2bd5d901-4] Resource not found
2025-08-11 15:33:23.003 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [2bd5d901-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 15:33:23.003 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 15:33:23.004 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2bd5d901-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 15:33:23.004 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2bd5d901-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 15:33:23.004 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [2bd5d901-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 15:33:23.005 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2bd5d901-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:23.006 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 15:33:43.186 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [fdf45c63-5] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=ASC"
2025-08-11 15:33:43.187 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=ASC
2025-08-11 15:33:43.189 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [fdf45c63-5] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 15:33:43.197 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=ASC
2025-08-11 15:33:43.202 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [fdf45c63-5] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:33:43.202 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [fdf45c63-5] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 15:33:43.214 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: ASC]
2025-08-11 15:33:43.223 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: ASC]
2025-08-11 15:33:43.224 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@6039f8cb
2025-08-11 15:33:43.229 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@7cd8672e
2025-08-11 15:33:43.249 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 15:33:43.250 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 51
2025-08-11 15:33:43.255 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [fdf45c63-5] Encoding [PageResponse[content=[CatalogDTO[publicId=eeaeaaac-d6c4-480c-9cc7-b40be95fb260, title=Sample Catalog (truncated)...]
2025-08-11 15:33:43.259 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [fdf45c63-5] Completed 200 OK
2025-08-11 15:33:43.260 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 15:34:39.799 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [083d89f5-6] HTTP GET "/favicon.ico"
2025-08-11 15:34:39.802 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 15:34:39.803 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [083d89f5-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 15:34:39.811 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [083d89f5-6] Resource not found
2025-08-11 15:34:39.815 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [083d89f5-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 15:34:39.815 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 15:34:39.817 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [083d89f5-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 15:34:39.817 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [083d89f5-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 15:34:39.818 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [083d89f5-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 15:34:39.819 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [083d89f5-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 15:34:39.820 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 15:37:01.278 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0de1bff6-7] HTTP POST "/api/v1/catalogs"
2025-08-11 15:37:01.283 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 15:37:01.285 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [0de1bff6-7] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CatalogDTO)
2025-08-11 15:37:01.298 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [0de1bff6-7] Content-Type:application/json
2025-08-11 15:37:01.347 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [0de1bff6-7] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:37:01.365 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [0de1bff6-7] Decoded [CatalogDTO[publicId=null, title=Gut Health and Wellness, description=Improve your Gut Health and fee (truncated)...]
2025-08-11 15:37:01.384 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CatalogDTO[publicId=null, title=Gut Health and Wellness, description=Improve your Gut Health and feel well and great again, industryId=08eac1d0-70f1-4b97-9409-906ef5298915, industryName=Healthcare, categories=[Beauty, Wellness], tags=[trending, limited, sale], price=15000, merchantId=198998cc-30d0-4000-84ff-b3d33b209280, rating=3.0, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 15:37:01.385 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0de1bff6-7] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:37:01.385 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0de1bff6-7] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:37:01.393 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CatalogDTO[publicId=null, title=Gut Health and Wellness, description=Improve your Gut Health and feel well and great again, industryId=08eac1d0-70f1-4b97-9409-906ef5298915, industryName=Healthcare, categories=[Beauty, Wellness], tags=[trending, limited, sale], price=15000, merchantId=198998cc-30d0-4000-84ff-b3d33b209280, rating=3.0, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE, createdOn=null, updatedOn=null]
2025-08-11 15:37:01.393 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 08eac1d0-70f1-4b97-9409-906ef5298915
2025-08-11 15:37:01.429 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Created catalog item with title: Gut Health and Wellness
2025-08-11 15:37:01.432 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [0de1bff6-7] Encoding [CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and Wellness, description (truncated)...]
2025-08-11 15:37:01.433 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0de1bff6-7] Completed 201 CREATED
2025-08-11 15:37:01.433 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 15:37:25.554 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [45786c82-8] HTTP GET "/favicon.ico"
2025-08-11 15:37:25.556 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 15:37:25.557 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [45786c82-8] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 15:37:25.558 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [45786c82-8] Resource not found
2025-08-11 15:37:25.558 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [45786c82-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 15:37:25.558 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 15:37:25.559 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [45786c82-8] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 15:37:25.559 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [45786c82-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 15:37:25.560 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [45786c82-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 15:37:25.560 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [45786c82-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 15:37:25.561 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 15:37:34.552 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7f197e72-9] HTTP GET "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 15:37:34.554 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 15:37:34.555 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7f197e72-9] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:37:34.560 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 15:37:34.568 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7f197e72-9] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:37:34.568 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [7f197e72-9] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:37:34.580 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 882baf7d-dd94-4867-926f-88b846f51614 (cache miss)
2025-08-11 15:37:34.599 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 15:37:34.603 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [7f197e72-9] Encoding [CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and Wellness, description (truncated)...]
2025-08-11 15:37:34.604 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7f197e72-9] Completed 200 OK
2025-08-11 15:37:34.605 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 15:37:45.302 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 15:37:45.310 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 15:51:20.243 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 97901 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 15:51:20.244 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 15:51:20.245 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 15:51:21.219 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 14 mappings in 'requestMappingHandlerMapping'
2025-08-11 15:51:21.228 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 15:51:21.282 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 15:51:21.309 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 15:51:21.326 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.322 seconds (process running for 1.936)
2025-08-11 15:51:21.366 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c62d2ad] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 15:51:21.378 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4ac2bdee] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 15:51:21.384 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 15:51:21.388 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4ac2bdee] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 15:51:21.402 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 15:51:21.424 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4ac2bdee] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:51:21.424 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4ac2bdee] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:51:21.436 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [4ac2bdee] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=6c983006-8a3c-4d6a- (truncated)...]
2025-08-11 15:51:21.444 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4ac2bdee] Completed 200 OK
2025-08-11 15:51:21.445 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:51:21.447 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c62d2ad] [5e572af0] Response 200 OK
2025-08-11 15:51:21.478 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1c62d2ad] [5e572af0] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=6c983006-8a3c-4d6a- (truncated)...]
2025-08-11 15:51:21.479 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [4ac2bdee] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=6c983006-8a3c-4d6a- (truncated)...]
2025-08-11 15:51:21.482 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1c62d2ad] [5e572af0] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=6c983006-8a3c-4d6a- (truncated)...]
2025-08-11 15:51:21.498 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c459c28] HTTP DELETE /api/v1/catalogs/f2597536-ce1e-484c-bcf0-ee9063361a9c
2025-08-11 15:51:21.499 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b834963] HTTP DELETE "/api/v1/catalogs/f2597536-ce1e-484c-bcf0-ee9063361a9c"
2025-08-11 15:51:21.499 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/f2597536-ce1e-484c-bcf0-ee9063361a9c
2025-08-11 15:51:21.499 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [7b834963] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 15:51:21.500 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: f2597536-ce1e-484c-bcf0-ee9063361a9c
2025-08-11 15:51:21.501 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7b834963] Completed 204 NO_CONTENT
2025-08-11 15:51:21.502 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 15:51:21.502 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c459c28] [1c54847f] Response 204 NO_CONTENT
2025-08-11 15:51:21.507 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2e5e72] HTTP POST /api/v1/catalogs
2025-08-11 15:51:21.515 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2c2e5e72] Encoding [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 15:51:21.516 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4174046b] HTTP POST "/api/v1/catalogs"
2025-08-11 15:51:21.516 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 15:51:21.517 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4174046b] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 15:51:21.518 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4174046b] Content-Type:application/json
2025-08-11 15:51:21.519 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4174046b] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 15:51:21.527 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4174046b] Decoded [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 15:51:21.559 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validation, industryId=095e40b7-f20e-4a5c-9a4f-e19b3d0ec6cd, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=08232acf-61c3-4db0-a318-65114d3f535f, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 15:51:21.560 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4174046b] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:51:21.560 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4174046b] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:51:21.560 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [4174046b] Encoding [CatalogDTO[publicId=1d0ee514-3e18-4e3c-b917-ac60ad41095e, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 15:51:21.561 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4174046b] Completed 201 CREATED
2025-08-11 15:51:21.561 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 15:51:21.562 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2e5e72] [23155393] Response 201 CREATED
2025-08-11 15:51:21.563 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2c2e5e72] [23155393] Decoded [CatalogDTO[publicId=1d0ee514-3e18-4e3c-b917-ac60ad41095e, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 15:51:21.567 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1013871e] HTTP GET /api/v1/catalogs/0f51a313-2782-47f7-a3fd-ba8d4ae783ad
2025-08-11 15:51:21.568 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [53ef3713] HTTP GET "/api/v1/catalogs/0f51a313-2782-47f7-a3fd-ba8d4ae783ad"
2025-08-11 15:51:21.568 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/0f51a313-2782-47f7-a3fd-ba8d4ae783ad
2025-08-11 15:51:21.568 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [53ef3713] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:51:21.569 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 0f51a313-2782-47f7-a3fd-ba8d4ae783ad
2025-08-11 15:51:21.570 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [53ef3713] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:51:21.570 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [53ef3713] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:51:21.570 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [53ef3713] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=39045eb2-5f6c (truncated)...]
2025-08-11 15:51:21.571 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [53ef3713] Completed 200 OK
2025-08-11 15:51:21.571 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:51:21.571 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1013871e] [7c3a266a] Response 200 OK
2025-08-11 15:51:21.572 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1013871e] [7c3a266a] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=39045eb2-5f6c (truncated)...]
2025-08-11 15:51:21.575 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23e86863] HTTP PUT /api/v1/catalogs/48e8c8a0-f62b-4f16-80d0-051e6246b277
2025-08-11 15:51:21.576 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [23e86863] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:51:21.576 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [455c69d5] HTTP PUT "/api/v1/catalogs/48e8c8a0-f62b-4f16-80d0-051e6246b277"
2025-08-11 15:51:21.577 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/48e8c8a0-f62b-4f16-80d0-051e6246b277
2025-08-11 15:51:21.577 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [455c69d5] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 15:51:21.579 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [455c69d5] Content-Type:application/json
2025-08-11 15:51:21.579 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [455c69d5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:51:21.580 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [455c69d5] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:51:21.587 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 48e8c8a0-f62b-4f16-80d0-051e6246b277
2025-08-11 15:51:21.587 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [455c69d5] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:51:21.588 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [455c69d5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:51:21.588 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [455c69d5] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:51:21.588 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [455c69d5] Completed 200 OK
2025-08-11 15:51:21.588 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:51:21.588 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23e86863] [5446d170] Response 200 OK
2025-08-11 15:51:21.589 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [23e86863] [5446d170] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:52:25.940 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 97966 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 15:52:25.941 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 15:52:25.942 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 15:52:26.910 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 14 mappings in 'requestMappingHandlerMapping'
2025-08-11 15:52:26.918 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 15:52:26.980 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 15:52:27.009 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 15:52:27.026 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.371 seconds (process running for 1.965)
2025-08-11 15:52:27.066 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c62d2ad] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 15:52:27.078 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [131314fd] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 15:52:27.085 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 15:52:27.089 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [131314fd] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 15:52:27.103 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 15:52:27.127 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [131314fd] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:52:27.128 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [131314fd] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:52:27.141 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [131314fd] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=7f843dda-cb8b-4653- (truncated)...]
2025-08-11 15:52:27.150 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [131314fd] Completed 200 OK
2025-08-11 15:52:27.151 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:52:27.152 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c62d2ad] [4d7e361f] Response 200 OK
2025-08-11 15:52:27.185 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1c62d2ad] [4d7e361f] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=7f843dda-cb8b-4653- (truncated)...]
2025-08-11 15:52:27.185 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [131314fd] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=7f843dda-cb8b-4653- (truncated)...]
2025-08-11 15:52:27.186 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1c62d2ad] [4d7e361f] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=7f843dda-cb8b-4653- (truncated)...]
2025-08-11 15:52:27.200 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c459c28] HTTP DELETE /api/v1/catalogs/7505119e-bef0-44bb-abbb-8a8f93781ed9
2025-08-11 15:52:27.201 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [27acc510] HTTP DELETE "/api/v1/catalogs/7505119e-bef0-44bb-abbb-8a8f93781ed9"
2025-08-11 15:52:27.201 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/7505119e-bef0-44bb-abbb-8a8f93781ed9
2025-08-11 15:52:27.201 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [27acc510] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 15:52:27.202 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 7505119e-bef0-44bb-abbb-8a8f93781ed9
2025-08-11 15:52:27.203 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [27acc510] Completed 204 NO_CONTENT
2025-08-11 15:52:27.204 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 15:52:27.204 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c459c28] [2692aca1] Response 204 NO_CONTENT
2025-08-11 15:52:27.209 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2e5e72] HTTP POST /api/v1/catalogs
2025-08-11 15:52:27.216 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [2c2e5e72] Encoding [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 15:52:27.218 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [365b6a8c] HTTP POST "/api/v1/catalogs"
2025-08-11 15:52:27.218 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 15:52:27.218 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [365b6a8c] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 15:52:27.219 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [365b6a8c] Content-Type:application/json
2025-08-11 15:52:27.221 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [365b6a8c] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 15:52:27.229 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [365b6a8c] Decoded [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 15:52:27.264 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validation, industryId=29a5fd7a-98b3-4220-ad1c-0ebb23d84350, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=edd77692-9cc0-42d3-8b09-1cb1573b6ad9, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 15:52:27.265 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [365b6a8c] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:52:27.265 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [365b6a8c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:52:27.266 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [365b6a8c] Encoding [CatalogDTO[publicId=9d90e8d4-461a-4f82-ac87-ff8cef86c5d2, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 15:52:27.267 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [365b6a8c] Completed 201 CREATED
2025-08-11 15:52:27.267 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 15:52:27.267 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2e5e72] [72b91bbc] Response 201 CREATED
2025-08-11 15:52:27.269 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2c2e5e72] [72b91bbc] Decoded [CatalogDTO[publicId=9d90e8d4-461a-4f82-ac87-ff8cef86c5d2, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 15:52:27.272 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1013871e] HTTP GET /api/v1/catalogs/e3077d79-5c7a-408c-aa87-ca9fc3712a8b
2025-08-11 15:52:27.273 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [34bdc394] HTTP GET "/api/v1/catalogs/e3077d79-5c7a-408c-aa87-ca9fc3712a8b"
2025-08-11 15:52:27.273 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/e3077d79-5c7a-408c-aa87-ca9fc3712a8b
2025-08-11 15:52:27.273 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [34bdc394] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 15:52:27.274 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: e3077d79-5c7a-408c-aa87-ca9fc3712a8b
2025-08-11 15:52:27.275 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [34bdc394] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:52:27.275 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [34bdc394] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:52:27.275 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [34bdc394] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=82468044-d7c2 (truncated)...]
2025-08-11 15:52:27.275 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [34bdc394] Completed 200 OK
2025-08-11 15:52:27.276 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:52:27.276 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1013871e] [1b68ce07] Response 200 OK
2025-08-11 15:52:27.276 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1013871e] [1b68ce07] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=82468044-d7c2 (truncated)...]
2025-08-11 15:52:27.280 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23e86863] HTTP PUT /api/v1/catalogs/85ccd374-99ed-4b09-85f0-56edc2427a77
2025-08-11 15:52:27.281 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [23e86863] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:52:27.281 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [626cdaa4] HTTP PUT "/api/v1/catalogs/85ccd374-99ed-4b09-85f0-56edc2427a77"
2025-08-11 15:52:27.282 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/85ccd374-99ed-4b09-85f0-56edc2427a77
2025-08-11 15:52:27.282 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [626cdaa4] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 15:52:27.283 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [626cdaa4] Content-Type:application/json
2025-08-11 15:52:27.283 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [626cdaa4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:52:27.284 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [626cdaa4] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:52:27.291 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 85ccd374-99ed-4b09-85f0-56edc2427a77
2025-08-11 15:52:27.292 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [626cdaa4] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 15:52:27.292 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [626cdaa4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 15:52:27.292 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [626cdaa4] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 15:52:27.293 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [626cdaa4] Completed 200 OK
2025-08-11 15:52:27.293 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 15:52:27.293 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23e86863] [7d2793ec] Response 200 OK
2025-08-11 15:52:27.293 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [23e86863] [7d2793ec] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:02:35.921 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 98402 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:02:35.922 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:02:35.922 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 16:02:36.934 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:02:36.941 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:02:36.996 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 16:02:37.024 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:02:37.042 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.379 seconds (process running for 2.008)
2025-08-11 16:02:37.082 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2b80497f] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 16:02:37.092 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69d9023e] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 16:02:37.098 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 16:02:37.102 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [69d9023e] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 16:02:37.116 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 16:02:37.140 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [69d9023e] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:02:37.141 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [69d9023e] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:02:37.158 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [69d9023e] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=94db1211-474f-46ae- (truncated)...]
2025-08-11 16:02:37.166 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [69d9023e] Completed 200 OK
2025-08-11 16:02:37.167 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:02:37.169 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2b80497f] [3135c4b4] Response 200 OK
2025-08-11 16:02:37.198 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2b80497f] [3135c4b4] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=94db1211-474f-46ae- (truncated)...]
2025-08-11 16:02:37.198 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [69d9023e] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=94db1211-474f-46ae- (truncated)...]
2025-08-11 16:02:37.199 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [2b80497f] [3135c4b4] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=94db1211-474f-46ae- (truncated)...]
2025-08-11 16:02:37.215 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38ba8b45] HTTP DELETE /api/v1/catalogs/aa9b362d-3a83-47b1-8c00-1d144e07ef08
2025-08-11 16:02:37.215 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1c57b8a] HTTP DELETE "/api/v1/catalogs/aa9b362d-3a83-47b1-8c00-1d144e07ef08"
2025-08-11 16:02:37.216 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/aa9b362d-3a83-47b1-8c00-1d144e07ef08
2025-08-11 16:02:37.216 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [1c57b8a] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:02:37.217 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: aa9b362d-3a83-47b1-8c00-1d144e07ef08
2025-08-11 16:02:37.218 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1c57b8a] Completed 204 NO_CONTENT
2025-08-11 16:02:37.219 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 16:02:37.219 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38ba8b45] [5a6c5ae5] Response 204 NO_CONTENT
2025-08-11 16:02:37.224 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d02ff64] HTTP POST /api/v1/catalogs
2025-08-11 16:02:37.232 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3d02ff64] Encoding [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 16:02:37.233 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [70a4a551] HTTP POST "/api/v1/catalogs"
2025-08-11 16:02:37.234 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 16:02:37.234 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [70a4a551] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 16:02:37.235 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [70a4a551] Content-Type:application/json
2025-08-11 16:02:37.237 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [70a4a551] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 16:02:37.244 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [70a4a551] Decoded [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 16:02:37.279 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validation, industryId=f1bc0c58-a85f-4363-962f-8c3759956b3d, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=f13f551d-c10a-4029-b268-be45a6726dfc, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 16:02:37.280 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [70a4a551] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:02:37.280 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [70a4a551] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:02:37.281 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [70a4a551] Encoding [CatalogDTO[publicId=e8ea72c2-caf7-4745-a9ec-8270895aec87, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 16:02:37.282 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [70a4a551] Completed 201 CREATED
2025-08-11 16:02:37.282 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 16:02:37.283 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d02ff64] [1a4918c7] Response 201 CREATED
2025-08-11 16:02:37.284 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3d02ff64] [1a4918c7] Decoded [CatalogDTO[publicId=e8ea72c2-caf7-4745-a9ec-8270895aec87, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 16:02:37.288 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c0cf193] HTTP GET /api/v1/catalogs/d600bca0-0b96-4dcb-8797-77c57075be20
2025-08-11 16:02:37.289 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [45f03a67] HTTP GET "/api/v1/catalogs/d600bca0-0b96-4dcb-8797-77c57075be20"
2025-08-11 16:02:37.289 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/d600bca0-0b96-4dcb-8797-77c57075be20
2025-08-11 16:02:37.289 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [45f03a67] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:02:37.290 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: d600bca0-0b96-4dcb-8797-77c57075be20
2025-08-11 16:02:37.291 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [45f03a67] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:02:37.291 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [45f03a67] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:02:37.291 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [45f03a67] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=b42a5908-6e83 (truncated)...]
2025-08-11 16:02:37.291 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [45f03a67] Completed 200 OK
2025-08-11 16:02:37.292 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:02:37.292 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c0cf193] [6a2529dd] Response 200 OK
2025-08-11 16:02:37.292 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1c0cf193] [6a2529dd] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=b42a5908-6e83 (truncated)...]
2025-08-11 16:02:37.296 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bda1f0] HTTP PUT /api/v1/catalogs/8c25f27a-ab3b-45c9-86c7-0294b332afae
2025-08-11 16:02:37.296 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [3bda1f0] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:02:37.297 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [22dcc0c4] HTTP PUT "/api/v1/catalogs/8c25f27a-ab3b-45c9-86c7-0294b332afae"
2025-08-11 16:02:37.297 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/8c25f27a-ab3b-45c9-86c7-0294b332afae
2025-08-11 16:02:37.298 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [22dcc0c4] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 16:02:37.299 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [22dcc0c4] Content-Type:application/json
2025-08-11 16:02:37.300 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [22dcc0c4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:02:37.300 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [22dcc0c4] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:02:37.309 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: 8c25f27a-ab3b-45c9-86c7-0294b332afae
2025-08-11 16:02:37.310 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [22dcc0c4] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:02:37.310 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [22dcc0c4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:02:37.310 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [22dcc0c4] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:02:37.310 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [22dcc0c4] Completed 200 OK
2025-08-11 16:02:37.311 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:02:37.311 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bda1f0] [5b7cce02] Response 200 OK
2025-08-11 16:02:37.312 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3bda1f0] [5b7cce02] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:02:48.227 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 98423 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:02:48.228 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:02:48.228 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 16:02:48.792 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 16:02:48.872 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 1 R2DBC repository interface.
2025-08-11 16:02:49.271 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 16:02:49.337 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 16:02:49.434 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 16:02:49.604 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 16:02:49.893 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:02:49.910 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:02:50.023 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 16:02:50.049 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 16:02:50.084 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:02:50.401 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 16:02:50.648 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:02:50.686 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 16:02:50.688 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:02:50.692 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 16:02:50.692 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 16:02:50.692 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 16:02:50.693 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 16:02:50.693 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 16:02:50.693 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 16:02:50.693 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 16:02:50.693 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 16:02:52.303 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 16:02:52.362 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 16:02:52.370 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.415 seconds (process running for 4.779)
2025-08-11 16:02:52.372 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 16:02:52.534 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 52 catalog items, skipping initialization
2025-08-11 16:02:52.534 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 16:03:00.131 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3a31a494-1] HTTP GET "/"
2025-08-11 16:03:00.141 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/
2025-08-11 16:03:00.149 [reactor-http-nio-2] [/] DEBUG o.s.w.r.f.s.s.RouterFunctionMapping - [3a31a494-1] Mapped to org.springframework.boot.autoconfigure.web.reactive.WelcomePageRouterFunctionFactory$$Lambda/0x0000007001730918@6bf2434f
2025-08-11 16:03:00.159 [boundedElastic-1] [/] DEBUG org.springframework.web.HttpLogging - [3a31a494-1] Zero-copy [class path resource [static/index.html]]
2025-08-11 16:03:00.164 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3a31a494-1] Completed 200 OK
2025-08-11 16:03:00.165 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:03:00.607 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3a31a494-2] HTTP GET "/openapi.yaml"
2025-08-11 16:03:00.608 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/openapi.yaml
2025-08-11 16:03:00.611 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [3a31a494-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:00.618 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [839adf4b-3] HTTP GET "/favicon.ico"
2025-08-11 16:03:00.619 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:00.619 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [839adf4b-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:00.620 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [839adf4b-3] Resource not found
2025-08-11 16:03:00.624 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [839adf4b-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:00.625 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:00.629 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [3a31a494-2] Resource associated with 'application/octet-stream'
2025-08-11 16:03:00.629 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [3a31a494-2] Zero-copy [class path resource [static/openapi.yaml]]
2025-08-11 16:03:00.630 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3a31a494-2] Completed 200 OK
2025-08-11 16:03:00.631 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:03:00.641 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [839adf4b-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:00.641 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [839adf4b-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:00.649 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [839adf4b-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:00.657 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [839adf4b-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:00.657 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:08.558 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7aed3164-4] HTTP GET "/favicon.ico"
2025-08-11 16:03:08.564 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:08.570 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [7aed3164-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:08.572 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [7aed3164-4] Resource not found
2025-08-11 16:03:08.579 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [7aed3164-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:08.579 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:08.581 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7aed3164-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:08.581 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7aed3164-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:08.582 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [7aed3164-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:08.583 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7aed3164-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:08.583 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:13.661 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [47b5b996-5] HTTP GET "/favicon.ico"
2025-08-11 16:03:13.662 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:13.663 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [47b5b996-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:13.663 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [47b5b996-5] Resource not found
2025-08-11 16:03:13.664 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [47b5b996-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:13.664 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:13.665 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [47b5b996-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:13.665 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [47b5b996-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:13.666 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [47b5b996-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:13.666 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [47b5b996-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:13.667 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:16.278 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-6] HTTP GET "/favicon.ico"
2025-08-11 16:03:16.278 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:16.279 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [406942f2-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:16.279 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [406942f2-6] Resource not found
2025-08-11 16:03:16.280 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [406942f2-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:16.280 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:16.280 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:16.280 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:16.281 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [406942f2-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:16.281 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:16.281 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:16.720 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-7] HTTP GET "/favicon.ico"
2025-08-11 16:03:16.721 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:16.722 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [406942f2-7] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:16.723 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [406942f2-7] Resource not found
2025-08-11 16:03:16.723 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [406942f2-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:16.724 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:16.724 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-7] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:16.724 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:16.725 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [406942f2-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:16.726 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:16.726 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:17.187 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-8] HTTP GET "/favicon.ico"
2025-08-11 16:03:17.188 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:17.188 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [406942f2-8] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:17.189 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [406942f2-8] Resource not found
2025-08-11 16:03:17.189 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [406942f2-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:17.190 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:17.191 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-8] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:17.191 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:17.191 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [406942f2-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:17.191 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:17.192 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:17.796 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-9] HTTP GET "/favicon.ico"
2025-08-11 16:03:17.798 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:17.799 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [406942f2-9] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:17.799 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [406942f2-9] Resource not found
2025-08-11 16:03:17.800 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [406942f2-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:17.800 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:17.800 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-9] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:17.800 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [406942f2-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:17.801 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [406942f2-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:17.801 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [406942f2-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:17.801 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:21.583 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [357b2155-10] HTTP GET "/favicon.ico"
2025-08-11 16:03:21.583 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:03:21.584 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [357b2155-10] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:03:21.585 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [357b2155-10] Resource not found
2025-08-11 16:03:21.585 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [357b2155-10] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:03:21.585 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:03:21.586 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [357b2155-10] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:03:21.586 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [357b2155-10] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:03:21.587 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [357b2155-10] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:03:21.588 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [357b2155-10] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:21.588 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:03:45.485 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [eaaee6bb-11] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=20&sort=createdOn&direction=DESC"
2025-08-11 16:03:45.488 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=20&sort=createdOn&direction=DESC
2025-08-11 16:03:45.499 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [eaaee6bb-11] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 16:03:45.530 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 16:03:45.544 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [eaaee6bb-11] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:03:45.544 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [eaaee6bb-11] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 16:03:45.570 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 16:03:45.575 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 20, sort: createdOn: DESC]
2025-08-11 16:03:45.576 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@1e357470
2025-08-11 16:03:45.584 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@4cdbc3e7
2025-08-11 16:03:45.618 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 16:03:45.619 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 52
2025-08-11 16:03:45.629 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [eaaee6bb-11] Encoding [PageResponse[content=[CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and (truncated)...]
2025-08-11 16:03:45.636 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [eaaee6bb-11] Completed 200 OK
2025-08-11 16:03:45.636 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:06:25.970 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9e232a49-12] HTTP GET "/favicon.ico"
2025-08-11 16:06:25.973 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:06:25.976 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [9e232a49-12] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:06:25.981 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [9e232a49-12] Resource not found
2025-08-11 16:06:25.982 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [9e232a49-12] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:06:25.982 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:06:25.984 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9e232a49-12] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:06:25.985 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9e232a49-12] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:06:25.985 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [9e232a49-12] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:06:25.990 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9e232a49-12] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:06:25.991 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:10:32.744 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4c8a524f-13] HTTP POST "/api/v1/catalogs"
2025-08-11 16:10:32.748 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 16:10:32.749 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4c8a524f-13] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 16:10:32.763 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4c8a524f-13] Content-Type:application/json
2025-08-11 16:10:32.797 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [4c8a524f-13] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 16:10:32.825 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [4c8a524f-13] Decoded [CreateCatalogDto[title=Multi-purpose Grinding Power Tool, description=This power tool enabls the eas (truncated)...]
2025-08-11 16:10:32.845 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Multi-purpose Grinding Power Tool, description=This power tool enabls the easy of making different herbs, spice, etc smooth blends, as well as till the garden soil, industryId=211b25e8-3a2e-450b-b821-36bbeead1272, industryName=Health & Beauty, categories=[Food & Beverage, Home & Garden], tags=[exclusive, premium, featured], price=82500, merchantId=19899a7f-f340-4000-85ae-5385161ba680, rating=4.56, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 16:10:32.847 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4c8a524f-13] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:10:32.847 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [4c8a524f-13] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:10:32.856 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CreateCatalogDto[title=Multi-purpose Grinding Power Tool, description=This power tool enabls the easy of making different herbs, spice, etc smooth blends, as well as till the garden soil, industryId=211b25e8-3a2e-450b-b821-36bbeead1272, industryName=Health & Beauty, categories=[Food & Beverage, Home & Garden], tags=[exclusive, premium, featured], price=82500, merchantId=19899a7f-f340-4000-85ae-5385161ba680, rating=4.56, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 16:10:32.856 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 211b25e8-3a2e-450b-b821-36bbeead1272
2025-08-11 16:10:32.906 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Created catalog item with title: Multi-purpose Grinding Power Tool
2025-08-11 16:10:32.919 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [4c8a524f-13] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:10:32.920 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4c8a524f-13] Completed 201 CREATED
2025-08-11 16:10:32.920 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 16:11:15.982 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [38e75746-14] HTTP GET "/favicon.ico"
2025-08-11 16:11:15.983 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:11:15.985 [reactor-http-nio-1] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [38e75746-14] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:11:15.987 [reactor-http-nio-1] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [38e75746-14] Resource not found
2025-08-11 16:11:15.989 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [38e75746-14] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:11:15.989 [reactor-http-nio-1] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:11:15.990 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [38e75746-14] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:11:15.990 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [38e75746-14] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:11:15.991 [reactor-http-nio-1] [/] DEBUG org.springframework.web.HttpLogging - [38e75746-14] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:11:15.993 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [38e75746-14] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:11:15.993 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:11:24.039 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d9ae0a75-15] HTTP GET "/favicon.ico"
2025-08-11 16:11:24.041 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:11:24.043 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [d9ae0a75-15] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:11:24.044 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [d9ae0a75-15] Resource not found
2025-08-11 16:11:24.045 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [d9ae0a75-15] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:11:24.045 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:11:24.046 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d9ae0a75-15] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:11:24.046 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d9ae0a75-15] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:11:24.047 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [d9ae0a75-15] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:11:24.048 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d9ae0a75-15] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:11:24.048 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:11:31.962 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0eaf11b4-16] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:11:31.964 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:11:31.965 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [0eaf11b4-16] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:11:31.979 [reactor-http-nio-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:11:31.990 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [0eaf11b4-16] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:11:31.990 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findByPublicId(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:11:31.991 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0eaf11b4-16] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:11:31.992 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0eaf11b4-16] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:11:31.992 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0eaf11b4-16] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:11:31.992 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [0eaf11b4-16] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:11:31.992 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0eaf11b4-16] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:11:31.993 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:19:17.179 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 16:19:17.196 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 16:19:21.833 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 99042 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:19:21.834 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:19:21.835 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 16:19:22.431 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 16:19:22.508 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 1 R2DBC repository interface.
2025-08-11 16:19:22.983 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 16:19:23.042 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 16:19:23.142 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 16:19:23.308 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 16:19:23.593 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:19:23.613 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:19:23.723 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 16:19:23.750 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 16:19:23.796 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:19:24.113 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 16:19:24.343 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:19:24.390 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 16:19:24.392 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 16:19:24.396 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 16:19:26.015 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 16:19:26.077 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 16:19:26.086 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.666 seconds (process running for 5.004)
2025-08-11 16:19:26.087 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 16:19:26.258 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 53 catalog items, skipping initialization
2025-08-11 16:19:26.258 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 16:20:01.561 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [31bfbde2-1] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:20:01.573 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:20:01.577 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [31bfbde2-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:20:01.587 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:20:01.590 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [31bfbde2-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:20:01.591 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findByPublicId(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:20:01.600 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [31bfbde2-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:20:01.602 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [31bfbde2-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:20:01.602 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [31bfbde2-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:20:01.609 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [31bfbde2-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:20:01.623 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [31bfbde2-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:20:01.625 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:28:49.153 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 16:28:49.161 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 16:28:53.770 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 99391 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:28:53.771 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:28:53.771 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 16:28:54.413 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 16:28:54.493 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 1 R2DBC repository interface.
2025-08-11 16:28:54.864 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 16:28:54.922 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 16:28:55.008 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 16:28:55.169 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 16:28:55.454 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:28:55.470 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:28:55.572 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 16:28:55.609 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 16:28:55.642 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:28:55.915 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 16:28:56.144 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:28:56.182 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 16:28:56.183 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 16:28:56.188 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 16:28:57.786 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 16:28:57.852 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 16:28:57.862 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.512 seconds (process running for 4.841)
2025-08-11 16:28:57.863 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 16:28:58.012 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 53 catalog items, skipping initialization
2025-08-11 16:28:58.012 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 16:29:09.577 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ea278080-1] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:29:09.589 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:29:09.593 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ea278080-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:29:09.635 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:29:09.642 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ea278080-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:29:09.642 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
java.lang.IllegalStateException: No Caffeine AsyncCache available: set CaffeineCacheManager.setAsyncCacheMode(true)
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.cache.caffeine.CaffeineCache.getAsyncCache(CaffeineCache.java:126)
	at org.springframework.cache.caffeine.CaffeineCache.retrieve(CaffeineCache.java:141)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doRetrieve(AbstractCacheInvoker.java:125)
	at org.springframework.cache.interceptor.CacheAspectSupport$ReactiveCachingHandler.findInCaches(CacheAspectSupport.java:1223)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:568)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:523)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:446)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.jade.platform.service.CatalogService$$SpringCGLIB$$0.findByPublicId(<generated>)
	at com.jade.platform.controller.CatalogController.getCatalogById(CatalogController.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:208)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:297)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:478)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:29:09.650 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ea278080-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:29:09.651 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ea278080-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:29:09.651 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ea278080-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:29:09.660 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [ea278080-1] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:29:09.673 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ea278080-1] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:29:09.675 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:29:57.532 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 16:29:57.540 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 16:30:01.869 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 99476 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:30:01.870 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:30:01.870 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 16:30:02.397 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 16:30:02.482 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 1 R2DBC repository interface.
2025-08-11 16:30:02.859 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 16:30:02.922 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 16:30:02.996 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 16:30:03.155 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 16:30:03.431 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:30:03.449 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:30:03.569 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 16:30:03.595 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 16:30:03.629 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:30:03.935 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 16:30:04.167 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:30:04.254 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 16:30:04.255 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 16:30:04.259 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 16:30:04.260 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 16:30:05.688 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 16:30:05.752 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 16:30:05.761 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.293 seconds (process running for 4.593)
2025-08-11 16:30:05.762 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 16:30:05.916 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 53 catalog items, skipping initialization
2025-08-11 16:30:05.916 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 16:30:12.060 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [457cb64d-1] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:30:12.070 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:30:12.073 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [457cb64d-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:30:12.084 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:30:12.098 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [457cb64d-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:30:12.098 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [457cb64d-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:30:12.131 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: f4762dd5-f2aa-454c-88f8-07357466b930 (cache miss)
2025-08-11 16:30:12.175 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:30:12.189 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [457cb64d-1] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:30:12.198 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [457cb64d-1] Completed 200 OK
2025-08-11 16:30:12.201 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:33:26.569 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [973090ee-2] HTTP GET "/favicon.ico"
2025-08-11 16:33:26.572 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:33:26.584 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [973090ee-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:33:26.588 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [973090ee-2] Resource not found
2025-08-11 16:33:26.592 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [973090ee-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:33:26.593 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:33:26.616 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [973090ee-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:33:26.616 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [973090ee-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:33:26.618 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [973090ee-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:33:26.621 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [973090ee-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:33:26.622 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:33:33.738 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f33816ed-3] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b931"
2025-08-11 16:33:33.740 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b931
2025-08-11 16:33:33.742 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f33816ed-3] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:33:33.744 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b931
2025-08-11 16:33:33.747 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f33816ed-3] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:33:33.747 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f33816ed-3] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:33:33.761 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: f4762dd5-f2aa-454c-88f8-07357466b931 (cache miss)
2025-08-11 16:33:33.787 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f33816ed-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 16:33:33.787 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 16:33:33.788 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f33816ed-3] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:33:33.788 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f33816ed-3] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:33:33.788 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f33816ed-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:33:33.789 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f33816ed-3] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 16:33:33.789 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f33816ed-3] Completed 404 NOT_FOUND
2025-08-11 16:33:33.790 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 16:33:44.926 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [edf3e781-4] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:33:44.927 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:33:44.928 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [edf3e781-4] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:33:44.928 [reactor-http-nio-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:33:44.930 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [edf3e781-4] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:33:44.930 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [edf3e781-4] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:33:44.932 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [edf3e781-4] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:33:44.932 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [edf3e781-4] Completed 200 OK
2025-08-11 16:33:44.933 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:36:05.111 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7ec3f094-5] HTTP GET "/favicon.ico"
2025-08-11 16:36:05.116 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:36:05.120 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [7ec3f094-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:36:05.123 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [7ec3f094-5] Resource not found
2025-08-11 16:36:05.131 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [7ec3f094-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:36:05.131 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:36:05.136 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7ec3f094-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:36:05.136 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7ec3f094-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:36:05.137 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [7ec3f094-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:36:05.138 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7ec3f094-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:05.139 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:13.771 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9346a999-6] HTTP GET "/favicon.ico"
2025-08-11 16:36:13.772 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:36:13.774 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [9346a999-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:36:13.777 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [9346a999-6] Resource not found
2025-08-11 16:36:13.778 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [9346a999-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:36:13.778 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:36:13.779 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9346a999-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:36:13.780 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9346a999-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:36:13.780 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [9346a999-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:36:13.782 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9346a999-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:13.783 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:20.576 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f9689e54-7] HTTP GET "/favicon.ico"
2025-08-11 16:36:20.576 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:36:20.577 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f9689e54-7] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:36:20.578 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f9689e54-7] Resource not found
2025-08-11 16:36:20.578 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f9689e54-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:36:20.578 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:36:20.579 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f9689e54-7] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:36:20.579 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f9689e54-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:36:20.579 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [f9689e54-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:36:20.580 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f9689e54-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:20.580 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:32.853 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f0fdeab1-8] HTTP GET "/favicon.ico"
2025-08-11 16:36:32.855 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:36:32.855 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f0fdeab1-8] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f0fdeab1-8] Resource not found
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f0fdeab1-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f0fdeab1-8] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f0fdeab1-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:36:32.856 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [f0fdeab1-8] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:36:32.857 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f0fdeab1-8] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:32.857 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:42.053 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [da377d7e-9] HTTP GET "/favicon.ico"
2025-08-11 16:36:42.055 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:36:42.056 [reactor-http-nio-10] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [da377d7e-9] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:36:42.057 [reactor-http-nio-10] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [da377d7e-9] Resource not found
2025-08-11 16:36:42.057 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [da377d7e-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:36:42.057 [reactor-http-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:36:42.058 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [da377d7e-9] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:36:42.058 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [da377d7e-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:36:42.058 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [da377d7e-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:36:42.059 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [da377d7e-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:36:42.059 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:38:54.559 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [053ebce2-10] HTTP PUT "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:38:54.563 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:38:54.564 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [053ebce2-10] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 16:38:54.571 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [053ebce2-10] Content-Type:application/json
2025-08-11 16:38:54.606 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [053ebce2-10] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:38:54.627 [reactor-http-nio-1] [/] DEBUG org.springframework.web.HttpLogging - [053ebce2-10] Decoded [CatalogDTO[publicId=null, title=Multi-purpose Grinding Power Tool, description=This power tool enabl (truncated)...]
2025-08-11 16:38:54.655 [reactor-http-nio-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:38:54.656 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [053ebce2-10] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:38:54.656 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [053ebce2-10] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:38:54.665 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Updating catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:38:54.710 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Updated catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:38:54.710 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for original industry ID: 211b25e8-3a2e-450b-b821-36bbeead1272
2025-08-11 16:38:54.712 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [053ebce2-10] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:38:54.713 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [053ebce2-10] Completed 200 OK
2025-08-11 16:38:54.713 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:39:09.364 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0707716a-11] HTTP GET "/favicon.ico"
2025-08-11 16:39:09.366 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:39:09.367 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [0707716a-11] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:39:09.367 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [0707716a-11] Resource not found
2025-08-11 16:39:09.368 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [0707716a-11] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:39:09.368 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:39:09.368 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0707716a-11] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:39:09.369 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0707716a-11] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:39:09.369 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [0707716a-11] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:39:09.369 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0707716a-11] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:09.370 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:13.310 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0707716a-12] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:39:13.314 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:13.315 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [0707716a-12] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:39:13.317 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:13.319 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0707716a-12] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:39:13.320 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0707716a-12] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:39:13.326 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: f4762dd5-f2aa-454c-88f8-07357466b930 (cache miss)
2025-08-11 16:39:13.336 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:13.341 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [0707716a-12] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:39:13.342 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0707716a-12] Completed 200 OK
2025-08-11 16:39:13.342 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:39:33.758 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6aef5269-13] HTTP GET "/favicon.ico"
2025-08-11 16:39:33.759 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:39:33.760 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [6aef5269-13] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:39:33.761 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [6aef5269-13] Resource not found
2025-08-11 16:39:33.761 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [6aef5269-13] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:39:33.761 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:39:33.762 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6aef5269-13] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:39:33.762 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6aef5269-13] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:39:33.763 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [6aef5269-13] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:39:33.763 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6aef5269-13] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:33.764 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:42.454 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [66367f20-14] HTTP DELETE "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:39:42.457 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:42.457 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [66367f20-14] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:39:42.459 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:42.474 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleting catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:42.493 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleted catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:42.495 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [66367f20-14] Completed 204 NO_CONTENT
2025-08-11 16:39:42.499 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 16:39:47.533 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3184d890-15] HTTP GET "/favicon.ico"
2025-08-11 16:39:47.534 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:39:47.534 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [3184d890-15] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:39:47.535 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [3184d890-15] Resource not found
2025-08-11 16:39:47.535 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [3184d890-15] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:39:47.535 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:39:47.536 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [3184d890-15] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:39:47.536 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [3184d890-15] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:39:47.536 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [3184d890-15] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:39:47.536 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3184d890-15] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:47.537 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:49.527 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [462d172a-16] HTTP GET "/favicon.ico"
2025-08-11 16:39:49.529 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:39:49.530 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [462d172a-16] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:39:49.530 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [462d172a-16] Resource not found
2025-08-11 16:39:49.531 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [462d172a-16] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:39:49.531 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:39:49.531 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [462d172a-16] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:39:49.531 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [462d172a-16] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:39:49.531 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [462d172a-16] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:39:49.532 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [462d172a-16] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:49.532 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:53.809 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [462d172a-17] HTTP GET "/favicon.ico"
2025-08-11 16:39:53.810 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:39:53.811 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [462d172a-17] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [462d172a-17] Resource not found
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [462d172a-17] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [462d172a-17] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [462d172a-17] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:39:53.812 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [462d172a-17] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:39:53.813 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [462d172a-17] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:53.813 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:39:58.145 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ee55fcc-18] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:39:58.148 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:58.149 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [3ee55fcc-18] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:39:58.149 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:39:58.151 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3ee55fcc-18] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:39:58.151 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [3ee55fcc-18] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:39:58.152 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [3ee55fcc-18] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:39:58.153 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [3ee55fcc-18] Completed 200 OK
2025-08-11 16:39:58.153 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:40:04.119 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a7e45308-19] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:40:04.120 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:04.120 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [a7e45308-19] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:40:04.121 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:04.121 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a7e45308-19] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:40:04.121 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a7e45308-19] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:40:04.121 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [a7e45308-19] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:40:04.122 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a7e45308-19] Completed 200 OK
2025-08-11 16:40:04.122 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:40:05.031 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d33542b4-20] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:40:05.032 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:05.033 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [d33542b4-20] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:40:05.033 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:05.034 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d33542b4-20] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:40:05.034 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d33542b4-20] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:40:05.034 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [d33542b4-20] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:40:05.035 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d33542b4-20] Completed 200 OK
2025-08-11 16:40:05.036 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:40:08.219 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d33542b4-21] HTTP GET "/favicon.ico"
2025-08-11 16:40:08.220 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:40:08.221 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [d33542b4-21] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:40:08.221 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [d33542b4-21] Resource not found
2025-08-11 16:40:08.222 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [d33542b4-21] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:40:08.222 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:40:08.223 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d33542b4-21] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:40:08.223 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d33542b4-21] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:40:08.223 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [d33542b4-21] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:40:08.224 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d33542b4-21] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:08.224 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:24.254 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c8cd31e1-22] HTTP DELETE "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:40:24.269 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [146263e4-23] HTTP GET "/favicon.ico"
2025-08-11 16:40:24.269 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:24.269 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:40:24.270 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [c8cd31e1-22] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:40:24.271 [reactor-http-nio-1] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [146263e4-23] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:40:24.275 [reactor-http-nio-1] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [146263e4-23] Resource not found
2025-08-11 16:40:24.276 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:24.277 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [146263e4-23] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:40:24.277 [reactor-http-nio-1] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:40:24.279 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [146263e4-23] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:40:24.279 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [146263e4-23] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:40:24.280 [reactor-http-nio-1] [/] DEBUG org.springframework.web.HttpLogging - [146263e4-23] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:40:24.281 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [146263e4-23] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:24.282 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:24.286 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleting catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:24.294 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c8cd31e1-22] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 16:40:24.294 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 16:40:24.294 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c8cd31e1-22] Using 'application/problem+json' given [application/problem+json] and supported [application/problem+json, text/event-stream]
2025-08-11 16:40:24.294 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c8cd31e1-22] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:40:24.294 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [c8cd31e1-22] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 16:40:24.295 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c8cd31e1-22] Completed 404 NOT_FOUND
2025-08-11 16:40:24.296 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 16:40:32.099 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6b348fcf-24] HTTP GET "/favicon.ico"
2025-08-11 16:40:32.100 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:40:32.102 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [6b348fcf-24] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:40:32.103 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [6b348fcf-24] Resource not found
2025-08-11 16:40:32.103 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [6b348fcf-24] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:40:32.103 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:40:32.106 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6b348fcf-24] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:40:32.106 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6b348fcf-24] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:40:32.107 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [6b348fcf-24] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:40:32.108 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6b348fcf-24] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:32.108 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:40:39.228 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [cbb38146-25] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:40:39.230 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:39.239 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [cbb38146-25] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:40:39.240 [reactor-http-nio-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:39.244 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [cbb38146-25] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:40:39.245 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [cbb38146-25] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:40:39.245 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [cbb38146-25] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:40:39.246 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [cbb38146-25] Completed 200 OK
2025-08-11 16:40:39.246 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:40:44.718 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9593d4c5-26] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:40:44.720 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:44.721 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [9593d4c5-26] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:40:44.722 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:40:44.722 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9593d4c5-26] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:40:44.723 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [9593d4c5-26] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:40:44.723 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [9593d4c5-26] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:40:44.725 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9593d4c5-26] Completed 200 OK
2025-08-11 16:40:44.726 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:41:46.868 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8ff858c1-27] HTTP GET "/"
2025-08-11 16:41:46.872 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/
2025-08-11 16:41:46.885 [reactor-http-nio-5] [/] DEBUG o.s.w.r.f.s.s.RouterFunctionMapping - [8ff858c1-27] Mapped to org.springframework.boot.autoconfigure.web.reactive.WelcomePageRouterFunctionFactory$$Lambda/0x000000700172f360@462e5b6a
2025-08-11 16:41:46.903 [boundedElastic-1] [/] DEBUG org.springframework.web.HttpLogging - [8ff858c1-27] Zero-copy [class path resource [static/index.html]]
2025-08-11 16:41:46.910 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8ff858c1-27] Completed 200 OK
2025-08-11 16:41:46.911 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:41:47.338 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8ff858c1-28] HTTP GET "/openapi.yaml"
2025-08-11 16:41:47.340 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/openapi.yaml
2025-08-11 16:41:47.352 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [8ff858c1-28] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:41:47.357 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5bbb6ad8-29] HTTP GET "/favicon.ico"
2025-08-11 16:41:47.358 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:41:47.358 [reactor-http-nio-6] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [5bbb6ad8-29] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:41:47.359 [reactor-http-nio-6] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [5bbb6ad8-29] Resource not found
2025-08-11 16:41:47.364 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [5bbb6ad8-29] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:41:47.364 [reactor-http-nio-6] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:41:47.366 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [5bbb6ad8-29] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:41:47.366 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [5bbb6ad8-29] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:41:47.367 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [5bbb6ad8-29] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:41:47.367 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5bbb6ad8-29] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:41:47.368 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:41:47.371 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [8ff858c1-28] Completed 304 NOT_MODIFIED
2025-08-11 16:41:47.371 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 304 NOT_MODIFIED
2025-08-11 16:41:58.474 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ff1b77f3-30] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:41:58.476 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:41:58.477 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ff1b77f3-30] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:41:58.478 [reactor-http-nio-7] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:41:58.479 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ff1b77f3-30] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:41:58.480 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ff1b77f3-30] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:41:58.480 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [ff1b77f3-30] Encoding [CatalogDTO[publicId=f4762dd5-f2aa-454c-88f8-07357466b930, title=Multi-purpose Grinding Power Tool, d (truncated)...]
2025-08-11 16:41:58.481 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ff1b77f3-30] Completed 200 OK
2025-08-11 16:41:58.482 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:42:03.695 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a0e493b0-31] HTTP GET "/favicon.ico"
2025-08-11 16:42:03.696 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:42:03.697 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [a0e493b0-31] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:42:03.698 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [a0e493b0-31] Resource not found
2025-08-11 16:42:03.699 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [a0e493b0-31] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:42:03.699 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:42:03.700 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a0e493b0-31] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:42:03.700 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a0e493b0-31] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:42:03.701 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [a0e493b0-31] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:42:03.701 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a0e493b0-31] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:42:03.702 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:42:13.832 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1661fac0-32] HTTP DELETE "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:42:13.833 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:42:13.833 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [1661fac0-32] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:42:13.834 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:42:13.849 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleting catalog item with public ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:42:13.855 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [1661fac0-32] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 16:42:13.855 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 16:42:13.856 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [1661fac0-32] Using 'application/problem+json' given [application/problem+json] and supported [application/problem+json, text/event-stream]
2025-08-11 16:42:13.856 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [1661fac0-32] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:42:13.856 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [1661fac0-32] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 16:42:13.857 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1661fac0-32] Completed 404 NOT_FOUND
2025-08-11 16:42:13.857 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 16:44:22.714 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 16:44:22.717 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 16:45:08.789 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Starting CatalogControllerTest using Java 21.0.5 with PID 703 (started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:45:08.790 [Test worker] [/] DEBUG c.j.p.c.CatalogControllerTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:45:08.791 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - The following 1 profile is active: "dev"
2025-08-11 16:45:09.839 [Test worker] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:45:09.846 [Test worker] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:45:09.904 [Test worker] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-08-11 16:45:09.932 [Test worker] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:45:09.954 [Test worker] [/] INFO  c.j.p.c.CatalogControllerTest - Started CatalogControllerTest in 1.421 seconds (process running for 2.151)
2025-08-11 16:45:09.996 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d7e2795] HTTP GET /api/v1/catalogs?page=0&size=10
2025-08-11 16:45:10.008 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ad2badf] HTTP GET "/api/v1/catalogs?page=0&size=10"
2025-08-11 16:45:10.015 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs?page=0&size=10
2025-08-11 16:45:10.019 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ad2badf] Mapped to com.jade.platform.controller.CatalogController#getAllCatalogs(int, int, String, String)
2025-08-11 16:45:10.036 [parallel-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get all Catalogs with pagination: page=0, size=10, sort=null, direction=asc
2025-08-11 16:45:10.075 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ad2badf] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:45:10.075 [parallel-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ad2badf] 0..N [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:45:10.098 [parallel-1] [/] DEBUG org.springframework.web.HttpLogging - [ad2badf] Encoding [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=bccbcf2c-52c6-474a- (truncated)...]
2025-08-11 16:45:10.107 [parallel-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ad2badf] Completed 200 OK
2025-08-11 16:45:10.108 [parallel-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:45:10.109 [parallel-1] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d7e2795] [56c03cf1] Response 200 OK
2025-08-11 16:45:10.147 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6d7e2795] [56c03cf1] Decoded [CatalogDTO[publicId=null, title=Catalog 1, description=Description 1, industryId=bccbcf2c-52c6-474a- (truncated)...]
2025-08-11 16:45:10.147 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [ad2badf] Encoding [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=bccbcf2c-52c6-474a- (truncated)...]
2025-08-11 16:45:10.148 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [6d7e2795] [56c03cf1] Decoded [CatalogDTO[publicId=null, title=Catalog 2, description=Description 2, industryId=bccbcf2c-52c6-474a- (truncated)...]
2025-08-11 16:45:10.163 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [46fa2a7e] HTTP DELETE /api/v1/catalogs/7f765b2a-56d2-4e43-9227-4adb88d4f0e1
2025-08-11 16:45:10.164 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [54e32ad5] HTTP DELETE "/api/v1/catalogs/7f765b2a-56d2-4e43-9227-4adb88d4f0e1"
2025-08-11 16:45:10.164 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE /api/v1/catalogs/7f765b2a-56d2-4e43-9227-4adb88d4f0e1
2025-08-11 16:45:10.164 [parallel-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [54e32ad5] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:45:10.165 [parallel-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 7f765b2a-56d2-4e43-9227-4adb88d4f0e1
2025-08-11 16:45:10.166 [parallel-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [54e32ad5] Completed 204 NO_CONTENT
2025-08-11 16:45:10.167 [parallel-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 16:45:10.167 [parallel-2] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [46fa2a7e] [220c0a1f] Response 204 NO_CONTENT
2025-08-11 16:45:10.172 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dd66ff5] HTTP POST /api/v1/catalogs
2025-08-11 16:45:10.179 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [3dd66ff5] Encoding [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 16:45:10.180 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [248509f8] HTTP POST "/api/v1/catalogs"
2025-08-11 16:45:10.181 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST /api/v1/catalogs
2025-08-11 16:45:10.181 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [248509f8] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 16:45:10.182 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [248509f8] Content-Type:application/json
2025-08-11 16:45:10.184 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [248509f8] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 16:45:10.191 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [248509f8] Decoded [CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validat (truncated)...]
2025-08-11 16:45:10.227 [parallel-3] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Test Catalog, description=Test Description with sufficient length for validation, industryId=d89691c9-dc97-48f5-a415-4e6b426b3bd7, industryName=Test Industry, categories=[Category1, Category2], tags=[Tag1, Tag2], price=99.99, merchantId=e2f1af33-8ae2-4313-b147-9030c461c3ea, rating=4.5, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 16:45:10.228 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [248509f8] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:45:10.228 [parallel-3] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [248509f8] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:45:10.228 [parallel-3] [/] DEBUG org.springframework.web.HttpLogging - [248509f8] Encoding [CatalogDTO[publicId=ddf95fac-d917-4597-a4eb-f7b8e14357a0, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 16:45:10.229 [parallel-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [248509f8] Completed 201 CREATED
2025-08-11 16:45:10.229 [parallel-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 16:45:10.230 [parallel-3] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dd66ff5] [7d640734] Response 201 CREATED
2025-08-11 16:45:10.231 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [3dd66ff5] [7d640734] Decoded [CatalogDTO[publicId=ddf95fac-d917-4597-a4eb-f7b8e14357a0, title=Test Catalog, description=Test Descr (truncated)...]
2025-08-11 16:45:10.235 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b3bb287] HTTP GET /api/v1/catalogs/5d0a0f8d-b95e-4375-bf98-db99af6cbade
2025-08-11 16:45:10.236 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5e2d528c] HTTP GET "/api/v1/catalogs/5d0a0f8d-b95e-4375-bf98-db99af6cbade"
2025-08-11 16:45:10.236 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET /api/v1/catalogs/5d0a0f8d-b95e-4375-bf98-db99af6cbade
2025-08-11 16:45:10.237 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [5e2d528c] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:45:10.237 [parallel-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 5d0a0f8d-b95e-4375-bf98-db99af6cbade
2025-08-11 16:45:10.238 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5e2d528c] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:45:10.239 [parallel-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [5e2d528c] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:45:10.239 [parallel-4] [/] DEBUG org.springframework.web.HttpLogging - [5e2d528c] Encoding [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=f3cba3c1-2fa7 (truncated)...]
2025-08-11 16:45:10.239 [parallel-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [5e2d528c] Completed 200 OK
2025-08-11 16:45:10.239 [parallel-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:45:10.239 [parallel-4] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b3bb287] [71f8524d] Response 200 OK
2025-08-11 16:45:10.241 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [1b3bb287] [71f8524d] Decoded [CatalogDTO[publicId=null, title=Test Catalog, description=Test Description, industryId=f3cba3c1-2fa7 (truncated)...]
2025-08-11 16:45:10.244 [Test worker] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28cf179c] HTTP PUT /api/v1/catalogs/f71062d5-0586-4131-acb5-d02df3b84b65
2025-08-11 16:45:10.245 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [28cf179c] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:45:10.245 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2e8f328b] HTTP PUT "/api/v1/catalogs/f71062d5-0586-4131-acb5-d02df3b84b65"
2025-08-11 16:45:10.246 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: PUT /api/v1/catalogs/f71062d5-0586-4131-acb5-d02df3b84b65
2025-08-11 16:45:10.246 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2e8f328b] Mapped to com.jade.platform.controller.CatalogController#updateCatalog(UUID, CatalogDTO)
2025-08-11 16:45:10.247 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2e8f328b] Content-Type:application/json
2025-08-11 16:45:10.247 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [2e8f328b] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:45:10.248 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2e8f328b] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:45:10.255 [parallel-5] [/] DEBUG c.j.p.controller.CatalogController - REST request to update Catalog with ID: f71062d5-0586-4131-acb5-d02df3b84b65
2025-08-11 16:45:10.256 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2e8f328b] Using 'application/json' given [*/*] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:45:10.256 [parallel-5] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2e8f328b] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:45:10.256 [parallel-5] [/] DEBUG org.springframework.web.HttpLogging - [2e8f328b] Encoding [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:45:10.257 [parallel-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2e8f328b] Completed 200 OK
2025-08-11 16:45:10.257 [parallel-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: null
2025-08-11 16:45:10.257 [parallel-5] [/] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28cf179c] [639c3ab8] Response 200 OK
2025-08-11 16:45:10.258 [Test worker] [/] DEBUG org.springframework.web.HttpLogging - [28cf179c] [639c3ab8] Decoded [CatalogDTO[publicId=null, title=Updated Catalog, description=Updated Description with sufficient len (truncated)...]
2025-08-11 16:46:39.966 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 803 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 16:46:39.967 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 16:46:39.968 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 16:46:40.763 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 16:46:40.848 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 1 R2DBC repository interface.
2025-08-11 16:46:41.255 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 16:46:41.315 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 16:46:41.411 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 16:46:41.577 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 16:46:41.866 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 16:46:41.883 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 16:46:41.996 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 16:46:42.027 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 16:46:42.068 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 16:46:42.399 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 16:46:42.660 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:46:42.702 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 16:46:42.703 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 16:46:42.707 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 16:46:42.708 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 16:46:44.319 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 16:46:44.381 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 16:46:44.390 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 4.753 seconds (process running for 5.239)
2025-08-11 16:46:44.392 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 16:46:44.575 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 52 catalog items, skipping initialization
2025-08-11 16:46:44.575 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 16:46:55.907 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b42913b7-1] HTTP GET "/"
2025-08-11 16:46:55.917 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/
2025-08-11 16:46:55.924 [reactor-http-nio-2] [/] DEBUG o.s.w.r.f.s.s.RouterFunctionMapping - [b42913b7-1] Mapped to org.springframework.boot.autoconfigure.web.reactive.WelcomePageRouterFunctionFactory$$Lambda/0x000000b001730e18@5a150ade
2025-08-11 16:46:55.939 [boundedElastic-1] [/] DEBUG org.springframework.web.HttpLogging - [b42913b7-1] Zero-copy [class path resource [static/index.html]]
2025-08-11 16:46:55.946 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b42913b7-1] Completed 200 OK
2025-08-11 16:46:55.949 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:46:56.366 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b42913b7-2] HTTP GET "/openapi.yaml"
2025-08-11 16:46:56.368 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/openapi.yaml
2025-08-11 16:46:56.373 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [b42913b7-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:46:56.378 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [981f47d7-3] HTTP GET "/favicon.ico"
2025-08-11 16:46:56.379 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:46:56.380 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [981f47d7-3] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:46:56.381 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [981f47d7-3] Resource not found
2025-08-11 16:46:56.383 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [981f47d7-3] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:46:56.384 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:46:56.387 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b42913b7-2] Completed 304 NOT_MODIFIED
2025-08-11 16:46:56.389 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 304 NOT_MODIFIED
2025-08-11 16:46:56.397 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [981f47d7-3] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:46:56.398 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [981f47d7-3] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:46:56.404 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [981f47d7-3] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:46:56.412 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [981f47d7-3] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:46:56.412 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:46:56.558 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [981f47d7-4] HTTP GET "/favicon.ico"
2025-08-11 16:46:56.559 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:46:56.559 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [981f47d7-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:46:56.560 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [981f47d7-4] Resource not found
2025-08-11 16:46:56.560 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [981f47d7-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:46:56.560 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:46:56.561 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [981f47d7-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:46:56.561 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [981f47d7-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:46:56.561 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [981f47d7-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:46:56.562 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [981f47d7-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:46:56.562 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:00.712 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a349d057-5] HTTP GET "/favicon.ico"
2025-08-11 16:47:00.713 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:00.713 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [a349d057-5] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:00.714 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [a349d057-5] Resource not found
2025-08-11 16:47:00.714 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [a349d057-5] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:00.714 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:00.715 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a349d057-5] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:00.715 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a349d057-5] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:00.715 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a349d057-5] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:00.716 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a349d057-5] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:00.716 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:03.919 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a349d057-6] HTTP GET "/favicon.ico"
2025-08-11 16:47:03.920 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:03.922 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [a349d057-6] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:03.922 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [a349d057-6] Resource not found
2025-08-11 16:47:03.923 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [a349d057-6] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:03.923 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:03.923 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a349d057-6] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:03.924 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a349d057-6] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:03.924 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [a349d057-6] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:03.925 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a349d057-6] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:03.925 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:06.747 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [488549b5-7] HTTP GET "/favicon.ico"
2025-08-11 16:47:06.748 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:06.749 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [488549b5-7] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:06.749 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [488549b5-7] Resource not found
2025-08-11 16:47:06.749 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [488549b5-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:06.750 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:06.750 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [488549b5-7] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:06.750 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [488549b5-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:06.751 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [488549b5-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:06.751 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [488549b5-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:06.752 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:12.118 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a34281c5-8] HTTP GET "/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930"
2025-08-11 16:47:12.119 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:47:12.121 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [a34281c5-8] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:47:12.130 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: f4762dd5-f2aa-454c-88f8-07357466b930
2025-08-11 16:47:12.142 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a34281c5-8] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:47:12.142 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a34281c5-8] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:47:12.161 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: f4762dd5-f2aa-454c-88f8-07357466b930 (cache miss)
2025-08-11 16:47:12.220 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [a34281c5-8] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 16:47:12.220 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 16:47:12.220 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a34281c5-8] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:47:12.220 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a34281c5-8] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:12.220 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [a34281c5-8] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:12.221 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [a34281c5-8] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 16:47:12.221 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a34281c5-8] Completed 404 NOT_FOUND
2025-08-11 16:47:12.221 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 16:47:28.851 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [860984cb-9] HTTP GET "/favicon.ico"
2025-08-11 16:47:28.852 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:28.853 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [860984cb-9] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:28.854 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [860984cb-9] Resource not found
2025-08-11 16:47:28.854 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [860984cb-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:28.854 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:28.855 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [860984cb-9] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:28.855 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [860984cb-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:28.856 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [860984cb-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:28.857 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [860984cb-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:28.857 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:31.591 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [77598fd3-10] HTTP GET "/favicon.ico"
2025-08-11 16:47:31.592 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:31.593 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [77598fd3-10] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:31.594 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [77598fd3-10] Resource not found
2025-08-11 16:47:31.594 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [77598fd3-10] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:31.594 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:31.595 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [77598fd3-10] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:31.595 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [77598fd3-10] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:31.595 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [77598fd3-10] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:31.596 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [77598fd3-10] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:31.596 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:33.820 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [77598fd3-11] HTTP GET "/favicon.ico"
2025-08-11 16:47:33.821 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:33.822 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [77598fd3-11] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:33.824 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [77598fd3-11] Resource not found
2025-08-11 16:47:33.824 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [77598fd3-11] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:33.824 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:33.825 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [77598fd3-11] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:33.825 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [77598fd3-11] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:33.825 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [77598fd3-11] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:33.826 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [77598fd3-11] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:33.826 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:38.298 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b6fa006-12] HTTP GET "/favicon.ico"
2025-08-11 16:47:38.299 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:38.299 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [2b6fa006-12] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:38.300 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [2b6fa006-12] Resource not found
2025-08-11 16:47:38.300 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [2b6fa006-12] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:38.300 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:38.301 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2b6fa006-12] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:38.301 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2b6fa006-12] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:38.301 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [2b6fa006-12] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:38.302 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b6fa006-12] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:38.302 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:39.092 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b6fa006-13] HTTP GET "/favicon.ico"
2025-08-11 16:47:39.093 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:39.094 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [2b6fa006-13] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:39.095 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [2b6fa006-13] Resource not found
2025-08-11 16:47:39.096 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [2b6fa006-13] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:39.096 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:39.097 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2b6fa006-13] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:39.097 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [2b6fa006-13] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:39.097 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [2b6fa006-13] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:39.098 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2b6fa006-13] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:39.099 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:41.107 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9e1f899e-14] HTTP GET "/favicon.ico"
2025-08-11 16:47:41.108 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:47:41.108 [reactor-http-nio-10] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [9e1f899e-14] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:47:41.109 [reactor-http-nio-10] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [9e1f899e-14] Resource not found
2025-08-11 16:47:41.109 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [9e1f899e-14] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:47:41.109 [reactor-http-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:47:41.109 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9e1f899e-14] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:47:41.110 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9e1f899e-14] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:47:41.110 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [9e1f899e-14] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:47:41.110 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9e1f899e-14] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:47:41.110 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:00.768 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [58fec253-15] HTTP GET "/api/v1/catalogs/filter/paged?page=p&size=10&sort=createdOn&direction=DESC"
2025-08-11 16:48:00.770 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=p&size=10&sort=createdOn&direction=DESC
2025-08-11 16:48:00.771 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [58fec253-15] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 16:48:00.797 [reactor-http-nio-1] [/] DEBUG o.s.web.method.HandlerMethod - [58fec253-15] Could not resolve parameter [13] in reactor.core.publisher.Mono<com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>> com.jade.platform.controller.CatalogController.filterCatalogsPaged(java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.math.BigDecimal,java.math.BigDecimal,java.util.UUID,java.lang.Double,java.lang.Double,com.jade.platform.domain.enums.ComplianceStatus,com.jade.platform.domain.enums.AvailabilityStatus,int,int,java.lang.String,java.lang.String): 400 BAD_REQUEST "Type mismatch."
2025-08-11 16:48:00.798 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [58fec253-15] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:48:00.798 [reactor-http-nio-1] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.server.ServerWebInputException: 400 BAD_REQUEST "Type mismatch."
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.applyConversion(AbstractNamedValueArgumentResolver.java:216)
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.lambda$resolveArgument$0(AbstractNamedValueArgumentResolver.java:117)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:153)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoZip$ZipCoordinator.request(MonoZip.java:220)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onSubscribe(MonoIgnoreThen.java:135)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:121)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.request(MonoPeekTerminal.java:139)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; For input string: "p"
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:867)
	at org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.applyConversion(AbstractNamedValueArgumentResolver.java:209)
	... 82 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "p"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.valueOf(Integer.java:989)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:201)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	... 85 common frames omitted
2025-08-11 16:48:00.799 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [58fec253-15] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 16:48:00.799 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [58fec253-15] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 16:48:00.799 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [58fec253-15] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:48:00.799 [reactor-http-nio-1] [/] DEBUG org.springframework.web.HttpLogging - [58fec253-15] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:48:00.800 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [58fec253-15] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:00.800 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:30.005 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [891fbf73-16] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 16:48:30.012 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 16:48:30.018 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [891fbf73-16] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 16:48:30.038 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 16:48:30.060 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [891fbf73-16] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:48:30.060 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [891fbf73-16] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 16:48:30.073 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:48:30.089 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:48:30.091 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@396f242a
2025-08-11 16:48:30.103 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@96be50f
2025-08-11 16:48:30.156 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 16:48:30.157 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 52
2025-08-11 16:48:30.166 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [891fbf73-16] Encoding [PageResponse[content=[CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and (truncated)...]
2025-08-11 16:48:30.172 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [891fbf73-16] Completed 200 OK
2025-08-11 16:48:30.172 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:48:41.271 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-17] HTTP GET "/favicon.ico"
2025-08-11 16:48:41.273 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:48:41.277 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bbd1650c-17] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:48:41.294 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bbd1650c-17] Resource not found
2025-08-11 16:48:41.299 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bbd1650c-17] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:48:41.300 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:48:41.308 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-17] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:48:41.308 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-17] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:48:41.309 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [bbd1650c-17] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:48:41.314 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-17] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:41.314 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:42.520 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-18] HTTP GET "/favicon.ico"
2025-08-11 16:48:42.522 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:48:42.524 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bbd1650c-18] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:48:42.525 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bbd1650c-18] Resource not found
2025-08-11 16:48:42.526 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bbd1650c-18] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:48:42.526 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:48:42.529 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-18] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:48:42.529 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-18] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:48:42.529 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [bbd1650c-18] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:48:42.532 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-18] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:42.533 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:43.847 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-19] HTTP GET "/favicon.ico"
2025-08-11 16:48:43.847 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:48:43.848 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bbd1650c-19] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:48:43.849 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bbd1650c-19] Resource not found
2025-08-11 16:48:43.849 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bbd1650c-19] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:48:43.849 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:48:43.850 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-19] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:48:43.850 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bbd1650c-19] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:48:43.850 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [bbd1650c-19] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:48:43.851 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bbd1650c-19] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:43.851 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:49.093 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [08b5067a-20] HTTP GET "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 16:48:49.094 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:49.095 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [08b5067a-20] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:48:49.097 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:49.099 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [08b5067a-20] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:48:49.099 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [08b5067a-20] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:48:49.112 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 882baf7d-dd94-4867-926f-88b846f51614 (cache miss)
2025-08-11 16:48:49.133 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:49.142 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [08b5067a-20] Encoding [CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and Wellness, description (truncated)...]
2025-08-11 16:48:49.143 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [08b5067a-20] Completed 200 OK
2025-08-11 16:48:49.143 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:48:53.800 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6f86f3af-21] HTTP GET "/favicon.ico"
2025-08-11 16:48:53.800 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:48:53.801 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [6f86f3af-21] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:48:53.801 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [6f86f3af-21] Resource not found
2025-08-11 16:48:53.801 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [6f86f3af-21] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:48:53.801 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:48:53.804 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6f86f3af-21] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:48:53.804 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [6f86f3af-21] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:48:53.804 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [6f86f3af-21] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:48:53.805 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [6f86f3af-21] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:53.805 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:48:58.874 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1007e57a-22] HTTP DELETE "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 16:48:58.878 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:58.878 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [1007e57a-22] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 16:48:58.883 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:58.887 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleting catalog item with public ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:58.902 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleted catalog item with public ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:48:58.905 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [1007e57a-22] Completed 204 NO_CONTENT
2025-08-11 16:48:58.906 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 16:49:03.212 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f201f4e5-23] HTTP GET "/favicon.ico"
2025-08-11 16:49:03.213 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:03.214 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [f201f4e5-23] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:03.214 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [f201f4e5-23] Resource not found
2025-08-11 16:49:03.214 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [f201f4e5-23] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:03.215 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:03.215 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f201f4e5-23] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:03.215 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [f201f4e5-23] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:03.215 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [f201f4e5-23] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:03.216 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f201f4e5-23] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:03.216 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:05.063 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-24] HTTP GET "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 16:49:05.064 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:49:05.065 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [03579e01-24] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:49:05.065 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:49:05.067 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [03579e01-24] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:49:05.067 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [03579e01-24] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:49:05.068 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [03579e01-24] Encoding [CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and Wellness, description (truncated)...]
2025-08-11 16:49:05.068 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-24] Completed 200 OK
2025-08-11 16:49:05.069 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:49:07.487 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-25] HTTP GET "/favicon.ico"
2025-08-11 16:49:07.489 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:07.490 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [03579e01-25] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:07.491 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [03579e01-25] Resource not found
2025-08-11 16:49:07.491 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [03579e01-25] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:07.491 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:07.491 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-25] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:07.491 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-25] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:07.492 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [03579e01-25] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:07.492 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-25] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:07.492 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:08.183 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-26] HTTP GET "/favicon.ico"
2025-08-11 16:49:08.185 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:08.188 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [03579e01-26] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:08.189 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [03579e01-26] Resource not found
2025-08-11 16:49:08.190 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [03579e01-26] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:08.190 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:08.191 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-26] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:08.191 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-26] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:08.192 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [03579e01-26] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:08.192 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-26] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:08.193 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:08.786 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-27] HTTP GET "/favicon.ico"
2025-08-11 16:49:08.786 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:08.787 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [03579e01-27] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:08.787 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [03579e01-27] Resource not found
2025-08-11 16:49:08.788 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [03579e01-27] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:08.788 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:08.788 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-27] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:08.789 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [03579e01-27] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:08.789 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [03579e01-27] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:08.790 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [03579e01-27] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:08.791 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:09.444 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-28] HTTP GET "/favicon.ico"
2025-08-11 16:49:09.445 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:09.446 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [ab450e2a-28] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:09.447 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [ab450e2a-28] Resource not found
2025-08-11 16:49:09.447 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ab450e2a-28] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:09.447 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:09.447 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-28] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:09.448 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-28] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:09.448 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [ab450e2a-28] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:09.448 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-28] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:09.448 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:09.749 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-29] HTTP GET "/favicon.ico"
2025-08-11 16:49:09.749 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:09.750 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [ab450e2a-29] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:09.751 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [ab450e2a-29] Resource not found
2025-08-11 16:49:09.752 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ab450e2a-29] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:09.752 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:09.752 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-29] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:09.753 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-29] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:09.753 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [ab450e2a-29] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:09.753 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-29] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:09.753 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:10.964 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-30] HTTP GET "/favicon.ico"
2025-08-11 16:49:10.965 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:49:10.965 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [ab450e2a-30] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:49:10.966 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [ab450e2a-30] Resource not found
2025-08-11 16:49:10.966 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ab450e2a-30] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:49:10.966 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:49:10.969 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-30] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:49:10.969 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ab450e2a-30] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:49:10.969 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [ab450e2a-30] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:49:10.970 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ab450e2a-30] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:10.970 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:49:16.970 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2079aa8c-31] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 16:49:16.971 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 16:49:16.973 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [2079aa8c-31] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 16:49:16.979 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 16:49:16.981 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2079aa8c-31] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:49:16.982 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [2079aa8c-31] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 16:49:16.992 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:49:16.992 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:49:16.992 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@4139778b
2025-08-11 16:49:16.993 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@96be50f
2025-08-11 16:49:17.008 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 16:49:17.008 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 51
2025-08-11 16:49:17.011 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [2079aa8c-31] Encoding [PageResponse[content=[CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health N (truncated)...]
2025-08-11 16:49:17.012 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [2079aa8c-31] Completed 200 OK
2025-08-11 16:49:17.012 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:55:28.359 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a0fac774-32] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 16:55:28.366 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 16:55:28.369 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [a0fac774-32] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 16:55:28.373 [reactor-http-nio-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 16:55:28.375 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a0fac774-32] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:55:28.375 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [a0fac774-32] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 16:55:28.387 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:55:28.387 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 16:55:28.388 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@722f880a
2025-08-11 16:55:28.388 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@96be50f
2025-08-11 16:55:28.400 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 16:55:28.400 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 51
2025-08-11 16:55:28.402 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [a0fac774-32] Encoding [PageResponse[content=[CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health N (truncated)...]
2025-08-11 16:55:28.404 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [a0fac774-32] Completed 200 OK
2025-08-11 16:55:28.404 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 16:55:32.080 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42e363ec-33] HTTP GET "/favicon.ico"
2025-08-11 16:55:32.081 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:55:32.108 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [42e363ec-33] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:55:32.114 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [42e363ec-33] Resource not found
2025-08-11 16:55:32.115 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [42e363ec-33] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:55:32.115 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:55:32.117 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [42e363ec-33] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:55:32.117 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [42e363ec-33] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:55:32.117 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [42e363ec-33] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:55:32.118 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42e363ec-33] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:32.118 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:33.552 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42e363ec-34] HTTP GET "/favicon.ico"
2025-08-11 16:55:33.553 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:55:33.554 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [42e363ec-34] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:55:33.555 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [42e363ec-34] Resource not found
2025-08-11 16:55:33.555 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [42e363ec-34] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:55:33.555 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:55:33.556 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [42e363ec-34] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:55:33.556 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [42e363ec-34] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:55:33.556 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [42e363ec-34] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:55:33.557 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [42e363ec-34] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:33.557 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:37.829 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9b89e07e-35] HTTP GET "/favicon.ico"
2025-08-11 16:55:37.831 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 16:55:37.832 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [9b89e07e-35] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 16:55:37.833 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [9b89e07e-35] Resource not found
2025-08-11 16:55:37.833 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [9b89e07e-35] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 16:55:37.833 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 16:55:37.833 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9b89e07e-35] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 16:55:37.833 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [9b89e07e-35] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 16:55:37.834 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [9b89e07e-35] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 16:55:37.834 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [9b89e07e-35] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:37.834 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 16:55:40.551 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f387efc4-36] HTTP GET "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 16:55:40.552 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:55:40.552 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f387efc4-36] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 16:55:40.553 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 16:55:40.555 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f387efc4-36] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 16:55:40.555 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f387efc4-36] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 16:55:40.555 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [f387efc4-36] Encoding [CatalogDTO[publicId=882baf7d-dd94-4867-926f-88b846f51614, title=Gut Health and Wellness, description (truncated)...]
2025-08-11 16:55:40.557 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f387efc4-36] Completed 200 OK
2025-08-11 16:55:40.557 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:02:02.532 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 17:02:02.547 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-08-11 17:02:07.431 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 1633 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 17:02:07.432 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 17:02:07.432 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 17:02:08.004 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 17:02:08.087 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 1 R2DBC repository interface.
2025-08-11 17:02:08.489 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 17:02:08.495 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
2025-08-11 17:02:08.504 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 17:02:08.513 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:200)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 34 common frames omitted
Caused by: java.lang.IllegalStateException: refreshAfterWrite requires a LoadingCache
	at com.github.benmanes.caffeine.cache.Caffeine.requireState(Caffeine.java:212)
	at com.github.benmanes.caffeine.cache.Caffeine.requireNonLoadingCache(Caffeine.java:1207)
	at com.github.benmanes.caffeine.cache.Caffeine.buildAsync(Caffeine.java:1140)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createAsyncCaffeineCache(CaffeineCacheManager.java:391)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createCaffeineCache(CaffeineCacheManager.java:357)
	at org.springframework.cache.caffeine.CaffeineCacheManager.refreshCommonCaches(CaffeineCacheManager.java:400)
	at org.springframework.cache.caffeine.CaffeineCacheManager.doSetCaffeine(CaffeineCacheManager.java:157)
	at org.springframework.cache.caffeine.CaffeineCacheManager.setCaffeine(CaffeineCacheManager.java:130)
	at com.jade.platform.config.CacheConfig.cacheManager(CacheConfig.java:68)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.CGLIB$cacheManager$0(<generated>)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:400)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.cacheManager(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	... 37 common frames omitted
2025-08-11 17:03:04.798 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 1668 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 17:03:04.799 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 17:03:04.799 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 17:03:05.442 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 17:03:05.535 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 1 R2DBC repository interface.
2025-08-11 17:03:05.931 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 17:03:05.937 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
2025-08-11 17:03:05.946 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 17:03:05.955 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:200)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 34 common frames omitted
Caused by: java.lang.IllegalStateException: refreshAfterWrite requires a LoadingCache
	at com.github.benmanes.caffeine.cache.Caffeine.requireState(Caffeine.java:212)
	at com.github.benmanes.caffeine.cache.Caffeine.requireNonLoadingCache(Caffeine.java:1207)
	at com.github.benmanes.caffeine.cache.Caffeine.buildAsync(Caffeine.java:1140)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createAsyncCaffeineCache(CaffeineCacheManager.java:391)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createCaffeineCache(CaffeineCacheManager.java:357)
	at org.springframework.cache.caffeine.CaffeineCacheManager.refreshCommonCaches(CaffeineCacheManager.java:400)
	at org.springframework.cache.caffeine.CaffeineCacheManager.doSetCaffeine(CaffeineCacheManager.java:157)
	at org.springframework.cache.caffeine.CaffeineCacheManager.setCaffeine(CaffeineCacheManager.java:130)
	at com.jade.platform.config.CacheConfig.cacheManager(CacheConfig.java:68)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.CGLIB$cacheManager$0(<generated>)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:400)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.cacheManager(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	... 37 common frames omitted
2025-08-11 17:15:26.300 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 2125 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 17:15:26.302 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 17:15:26.302 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 17:15:26.948 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 17:15:27.025 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 1 R2DBC repository interface.
2025-08-11 17:15:27.429 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 17:15:27.434 [main] [/] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
2025-08-11 17:15:27.442 [main] [/] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 17:15:27.451 [main] [/] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheMetricsEndpoint' defined in file [/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main/com/jade/platform/config/CacheMetricsEndpoint.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.jade.platform.UserServiceApplication.main(UserServiceApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in class path resource [com/jade/platform/config/CacheConfig.class]: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception with message: refreshAfterWrite requires a LoadingCache
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:200)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 34 common frames omitted
Caused by: java.lang.IllegalStateException: refreshAfterWrite requires a LoadingCache
	at com.github.benmanes.caffeine.cache.Caffeine.requireState(Caffeine.java:212)
	at com.github.benmanes.caffeine.cache.Caffeine.requireNonLoadingCache(Caffeine.java:1207)
	at com.github.benmanes.caffeine.cache.Caffeine.buildAsync(Caffeine.java:1140)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createAsyncCaffeineCache(CaffeineCacheManager.java:391)
	at org.springframework.cache.caffeine.CaffeineCacheManager.createCaffeineCache(CaffeineCacheManager.java:357)
	at org.springframework.cache.caffeine.CaffeineCacheManager.refreshCommonCaches(CaffeineCacheManager.java:400)
	at org.springframework.cache.caffeine.CaffeineCacheManager.doSetCaffeine(CaffeineCacheManager.java:157)
	at org.springframework.cache.caffeine.CaffeineCacheManager.setCaffeine(CaffeineCacheManager.java:130)
	at com.jade.platform.config.CacheConfig.cacheManager(CacheConfig.java:69)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.CGLIB$cacheManager$0(<generated>)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:400)
	at com.jade.platform.config.CacheConfig$$SpringCGLIB$$0.cacheManager(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	... 37 common frames omitted
2025-08-11 17:22:29.344 [main] [/] INFO  c.j.platform.UserServiceApplication - Starting UserServiceApplication using Java 21.0.5 with PID 2446 (/Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform/build/classes/java/main started by josleke in /Users/josleke/Downloads/ThamaniInvest/Sabi/lab/booking_platform)
2025-08-11 17:22:29.346 [main] [/] DEBUG c.j.platform.UserServiceApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-11 17:22:29.346 [main] [/] INFO  c.j.platform.UserServiceApplication - The following 1 profile is active: "dev"
2025-08-11 17:22:30.203 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-08-11 17:22:30.290 [main] [/] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 1 R2DBC repository interface.
2025-08-11 17:22:30.717 [main] [/] INFO  c.jade.platform.config.CacheConfig - Configuring cache manager with Caffeine
2025-08-11 17:22:30.776 [main] [/] INFO  c.j.p.c.ConnectionPoolMetricsEndpoint - Connection pool metrics endpoint initialized
2025-08-11 17:22:30.868 [main] [/] INFO  c.jade.platform.config.MetricsConfig - Configuring metrics with application name: booking-platform, environment: [dev]
2025-08-11 17:22:31.032 [main] [/] INFO  c.j.p.config.ServiceMetricsAspect - Service metrics aspect initialized
2025-08-11 17:22:31.344 [main] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
2025-08-11 17:22:31.362 [main] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 17:22:31.471 [main] [/] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-08-11 17:22:31.498 [main] [/] DEBUG o.s.w.r.r.m.a.ControllerMethodResolver - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 2 @ExceptionHandler
2025-08-11 17:22:31.535 [main] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 17:22:31.841 [main] [/] INFO  liquibase.database - Set default schema name to public
2025-08-11 17:22:32.114 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 17:22:32.151 [main] [/] INFO  liquibase.ui - Database is up to date, no changesets to execute
2025-08-11 17:22:32.152 [main] [/] INFO  liquibase.changelog - Reading from public.databasechangelog
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - UPDATE SUMMARY
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - Run:                          0
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - Previously run:               2
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - Filtered out:                 0
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - -------------------------------
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - Total change sets:            2
2025-08-11 17:22:32.156 [main] [/] INFO  liquibase.util - Update summary generated
2025-08-11 17:22:32.157 [main] [/] INFO  liquibase.command - Command execution complete
2025-08-11 17:22:33.771 [main] [/] WARN  i.m.core.instrument.MeterRegistry - This Gauge has been already registered (MeterId{name='jvm.buffer.count', tags=[tag(application=booking-platform),tag(environment=[dev]),tag(id=mapped)]}), the registration will be ignored. Note that subsequent logs will be logged at debug level.
2025-08-11 17:22:33.841 [main] [/] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 9000 (http)
2025-08-11 17:22:33.850 [main] [/] INFO  c.j.platform.UserServiceApplication - Started UserServiceApplication in 5.05 seconds (process running for 5.368)
2025-08-11 17:22:33.852 [main] [/] INFO  c.j.platform.config.DataInitializer - Starting sample data initialization...
2025-08-11 17:22:34.033 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Database already contains 51 catalog items, skipping initialization
2025-08-11 17:22:34.033 [reactor-tcp-nio-1] [/] INFO  c.j.platform.config.DataInitializer - Sample data initialization completed
2025-08-11 17:22:48.154 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d8f4751d-1] HTTP GET "/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614"
2025-08-11 17:22:48.172 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 17:22:48.178 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [d8f4751d-1] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:22:48.190 [reactor-http-nio-2] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 882baf7d-dd94-4867-926f-88b846f51614
2025-08-11 17:22:48.205 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d8f4751d-1] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:22:48.205 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [d8f4751d-1] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:22:48.225 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 882baf7d-dd94-4867-926f-88b846f51614 (cache miss)
2025-08-11 17:22:48.263 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [d8f4751d-1] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 17:22:48.264 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 17:22:48.269 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d8f4751d-1] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 17:22:48.270 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d8f4751d-1] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 17:22:48.270 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [d8f4751d-1] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:22:48.274 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [d8f4751d-1] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 17:22:48.282 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [d8f4751d-1] Completed 404 NOT_FOUND
2025-08-11 17:22:48.285 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 17:22:53.276 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b1dea84e-2] HTTP GET "/favicon.ico"
2025-08-11 17:22:53.277 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:22:53.287 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [b1dea84e-2] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:22:53.289 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [b1dea84e-2] Resource not found
2025-08-11 17:22:53.290 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [b1dea84e-2] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:22:53.290 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:22:53.293 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b1dea84e-2] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:22:53.293 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [b1dea84e-2] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:22:53.293 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [b1dea84e-2] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:22:53.294 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [b1dea84e-2] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:22:53.294 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:22:58.504 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0b870cbb-3] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 17:22:58.505 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 17:22:58.506 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [0b870cbb-3] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 17:22:58.516 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 17:22:58.521 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0b870cbb-3] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:22:58.521 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [0b870cbb-3] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 17:22:58.525 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 17:22:58.533 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 17:22:58.533 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@571e7bb3
2025-08-11 17:22:58.536 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@1366952
2025-08-11 17:22:58.561 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 17:22:58.561 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 51
2025-08-11 17:22:58.573 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [0b870cbb-3] Encoding [PageResponse[content=[CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health N (truncated)...]
2025-08-11 17:22:58.578 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0b870cbb-3] Completed 200 OK
2025-08-11 17:22:58.579 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:23:13.111 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [26719dd5-4] HTTP GET "/favicon.ico"
2025-08-11 17:23:13.114 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:23:13.115 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [26719dd5-4] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:23:13.116 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [26719dd5-4] Resource not found
2025-08-11 17:23:13.118 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [26719dd5-4] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:23:13.118 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:23:13.119 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [26719dd5-4] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:23:13.119 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [26719dd5-4] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:23:13.120 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [26719dd5-4] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:23:13.120 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [26719dd5-4] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:13.121 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:20.212 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6f7a77e-5] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 17:23:20.214 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:20.215 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f6f7a77e-5] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:23:20.216 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:20.218 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6f7a77e-5] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:23:20.218 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6f7a77e-5] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:23:20.230 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 17:23:20.241 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:20.251 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [f6f7a77e-5] Encoding [CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 17:23:20.252 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6f7a77e-5] Completed 200 OK
2025-08-11 17:23:20.253 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:23:22.410 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6f7a77e-6] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 17:23:22.411 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:22.412 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [f6f7a77e-6] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:23:22.413 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:22.435 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6f7a77e-6] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:23:22.435 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [f6f7a77e-6] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:23:22.438 [reactor-http-nio-6] [/] DEBUG org.springframework.web.HttpLogging - [f6f7a77e-6] Encoding [CatalogDTO[publicId=a169b6ad-f275-4f4b-855e-ea43de28b24a, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 17:23:22.439 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [f6f7a77e-6] Completed 200 OK
2025-08-11 17:23:22.439 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:23:26.186 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [493e7792-7] HTTP GET "/favicon.ico"
2025-08-11 17:23:26.186 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:23:26.188 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [493e7792-7] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:23:26.189 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [493e7792-7] Resource not found
2025-08-11 17:23:26.190 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [493e7792-7] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:23:26.190 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:23:26.191 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [493e7792-7] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:23:26.191 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [493e7792-7] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:23:26.191 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [493e7792-7] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:23:26.192 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [493e7792-7] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:26.192 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:30.469 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4152c32d-8] HTTP DELETE "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 17:23:30.470 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: DELETE http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:30.470 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [4152c32d-8] Mapped to com.jade.platform.controller.CatalogController#deleteCatalog(UUID)
2025-08-11 17:23:30.471 [reactor-http-nio-8] [/] DEBUG c.j.p.controller.CatalogController - REST request to delete Catalog with ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:30.479 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleting catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:30.480 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7374ebfb-9] HTTP GET "/favicon.ico"
2025-08-11 17:23:30.480 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:23:30.481 [reactor-http-nio-9] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [7374ebfb-9] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:23:30.482 [reactor-http-nio-9] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [7374ebfb-9] Resource not found
2025-08-11 17:23:30.482 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [7374ebfb-9] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:23:30.483 [reactor-http-nio-9] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:23:30.484 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7374ebfb-9] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:23:30.484 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [7374ebfb-9] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:23:30.484 [reactor-http-nio-9] [/] DEBUG org.springframework.web.HttpLogging - [7374ebfb-9] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:23:30.485 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [7374ebfb-9] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:30.485 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:23:30.505 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Deleted catalog item with public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:23:30.510 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [4152c32d-8] Completed 204 NO_CONTENT
2025-08-11 17:23:30.513 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 204 NO_CONTENT
2025-08-11 17:24:01.734 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bcb51ca6-10] HTTP GET "/favicon.ico"
2025-08-11 17:24:01.741 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:24:01.747 [reactor-http-nio-10] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bcb51ca6-10] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:24:01.748 [reactor-http-nio-10] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bcb51ca6-10] Resource not found
2025-08-11 17:24:01.749 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bcb51ca6-10] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:24:01.749 [reactor-http-nio-10] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:24:01.754 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bcb51ca6-10] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:24:01.754 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bcb51ca6-10] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:24:01.755 [reactor-http-nio-10] [/] DEBUG org.springframework.web.HttpLogging - [bcb51ca6-10] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:24:01.757 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bcb51ca6-10] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:24:01.758 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:24:11.524 [reactor-http-nio-1] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ac5bed42-11] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 17:24:11.531 [reactor-http-nio-1] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:24:11.538 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [ac5bed42-11] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:24:11.543 [reactor-http-nio-1] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:24:11.547 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ac5bed42-11] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:24:11.547 [reactor-http-nio-1] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [ac5bed42-11] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:24:11.562 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 17:24:11.573 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [ac5bed42-11] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 17:24:11.574 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 17:24:11.574 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ac5bed42-11] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 17:24:11.574 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ac5bed42-11] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 17:24:11.574 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [ac5bed42-11] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:24:11.575 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [ac5bed42-11] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 17:24:11.575 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [ac5bed42-11] Completed 404 NOT_FOUND
2025-08-11 17:24:11.575 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 17:25:03.292 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [809c6b12-12] HTTP GET "/favicon.ico"
2025-08-11 17:25:03.296 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:03.301 [reactor-http-nio-2] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [809c6b12-12] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:03.303 [reactor-http-nio-2] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [809c6b12-12] Resource not found
2025-08-11 17:25:03.304 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [809c6b12-12] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:03.304 [reactor-http-nio-2] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:03.309 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [809c6b12-12] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:03.309 [reactor-http-nio-2] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [809c6b12-12] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:03.311 [reactor-http-nio-2] [/] DEBUG org.springframework.web.HttpLogging - [809c6b12-12] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:03.314 [reactor-http-nio-2] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [809c6b12-12] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:03.314 [reactor-http-nio-2] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:06.986 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bc33f0b0-13] HTTP GET "/favicon.ico"
2025-08-11 17:25:06.987 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:06.988 [reactor-http-nio-3] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [bc33f0b0-13] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:06.989 [reactor-http-nio-3] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [bc33f0b0-13] Resource not found
2025-08-11 17:25:06.989 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [bc33f0b0-13] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:06.989 [reactor-http-nio-3] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:06.990 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bc33f0b0-13] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:06.990 [reactor-http-nio-3] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [bc33f0b0-13] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:06.990 [reactor-http-nio-3] [/] DEBUG org.springframework.web.HttpLogging - [bc33f0b0-13] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:06.991 [reactor-http-nio-3] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [bc33f0b0-13] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:06.991 [reactor-http-nio-3] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:26.573 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-14] HTTP POST "/api/v1/catalogs"
2025-08-11 17:25:26.580 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: POST http://localhost:9000/api/v1/catalogs
2025-08-11 17:25:26.581 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [c7db597f-14] Mapped to com.jade.platform.controller.CatalogController#createCatalog(CreateCatalogDto)
2025-08-11 17:25:26.592 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [c7db597f-14] Content-Type:application/json
2025-08-11 17:25:26.631 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestBodyMethodArgumentResolver - [c7db597f-14] 0..1 [com.jade.platform.dto.CreateCatalogDto]
2025-08-11 17:25:26.655 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [c7db597f-14] Decoded [CreateCatalogDto[title=Heart Health Natural Supplement, description=This is a health supplement, ind (truncated)...]
2025-08-11 17:25:26.677 [reactor-http-nio-4] [/] DEBUG c.j.p.controller.CatalogController - REST request to create Catalog: CreateCatalogDto[title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 17:25:26.678 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c7db597f-14] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:25:26.678 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [c7db597f-14] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:25:26.687 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Creating new catalog item: CreateCatalogDto[title=Heart Health Natural Supplement, description=This is a health supplement, industryId=19896c9d-0af0-4000-8b8d-d0b412ecb019, industryName=health, categories=[product], tags=[Cardio Health Gel], price=35000, merchantId=19896c9d-0af0-4000-8a0b-3c2846df2901, rating=3.84, complianceStatus=COMPLIANT, availabilityStatus=AVAILABLE]
2025-08-11 17:25:26.688 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Evicting cache for industry ID: 19896c9d-0af0-4000-8b8d-d0b412ecb019
2025-08-11 17:25:26.724 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Created catalog item with title: Heart Health Natural Supplement
2025-08-11 17:25:26.727 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [c7db597f-14] Encoding [CatalogDTO[publicId=6793e56a-d664-4ca6-8860-32aaf54a6cd3, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 17:25:26.727 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-14] Completed 201 CREATED
2025-08-11 17:25:26.728 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 201 CREATED
2025-08-11 17:25:29.202 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-15] HTTP GET "/favicon.ico"
2025-08-11 17:25:29.208 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:29.210 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [c7db597f-15] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:29.211 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [c7db597f-15] Resource not found
2025-08-11 17:25:29.211 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c7db597f-15] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:29.211 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:29.212 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c7db597f-15] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:29.212 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c7db597f-15] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:29.212 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [c7db597f-15] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:29.213 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-15] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:29.213 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:29.380 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-16] HTTP GET "/favicon.ico"
2025-08-11 17:25:29.383 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:29.385 [reactor-http-nio-4] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [c7db597f-16] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:29.385 [reactor-http-nio-4] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [c7db597f-16] Resource not found
2025-08-11 17:25:29.386 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [c7db597f-16] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:29.386 [reactor-http-nio-4] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:29.387 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c7db597f-16] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:29.387 [reactor-http-nio-4] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [c7db597f-16] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:29.387 [reactor-http-nio-4] [/] DEBUG org.springframework.web.HttpLogging - [c7db597f-16] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:29.388 [reactor-http-nio-4] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [c7db597f-16] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:29.388 [reactor-http-nio-4] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:31.016 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0d95d612-17] HTTP GET "/favicon.ico"
2025-08-11 17:25:31.017 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:31.018 [reactor-http-nio-5] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [0d95d612-17] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:31.018 [reactor-http-nio-5] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [0d95d612-17] Resource not found
2025-08-11 17:25:31.019 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [0d95d612-17] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:31.019 [reactor-http-nio-5] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:31.019 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0d95d612-17] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:31.019 [reactor-http-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [0d95d612-17] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:31.020 [reactor-http-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [0d95d612-17] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:31.020 [reactor-http-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [0d95d612-17] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:31.021 [reactor-http-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:38.113 [reactor-http-nio-6] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [100a263c-18] HTTP GET "/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC"
2025-08-11 17:25:38.114 [reactor-http-nio-6] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/filter/paged?page=0&size=10&sort=createdOn&direction=DESC
2025-08-11 17:25:38.115 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [100a263c-18] Mapped to com.jade.platform.controller.CatalogController#filterCatalogsPaged(String, String, UUID, String, List, List, BigDecimal, BigDecimal, UUID, Double, Double, ComplianceStatus, AvailabilityStatus, int, int, String, String)
2025-08-11 17:25:38.116 [reactor-http-nio-6] [/] DEBUG c.j.p.controller.CatalogController - REST request to filter Catalogs with criteria, pagination metadata, and sorting: sort=createdOn, direction=DESC
2025-08-11 17:25:38.117 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [100a263c-18] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:25:38.117 [reactor-http-nio-6] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [100a263c-18] 0..1 [com.jade.platform.dto.PageResponse<com.jade.platform.dto.CatalogDTO>]
2025-08-11 17:25:38.124 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination and count: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 17:25:38.125 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog items by filter with pagination: CatalogFilter[title=null, description=null, industryId=null, industryName=null, categories=null, tags=null, minPrice=null, maxPrice=null, merchantId=null, minRating=null, maxRating=null, complianceStatus=null, availabilityStatus=null], Page request [number: 0, size 10, sort: createdOn: DESC]
2025-08-11 17:25:38.125 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing pageable filter query: org.springframework.data.relational.core.query.Query@5483cb38
2025-08-11 17:25:38.126 [reactor-tcp-nio-5] [/] DEBUG c.j.p.d.r.CustomCatalogRepositoryImpl - Executing count filter query: org.springframework.data.relational.core.query.Query@1366952
2025-08-11 17:25:38.142 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with pagination
2025-08-11 17:25:38.142 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Completed finding catalog items by filter with count: 51
2025-08-11 17:25:38.144 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [100a263c-18] Encoding [PageResponse[content=[CatalogDTO[publicId=6793e56a-d664-4ca6-8860-32aaf54a6cd3, title=Heart Health N (truncated)...]
2025-08-11 17:25:38.145 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [100a263c-18] Completed 200 OK
2025-08-11 17:25:38.145 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:25:49.473 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [efd633a5-19] HTTP GET "/favicon.ico"
2025-08-11 17:25:49.474 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:25:49.476 [reactor-http-nio-7] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [efd633a5-19] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:25:49.476 [reactor-http-nio-7] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [efd633a5-19] Resource not found
2025-08-11 17:25:49.476 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [efd633a5-19] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:25:49.476 [reactor-http-nio-7] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:25:49.477 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [efd633a5-19] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:25:49.477 [reactor-http-nio-7] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [efd633a5-19] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:25:49.478 [reactor-http-nio-7] [/] DEBUG org.springframework.web.HttpLogging - [efd633a5-19] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:25:49.479 [reactor-http-nio-7] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [efd633a5-19] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:25:49.479 [reactor-http-nio-7] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:26:05.058 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [95b37c28-20] HTTP GET "/favicon.ico"
2025-08-11 17:26:05.060 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/favicon.ico
2025-08-11 17:26:05.061 [reactor-http-nio-8] [/] DEBUG o.s.w.r.h.SimpleUrlHandlerMapping - [95b37c28-20] Mapped to ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]
2025-08-11 17:26:05.062 [reactor-http-nio-8] [/] DEBUG o.s.w.r.resource.ResourceWebHandler - [95b37c28-20] Resource not found
2025-08-11 17:26:05.064 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [95b37c28-20] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleGenericException(Exception)
2025-08-11 17:26:05.064 [reactor-http-nio-8] [/] ERROR c.j.p.e.GlobalExceptionHandler - Unhandled exception
org.springframework.web.reactive.resource.NoResourceFoundException: 404 NOT_FOUND "No static resource favicon.ico."
	at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:434)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onComplete(FluxConcatMapNoPrefetch.java:241)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:357)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2570)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:870)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:796)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 17:26:05.066 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [95b37c28-20] Using 'application/problem+json' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/problem+json, text/event-stream]
2025-08-11 17:26:05.066 [reactor-http-nio-8] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [95b37c28-20] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:26:05.066 [reactor-http-nio-8] [/] DEBUG org.springframework.web.HttpLogging - [95b37c28-20] Encoding [ProblemDetail[type='about:blank', title='Server Error', status=500, detail='An unexpected error occu (truncated)...]
2025-08-11 17:26:05.067 [reactor-http-nio-8] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [95b37c28-20] Completed 500 INTERNAL_SERVER_ERROR
2025-08-11 17:26:05.067 [reactor-http-nio-8] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 500 INTERNAL_SERVER_ERROR
2025-08-11 17:26:11.760 [reactor-http-nio-9] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [68432922-21] HTTP GET "/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a"
2025-08-11 17:26:11.761 [reactor-http-nio-9] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:26:11.762 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [68432922-21] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:26:11.764 [reactor-http-nio-9] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: a169b6ad-f275-4f4b-855e-ea43de28b24a
2025-08-11 17:26:11.767 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [68432922-21] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:26:11.767 [reactor-http-nio-9] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [68432922-21] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:26:11.780 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: a169b6ad-f275-4f4b-855e-ea43de28b24a (cache miss)
2025-08-11 17:26:11.795 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerAdapter - [68432922-21] Using @ExceptionHandler com.jade.platform.exception.GlobalExceptionHandler#handleResourceNotFoundException(ResourceNotFoundException)
2025-08-11 17:26:11.795 [reactor-tcp-nio-5] [/] DEBUG c.j.p.e.GlobalExceptionHandler - Handling resource not found exception: error.resource.notfound.catalog
2025-08-11 17:26:11.795 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [68432922-21] No match for [application/json], supported: [application/problem+json, text/event-stream]
2025-08-11 17:26:11.795 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [68432922-21] Using 'application/problem+json' given [application/problem+json, application/problem+xml] and supported [application/problem+json, text/event-stream]
2025-08-11 17:26:11.795 [reactor-tcp-nio-5] [/] DEBUG o.s.w.r.r.m.a.ResponseEntityResultHandler - [68432922-21] 0..1 [org.springframework.http.ProblemDetail]
2025-08-11 17:26:11.796 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [68432922-21] Encoding [ProblemDetail[type='about:blank', title='Resource Not Found', status=404, detail='error.resource.not (truncated)...]
2025-08-11 17:26:11.796 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [68432922-21] Completed 404 NOT_FOUND
2025-08-11 17:26:11.796 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 404 NOT_FOUND
2025-08-11 17:26:15.895 [reactor-http-nio-10] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [72a67f4a-22] HTTP GET "/api/v1/catalogs/6793e56a-d664-4ca6-8860-32aaf54a6cd3"
2025-08-11 17:26:15.898 [reactor-http-nio-10] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request started: GET http://localhost:9000/api/v1/catalogs/6793e56a-d664-4ca6-8860-32aaf54a6cd3
2025-08-11 17:26:15.899 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.RequestMappingHandlerMapping - [72a67f4a-22] Mapped to com.jade.platform.controller.CatalogController#getCatalogById(UUID)
2025-08-11 17:26:15.900 [reactor-http-nio-10] [/] DEBUG c.j.p.controller.CatalogController - REST request to get Catalog by ID: 6793e56a-d664-4ca6-8860-32aaf54a6cd3
2025-08-11 17:26:15.900 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [72a67f4a-22] Using 'application/json' given [application/json] and supported [application/json, application/*+json, application/x-ndjson, text/event-stream]
2025-08-11 17:26:15.900 [reactor-http-nio-10] [/] DEBUG o.s.w.r.r.m.a.ResponseBodyResultHandler - [72a67f4a-22] 0..1 [com.jade.platform.dto.CatalogDTO]
2025-08-11 17:26:15.903 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Finding catalog item by public ID: 6793e56a-d664-4ca6-8860-32aaf54a6cd3 (cache miss)
2025-08-11 17:26:15.907 [reactor-tcp-nio-5] [/] DEBUG c.j.platform.service.CatalogService - Found catalog item with public ID: 6793e56a-d664-4ca6-8860-32aaf54a6cd3
2025-08-11 17:26:15.910 [reactor-tcp-nio-5] [/] DEBUG org.springframework.web.HttpLogging - [72a67f4a-22] Encoding [CatalogDTO[publicId=6793e56a-d664-4ca6-8860-32aaf54a6cd3, title=Heart Health Natural Supplement, des (truncated)...]
2025-08-11 17:26:15.911 [reactor-tcp-nio-5] [/] DEBUG o.s.w.s.a.HttpWebHandlerAdapter - [72a67f4a-22] Completed 200 OK
2025-08-11 17:26:15.912 [reactor-tcp-nio-5] [/] DEBUG c.j.p.config.RequestLoggingFilter - Request completed with status: 200 OK
2025-08-11 17:26:21.690 [SpringApplicationShutdownHook] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-11 17:26:21.704 [netty-shutdown] [/] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
